using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace WindowsFormsApp3
{
    public partial class Query : Form
    {
        static public Teacher[] T1;
        static public Course[] C1;
        static public Student[] S1;

        string[] ID;
        string[] name;
        string[] Salery;
        string[] courseID;

        string[] c_ID;
        string[] c_name;
        string[] c_Time;
        string[] c_grade;

        string[] s_ID ;
        string[] s_name ;
        string[] s_GPA ;
        string[] s_coursename ;

        bool ok=true;
        public Query()
        {
            InitializeComponent();

            T1 = methods.Get_Teacher();
            C1 = methods.Get_Course();
            S1 = methods.Get_Student();

            ID = new string[T1.Length];
            name = new string[T1.Length];
            Salery = new string[T1.Length];
            courseID = new string[T1.Length];

            c_ID = new string[C1.Length];
            c_name = new string[C1.Length];
            c_Time = new string[C1.Length];
            c_grade = new string[C1.Length];

            s_ID = new string[S1.Length];
            s_name = new string[S1.Length];
            s_GPA = new string[S1.Length];
            s_coursename = new string[S1.Length];

            panel1.Visible = true;
            panel3.Visible = false;
            panel4.Visible = false;
            Student.Visible = false;
        }

        private void btm1_Click_1(object sender, EventArgs e)
        {
            dgvDisplay.Rows.Clear();

            if (cmbFiles.Text.Equals("Teacher.xml"))
            {
                panel1.Visible = false;
                panel3.Visible = true;

                dgvDisplay.Rows.Clear();
                dgvDisplay.Columns.Clear();

                if (dgvDisplay.ColumnCount == 0)
                {
                    dgvDisplay.Columns.Add("ID", "ID");
                    dgvDisplay.Columns.Add("Name", "Name");
                    dgvDisplay.Columns.Add("Salery", "Salery");
                    dgvDisplay.Columns.Add("Course Name", "Course Name");
                }

                for (int i = 0; i < T1.Length; i++)
                {
                    for (int j = 0; j < C1.Length; j++)
                    {
                        if (T1[i].CourseID.Equals(C1[j].ID))
                        {
                            T1[i].CourseID = C1[j].Name;
                        }
                    }
                }

                for (int i = 0; i < T1.Length; i++)
                {
                    dgvDisplay.Rows.Add(new string[] { T1[i].ID, T1[i].Name, T1[i].Salary.ToString(), T1[i].CourseID });
                }
            }
            if (cmbFiles.Text.Equals("Course.xml"))
            {
                panel1.Visible = false;
                panel4.Visible = true;

                dgvDisplay.Rows.Clear();
                dgvDisplay.Columns.Clear();

                if (dgvDisplay.ColumnCount == 0)
                {
                    dgvDisplay.Columns.Add("ID", "ID");
                    dgvDisplay.Columns.Add("Name", "Name");
                    dgvDisplay.Columns.Add("Time", "Time");
                    dgvDisplay.Columns.Add("Grade Of Course", "Grade Of Course");
                }

                for (int i = 0; i < C1.Length; i++)
                {
                    dgvDisplay.Rows.Add(new string[] { C1[i].ID, C1[i].Name, C1[i].Hours.ToString(), C1[i].Grade.ToString() });
                }

            }
            if (cmbFiles.Text.Equals("Student.xml"))
            {
                
                panel1.Visible = false;
                Student.Visible = true;

                dgvDisplay.Rows.Clear();
                dgvDisplay.Columns.Clear();

                if (dgvDisplay.ColumnCount == 0)
                {
                    dgvDisplay.Columns.Add("ID", "ID");
                    dgvDisplay.Columns.Add("Name", "Name");
                    dgvDisplay.Columns.Add("GPA", "GPA");
                    dgvDisplay.Columns.Add("Course(s) Name", "Course(s) Name");
                }

                if (ok == true)
                {
                    for (int i = 0; i < S1.Length; i++)
                    {
                        string[] Temp = S1[i].CoursesID.Split(',');
                        S1[i].CoursesID = "";

                        for (int k = 0; k < Temp.Length; k++)
                        {
                            for (int j = 0; j < C1.Length; j++)
                            {
                                if (Temp[k].Equals(C1[j].ID))
                                {
                                    S1[i].CoursesID += " " + C1[j].Name;
                                }
                            }
                        }
                    }

                    ok = false;
                }

                for (int i = 0; i < S1.Length; i++)
                {
                    dgvDisplay.Rows.Add(new string[] { S1[i].ID, S1[i].Name, S1[i].GPA.ToString(), S1[i].CoursesID });
                }
            }
        }

        private void panel3_Paint(object sender, PaintEventArgs e)
        {

        }

        private void checkedListBox1_SelectedIndexChanged(object sender, EventArgs e)
        {
        }

        private void radioButton5_CheckedChanged(object sender, EventArgs e)
        {
            textBox1.Text = "Enter Values Separeted By Comma";
        }

        private void comboBox3_SelectedIndexChanged(object sender, EventArgs e)
        {
            if (comboBox3.Text.Equals("IN"))
            {
                textBox3.Text = "Enter Values Separeted By Comma";
            }
        }

        private void comboBox5_SelectedIndexChanged(object sender, EventArgs e)
        {
            if (comboBox5.Text.Equals("IN"))
            {
                textBox4.Text = "Enter Values Separeted By ,";
            }
        }

        private void button2_Click(object sender, EventArgs e)
        {
            while (checkedListBox1.CheckedIndices.Count > 0)
            {
                checkedListBox1.SetItemChecked(checkedListBox1.CheckedIndices[0], false);
            }
            comboBox1.Items.Clear();
            comboBox2.Items.Clear();
            comboBox6.Items.Clear();
            radioButton1.Checked = false;
            radioButton2.Checked = false;
            radioButton3.Checked = false;
            radioButton4.Checked = false;
            radioButton5.Checked = false;
            radioButton6.Checked = false;
            radioButton7.Checked = false;
            radioButton8.Checked = false;
            radioButton9.Checked = false;
            radioButton10.Checked = false;
            radioButton11.Checked = false;
            radioButton12.Checked = false;
            textBox1.Text = "";
            textBox2.Text = "";
            textBox3.Text = "";
            textBox4.Text = "";
            panel3.Visible = false;
            panel1.Visible = true;

        }

        private void button3_Click(object sender, EventArgs e)
        {
            int Count = 0;
            foreach (object item in checkedListBox1.CheckedItems)
                Count++;

            int i = 0;
            string[] Temp = new string[Count];
            ID = new string[T1.Length];
            name = new string[T1.Length];
            Salery = new string[T1.Length];
            courseID = new string[T1.Length];

            comboBox1.Items.Clear();
            comboBox2.Items.Clear();
            comboBox6.Items.Clear();

            foreach (object item in checkedListBox1.CheckedItems)
            {
                if (item.Equals("ID"))
                {
                    comboBox1.Items.Add("ID");
                    comboBox2.Items.Add("ID");
                    comboBox6.Items.Add("ID");
                    Temp[i] = "ID";
                    i++;
                }

                if (item.Equals("Name"))
                {
                    comboBox1.Items.Add("Name");
                    comboBox2.Items.Add("Name");
                    comboBox6.Items.Add("Name");
                    Temp[i] = "Name";
                    i++;
                }
                if (item.Equals("Salery"))
                {
                    comboBox1.Items.Add("Salery");
                    comboBox2.Items.Add("Salery");
                    comboBox6.Items.Add("Salery");
                    Temp[i] = "Salery";
                    i++;
                }
                if (item.Equals("Course Name"))
                {
                    comboBox1.Items.Add("Course Name");
                    comboBox2.Items.Add("Course Name");
                    comboBox6.Items.Add("Course Name");
                    Temp[i] = "Course Name";
                    i++;
                }
            }

            dgvDisplay.Rows.Clear();

            for (int k = 0; k < Temp.Length; k++)
            {
                for (int j = 0; j < T1.Length; j++)
                {
                    if (Temp[k].Equals("ID"))
                    {
                        ID[j] = T1[j].ID;
                    }
                    if (Temp[k].Equals("Name"))
                    {
                        name[j] = T1[j].Name;
                    }
                    if (Temp[k].Equals("Salery"))
                    {
                        Salery[j] = T1[j].Salary.ToString();
                    }
                    if (Temp[k].Equals("Course Name"))
                    {
                        courseID[j] = T1[j].CourseID;
                    }
                }
            }

            for (int j = 0; j < T1.Length; j++)
            {
                dgvDisplay.Rows.Add(new string[] { ID[j], name[j], Salery[j], courseID[j] });
            }

        }

        private void button4_Click(object sender, EventArgs e)
        {
            int Count = 0;
            foreach (object item in checkedListBox2.CheckedItems)
                Count++;

            int i = 0;
            string[] Temp = new string[Count];
            c_ID = new string[T1.Length];
            c_name = new string[T1.Length];
            c_Time = new string[T1.Length];
            c_grade = new string[T1.Length];
            comboBox10.Items.Clear();
            comboBox9.Items.Clear();
            comboBox4.Items.Clear();

            foreach (object item in checkedListBox2.CheckedItems)
            {
                if (item.Equals("ID"))
                {
                    comboBox10.Items.Add("ID");
                    comboBox9.Items.Add("ID");
                    comboBox4.Items.Add("ID");
                    Temp[i] = "ID";
                    i++;
                }

                if (item.Equals("Name"))
                {
                    comboBox10.Items.Add("Name");
                    comboBox9.Items.Add("Name");
                    comboBox4.Items.Add("Name");
                    Temp[i] = "Name";
                    i++;
                }
                if (item.Equals("Time"))
                {
                    comboBox10.Items.Add("Time");
                    comboBox9.Items.Add("Time");
                    comboBox4.Items.Add("Time");
                    Temp[i] = "Time";
                    i++;
                }
                if (item.Equals("Grade Of The Course"))
                {
                    comboBox10.Items.Add("Grade Of The Course");
                    comboBox9.Items.Add("Grade Of The Course");
                    comboBox4.Items.Add("Grade Of The Course");
                    Temp[i] = "Grade Of The Course";
                    i++;
                }
            }

            dgvDisplay.Rows.Clear();

            for (int k = 0; k < Temp.Length; k++)
            {
                for (int j = 0; j < C1.Length; j++)
                {
                    if (Temp[k].Equals("ID"))
                    {
                        c_ID[j] = C1[j].ID;
                    }
                    if (Temp[k].Equals("Name"))
                    {
                        c_name[j] = C1[j].Name;
                    }
                    if (Temp[k].Equals("Time"))
                    {
                        c_Time[j] = C1[j].Hours.ToString();
                    }
                    if (Temp[k].Equals("Grade Of The Course"))
                    {
                        c_grade[j] = C1[j].Grade.ToString();
                    }
                }
            }

            for (int j = 0; j < C1.Length; j++)
            {
                dgvDisplay.Rows.Add(new string[] { c_ID[j], c_name[j], c_Time[j], c_grade[j] });
            }

        }

        private void radioButton20_CheckedChanged(object sender, EventArgs e)
        {
            textBox7.Text = "Enter Values Separeted By Comma";

        }

        private void comboBox8_SelectedIndexChanged(object sender, EventArgs e)
        {
            if (comboBox8.Text.Equals("IN"))
            {
                textBox6.Text = "Enter Values Separeted By Comma";
            }
        }

        private void button7_Click(object sender, EventArgs e)
        {
            int Count = 0;
            foreach (object item in checkedListBox3.CheckedItems)
                Count++;

            int i = 0;
            string[] Temp = new string[Count];
            s_ID = new string[S1.Length];
            s_name = new string[S1.Length];
            s_GPA = new string[S1.Length];
            s_coursename = new string[S1.Length];

            comboBox11.Items.Clear();
            comboBox14.Items.Clear();
            comboBox15.Items.Clear();

            foreach (object item in checkedListBox3.CheckedItems)
            {
                if (item.Equals("ID"))
                {
                    comboBox11.Items.Add("ID");
                    comboBox14.Items.Add("ID");
                    comboBox15.Items.Add("ID");
                    Temp[i] = "ID";
                    i++;
                }

                if (item.Equals("Name"))
                {
                    comboBox11.Items.Add("Name");
                    comboBox14.Items.Add("Name");
                    comboBox15.Items.Add("Name");
                    Temp[i] = "Name";
                    i++;
                }
                if (item.Equals("GPA"))
                {
                    comboBox11.Items.Add("GPA");
                    comboBox14.Items.Add("GPA");
                    comboBox15.Items.Add("GPA");
                    Temp[i] = "GPA";
                    i++;
                }
                if (item.Equals("Course Name"))
                {
                    comboBox11.Items.Add("Course Name");
                    comboBox14.Items.Add("Course Name");
                    comboBox15.Items.Add("Course Name");
                    Temp[i] = "Course Name";
                    i++;
                }
            }

            dgvDisplay.Rows.Clear();

            for (int k = 0; k < Temp.Length; k++)
            {
                for (int j = 0; j < S1.Length; j++)
                {
                    if (Temp[k].Equals("ID"))
                    {
                        s_ID[j] = S1[j].ID;
                    }
                    if (Temp[k].Equals("Name"))
                    {
                        s_name[j] = S1[j].Name;
                    }
                    if (Temp[k].Equals("GPA"))
                    {
                        s_GPA[j] = S1[j].GPA.ToString();
                    }
                    if (Temp[k].Equals("Course Name"))
                    {
                        s_coursename[j] = S1[j].CoursesID;
                    }
                }
            }

            for (int j = 0; j < S1.Length; j++)
            {
                dgvDisplay.Rows.Add(new string[] { s_ID[j], s_name[j], s_GPA[j], s_coursename[j] });
            }
        }

        private void checkedListBox3_SelectedIndexChanged(object sender, EventArgs e)
        {

        }

        private void radioButton37_CheckedChanged(object sender, EventArgs e)
        {
            textBox10.Text = "Enter Values Separeted By Comma";

        }

        private void comboBox13_SelectedIndexChanged(object sender, EventArgs e)
        {
            if (comboBox13.Text.Equals("IN"))
            {
                textBox9.Text = "Enter Values Separeted By Comma";
            }
        }

        private void comboBox12_SelectedIndexChanged(object sender, EventArgs e)
        {
            if (comboBox12.Text.Equals("IN"))
            {
                textBox8.Text = "Enter Values Separeted By Comma";
            }
        }

        private void button8_Click(object sender, EventArgs e)
        {
            while (checkedListBox3.CheckedIndices.Count > 0)
            {
                checkedListBox3.SetItemChecked(checkedListBox3.CheckedIndices[0], false);
            }
            comboBox11.Items.Clear();
            comboBox14.Items.Clear();
            comboBox15.Items.Clear();
            radioButton30.Checked = false;
            radioButton31.Checked = false;
            radioButton32.Checked = false;
            radioButton33.Checked = false;
            radioButton34.Checked = false;
            radioButton35.Checked = false;
            radioButton36.Checked = false;
            radioButton37.Checked = false;
            radioButton38.Checked = false;
            radioButton39.Checked = false;
            radioButton40.Checked = false;
            radioButton41.Checked = false;
            textBox10.Text = "";
            textBox9.Text = "";
            textBox8.Text = "";
            textBox2.Text = "";
            Student.Visible = false;
            panel1.Visible = true;
        }

        private void comboBox7_SelectedIndexChanged(object sender, EventArgs e)
        {
            if (comboBox7.Text.Equals("IN"))
            {
                textBox5.Text = "Enter Values Separeted By Comma";
            }
        }

        private void button5_Click(object sender, EventArgs e)
        {
            while (checkedListBox2.CheckedIndices.Count > 0)
            {
                checkedListBox2.SetItemChecked(checkedListBox2.CheckedIndices[0], false);
            }
            comboBox4.Items.Clear();
            comboBox9.Items.Clear();
            comboBox10.Items.Clear();
            radioButton13.Checked = false;
            radioButton14.Checked = false;
            radioButton15.Checked = false;
            radioButton16.Checked = false;
            radioButton17.Checked = false;
            radioButton18.Checked = false;
            radioButton19.Checked = false;
            radioButton20.Checked = false;
            radioButton21.Checked = false;
            radioButton22.Checked = false;
            radioButton23.Checked = false;
            radioButton24.Checked = false;
            radioButton25.Checked = false;
            radioButton26.Checked = false;
            radioButton27.Checked = false;
            radioButton28.Checked = false;
            radioButton29.Checked = false;
            textBox7.Text = "";
            textBox6.Text = "";
            textBox5.Text = "";
            textBox2.Text = "";
            panel4.Visible = false;
            panel1.Visible = true;
        }

        private void button10_Click(object sender, EventArgs e)
        {
            dgvDisplay.Rows.Clear();
            string Value = comboBox1.Text;

            if (Value.Equals("ID"))
            {
                if (radioButton1.Checked)
                {
                    for (int i = 0; i < T1.Length; i++)
                    {
                        if (ID[i].Equals(textBox1.Text))
                        {

                            dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                        }
                    }
                }

                if (radioButton2.Checked)
                {
                    for (int i = 0; i < T1.Length; i++)
                    {
                        if (!ID[i].Equals(textBox1.Text))
                        {

                            dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                        }
                    }
                }

                if (radioButton4.Checked)
                {
                    for (int i = 0; i < T1.Length; i++)
                    {
                        if (int.Parse(ID[i]) > int.Parse(textBox1.Text))
                        {

                            dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                        }
                    }
                }

                if (radioButton3.Checked)
                {
                    for (int i = 0; i < T1.Length; i++)
                    {
                        if (int.Parse(ID[i]) < int.Parse(textBox1.Text))
                        {

                            dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                        }
                    }
                }

                if (radioButton5.Checked)
                {
                    string[] t = textBox1.Text.Split(',');
                    for (int i = 0; i < T1.Length; i++)
                    {
                        for (int j = 0; j < t.Length; j++)
                        {
                            if (ID[i].Equals(t[j]))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }
                }
            }

            if (Value.Equals("Name"))
            {
                if (radioButton1.Checked)
                {
                    for (int i = 0; i < T1.Length; i++)
                    {
                        if (name[i].Equals(textBox1.Text))
                        {

                            dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                        }
                    }
                }

                if (radioButton2.Checked)
                {
                    for (int i = 0; i < T1.Length; i++)
                    {
                        if (!name[i].Equals(textBox1.Text))
                        {

                            dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                        }
                    }
                }

                if (radioButton4.Checked)
                {
                    for (int i = 0; i < T1.Length; i++)
                    {
                        if (string.Compare(name[i], textBox1.Text) == 1)
                        {

                            dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                        }
                    }
                }

                if (radioButton3.Checked)
                {
                    for (int i = 0; i < T1.Length; i++)
                    {
                        if (string.Compare(name[i], textBox1.Text) == -1)
                        {

                            dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                        }
                    }
                }

                if (radioButton5.Checked)
                {
                    string[] t = textBox1.Text.Split(',');
                    for (int i = 0; i < T1.Length; i++)
                    {
                        for (int j = 0; j < t.Length; j++)
                        {
                            if (name[i].Equals(t[j]))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }
                }
            }

            if (Value.Equals("Salery"))
            {
                if (radioButton1.Checked)
                {
                    for (int i = 0; i < T1.Length; i++)
                    {
                        if (Salery[i].Equals(textBox1.Text))
                        {

                            dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                        }
                    }
                }

                if (radioButton2.Checked)
                {
                    for (int i = 0; i < T1.Length; i++)
                    {
                        if (!Salery[i].Equals(textBox1.Text))
                        {

                            dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                        }
                    }
                }

                if (radioButton4.Checked)
                {
                    for (int i = 0; i < T1.Length; i++)
                    {
                        if (int.Parse(Salery[i]) > int.Parse(textBox1.Text))
                        {

                            dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                        }
                    }
                }

                if (radioButton3.Checked)
                {
                    for (int i = 0; i < T1.Length; i++)
                    {
                        if (int.Parse(Salery[i]) < int.Parse(textBox1.Text))
                        {

                            dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                        }
                    }
                }

                if (radioButton5.Checked)
                {
                    string[] t = textBox1.Text.Split(',');
                    for (int i = 0; i < T1.Length; i++)
                    {
                        for (int j = 0; j < t.Length; j++)
                        {
                            if (Salery[i].Equals(t[j]))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }
                }
            }

            if (Value.Equals("Course Name"))
            {
                if (radioButton1.Checked)
                {
                    for (int i = 0; i < T1.Length; i++)
                    {
                        if (courseID[i].Equals(textBox1.Text))
                        {

                            dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                        }
                    }
                }

                if (radioButton2.Checked)
                {
                    for (int i = 0; i < T1.Length; i++)
                    {
                        if (!courseID[i].Equals(textBox1.Text))
                        {

                            dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                        }
                    }
                }

                if (radioButton4.Checked)
                {
                    for (int i = 0; i < T1.Length; i++)
                    {
                        if (string.Compare(courseID[i], textBox1.Text) == 1)
                        {

                            dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                        }
                    }
                }

                if (radioButton3.Checked)
                {
                    for (int i = 0; i < T1.Length; i++)
                    {
                        if (string.Compare(courseID[i], textBox1.Text) == -1)
                        {

                            dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                        }
                    }
                }

                if (radioButton5.Checked)
                {
                    string[] t = textBox1.Text.Split(',');
                    for (int i = 0; i < T1.Length; i++)
                    {
                        for (int j = 0; j < t.Length; j++)
                        {
                            if (courseID[i].Equals(t[j]))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }
                }
            }
        }

        private void radioButton6_CheckedChanged(object sender, EventArgs e)
        {
            try
            {

                int[] Temp = new int[dgvDisplay.Rows.Count - 1];
                int Sum = 0;
                for (int i = 0; i < dgvDisplay.Rows.Count - 1; i++)
                {
                    Temp[i] = int.Parse(dgvDisplay.Rows[i].Cells[2].Value.ToString());
                }

                for (int i = 0; i < Temp.Length; i++)
                {
                    Sum += Temp[i];
                }
                textBox2.Text = "SUM = " + Sum.ToString();
            }
            catch
            {
                MessageBox.Show("Must Select Salery From First Qusetion.");

            }
        }

        private void radioButton7_CheckedChanged(object sender, EventArgs e)
        {

            try
            {
                int[] Temp = new int[dgvDisplay.Rows.Count - 1];
                double Avg = 0.0;
                for (int i = 0; i < dgvDisplay.Rows.Count - 1; i++)
                {
                    Temp[i] = int.Parse(dgvDisplay.Rows[i].Cells[2].Value.ToString());
                }

                for (int i = 0; i < Temp.Length; i++)
                {
                    Avg += Temp[i];
                }
                Avg = Avg / (double)Temp.Length;
                textBox2.Text = "AVG = " + Avg.ToString();
            }
            catch
            {
                MessageBox.Show("Must Select Salery From First Qusetion.");
            }
        }

        private void radioButton8_CheckedChanged(object sender, EventArgs e)
        {
            try
            {
                int[] Temp = new int[dgvDisplay.Rows.Count - 1];
                for (int i = 0; i < dgvDisplay.Rows.Count - 1; i++)
                {
                    Temp[i] = int.Parse(dgvDisplay.Rows[i].Cells[2].Value.ToString());
                }

                textBox2.Text = "MAX = " + Temp.Max().ToString();
            }
            catch
            {
                MessageBox.Show("Must Select Salery From First Qusetion.");
            }
        }

        private void radioButton9_CheckedChanged(object sender, EventArgs e)
        {
            try
            {
                int[] Temp = new int[dgvDisplay.Rows.Count - 1];
                for (int i = 0; i < dgvDisplay.Rows.Count - 1; i++)
                {
                    Temp[i] = int.Parse(dgvDisplay.Rows[i].Cells[2].Value.ToString());
                }

                textBox2.Text = "MIN = " + Temp.Min().ToString();
            }

            catch
            {
                MessageBox.Show("Must Select Salery From First Qusetion.");
            }
        }

        private void radioButton10_CheckedChanged(object sender, EventArgs e)
        {
            try
            {
                textBox2.Text = "COUNT = " + (dgvDisplay.Rows.Count - 1).ToString();
            }
            catch
            {


                MessageBox.Show("Must Select Salery From First Qusetion.");

            }
        }

        private void button11_Click(object sender, EventArgs e)
        {
            dgvDisplay.Rows.Clear();

            //ID First
            if (comboBox2.Text.Equals("ID") && comboBox6.Text.Equals("ID"))
            {
                string O1 = comboBox3.Text;
                string V1 = textBox3.Text;

                string O2 = comboBox5.Text;
                string V2 = textBox4.Text;

                if (radioButton11.Checked)
                {
                    //=first
                    if (O1.Equals("=") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (ID[i].Equals(textBox3.Text) && ID[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (ID[i].Equals(textBox3.Text) && !ID[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (ID[i].Equals(textBox3.Text) && int.Parse(ID[i]) > int.Parse(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (ID[i].Equals(textBox3.Text) && int.Parse(ID[i]) < int.Parse(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (ID[i].Equals(textBox3.Text) && ID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    //!=first
                    if (O1.Equals("!=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!ID[i].Equals(textBox3.Text) && !ID[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!ID[i].Equals(textBox3.Text) && ID[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!ID[i].Equals(textBox3.Text) && int.Parse(ID[i]) > int.Parse(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!ID[i].Equals(textBox3.Text) && int.Parse(ID[i]) < int.Parse(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (!ID[i].Equals(textBox3.Text) && ID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    //<First
                    if (O1.Equals("<") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (int.Parse(ID[i]) < int.Parse(textBox3.Text) && int.Parse(ID[i]) < int.Parse(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (int.Parse(ID[i]) < int.Parse(textBox3.Text) && ID[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (int.Parse(ID[i]) < int.Parse(textBox3.Text) && !ID[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (int.Parse(ID[i]) < int.Parse(textBox3.Text) && int.Parse(ID[i]) > int.Parse(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (int.Parse(ID[i]) < int.Parse(textBox3.Text) && ID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    //>first
                    if (O1.Equals(">") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (int.Parse(ID[i]) > int.Parse(textBox3.Text) && int.Parse(ID[i]) > int.Parse(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (int.Parse(ID[i]) > int.Parse(textBox3.Text) && ID[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (int.Parse(ID[i]) > int.Parse(textBox3.Text) && !ID[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (int.Parse(ID[i]) > int.Parse(textBox3.Text) && int.Parse(ID[i]) < int.Parse(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (int.Parse(ID[i]) > int.Parse(textBox3.Text) && ID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    //IN First
                    if (O1.Equals("IN") && O2.Equals("IN"))
                    {
                        string[] t2 = textBox3.Text.Split(',');
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                for (int m = 0; m < t2.Length; m++)
                                {
                                    if (ID[i].Equals(t2[m]) && ID[i].Equals(t[j]))
                                    {

                                        dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    }
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("="))
                    {
                        string[] t2 = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (ID[i].Equals(t2[m]) && ID[i].Equals(textBox4.Text))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("!="))
                    {
                        string[] t2 = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (ID[i].Equals(t2[m]) && !ID[i].Equals(textBox4.Text))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals(">"))
                    {
                        string[] t2 = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (ID[i].Equals(t2[m]) && int.Parse(ID[i]) > int.Parse(textBox4.Text))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("<"))
                    {
                        string[] t2 = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (ID[i].Equals(t2[m]) && int.Parse(ID[i]) < int.Parse(textBox4.Text))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                }
                if (radioButton12.Checked)
                {
                    //=first
                    if (O1.Equals("=") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (ID[i].Equals(textBox3.Text) || ID[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (ID[i].Equals(textBox3.Text) || !ID[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (ID[i].Equals(textBox3.Text) || int.Parse(ID[i]) > int.Parse(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (ID[i].Equals(textBox3.Text) || int.Parse(ID[i]) < int.Parse(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (ID[i].Equals(textBox3.Text) || ID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //!=first
                    if (O1.Equals("!=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!ID[i].Equals(textBox3.Text) || !ID[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!ID[i].Equals(textBox3.Text) || ID[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!ID[i].Equals(textBox3.Text) || int.Parse(ID[i]) > int.Parse(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!ID[i].Equals(textBox3.Text) || int.Parse(ID[i]) < int.Parse(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (!ID[i].Equals(textBox3.Text) || ID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //<First
                    if (O1.Equals("<") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (int.Parse(ID[i]) < int.Parse(textBox3.Text) || int.Parse(ID[i]) < int.Parse(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (int.Parse(ID[i]) < int.Parse(textBox3.Text) || ID[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (int.Parse(ID[i]) < int.Parse(textBox3.Text) || !ID[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (int.Parse(ID[i]) < int.Parse(textBox3.Text) || int.Parse(ID[i]) > int.Parse(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (int.Parse(ID[i]) < int.Parse(textBox3.Text) || ID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //>first
                    if (O1.Equals(">") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (int.Parse(ID[i]) > int.Parse(textBox3.Text) || int.Parse(ID[i]) > int.Parse(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (int.Parse(ID[i]) > int.Parse(textBox3.Text) || ID[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (int.Parse(ID[i]) > int.Parse(textBox3.Text) || !ID[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (int.Parse(ID[i]) > int.Parse(textBox3.Text) || int.Parse(ID[i]) < int.Parse(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (int.Parse(ID[i]) > int.Parse(textBox3.Text) || ID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //IN First
                    if (O1.Equals("IN") && O2.Equals("IN"))
                    {
                        string[] t2 = textBox3.Text.Split(',');
                        string[] t = textBox4.Text.Split(',');
                        List<int> z = new List<int> { };
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (ID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    z.Add(i);
                                    break;
                                }
                            }
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (ID[i].Equals(t2[m]))
                                {
                                    if (!z.Contains(i))
                                    {
                                        dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                        break;
                                    }
                                }
                            }

                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("="))
                    {
                        string[] t2 = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (ID[i].Equals(t2[m]) || ID[i].Equals(textBox4.Text))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("!="))
                    {
                        string[] t2 = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (ID[i].Equals(t2[m]) || !ID[i].Equals(textBox4.Text))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals(">"))
                    {
                        string[] t2 = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (ID[i].Equals(t2[m]) || int.Parse(ID[i]) > int.Parse(textBox4.Text))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("<"))
                    {
                        string[] t2 = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (ID[i].Equals(t2[m]) || int.Parse(ID[i]) < int.Parse(textBox4.Text))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    break;
                                }
                            }
                        }
                    }
                }

            }

            //==========================================================================

            if (comboBox2.Text.Equals("ID") && comboBox6.Text.Equals("Name"))
            {
                string O1 = comboBox3.Text;
                string V1 = textBox3.Text;

                string O2 = comboBox5.Text;
                string V2 = textBox4.Text;

                if (radioButton11.Checked)
                {
                    //=first
                    if (O1.Equals("=") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (ID[i].Equals(textBox3.Text) && name[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (ID[i].Equals(textBox3.Text) && !name[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (ID[i].Equals(textBox3.Text) && string.Compare(name[i], textBox4.Text) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (ID[i].Equals(textBox3.Text) && string.Compare(name[i], textBox4.Text) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (ID[i].Equals(textBox3.Text) && name[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    //!=first
                    if (O1.Equals("!=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!ID[i].Equals(textBox3.Text) && !name[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!ID[i].Equals(textBox3.Text) && name[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!ID[i].Equals(textBox3.Text) && string.Compare(name[i], textBox4.Text) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!ID[i].Equals(textBox3.Text) && string.Compare(name[i], textBox4.Text) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (!ID[i].Equals(textBox3.Text) && name[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    //<First
                    if (O1.Equals("<") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (int.Parse(ID[i]) < int.Parse(textBox3.Text) && string.Compare(name[i], textBox4.Text) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (int.Parse(ID[i]) < int.Parse(textBox3.Text) && name[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (int.Parse(ID[i]) < int.Parse(textBox3.Text) && !name[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (int.Parse(ID[i]) < int.Parse(textBox3.Text) && string.Compare(name[i], textBox4.Text) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (int.Parse(ID[i]) < int.Parse(textBox3.Text) && name[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    //>first
                    if (O1.Equals(">") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (int.Parse(ID[i]) > int.Parse(textBox3.Text) && string.Compare(name[i], textBox4.Text) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (int.Parse(ID[i]) > int.Parse(textBox3.Text) && name[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (int.Parse(ID[i]) > int.Parse(textBox3.Text) && !name[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (int.Parse(ID[i]) > int.Parse(textBox3.Text) && string.Compare(name[i], textBox4.Text) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (int.Parse(ID[i]) > int.Parse(textBox3.Text) && name[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    //IN First
                    if (O1.Equals("IN") && O2.Equals("IN"))
                    {
                        string[] t2 = textBox3.Text.Split(',');
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                for (int m = 0; m < t2.Length; m++)
                                {
                                    if (ID[i].Equals(t2[m]) && name[i].Equals(t[j]))
                                    {

                                        dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    }
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("="))
                    {
                        string[] t2 = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (ID[i].Equals(t2[m]) && name[i].Equals(textBox4.Text))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("!="))
                    {
                        string[] t2 = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (ID[i].Equals(t2[m]) && !name[i].Equals(textBox4.Text))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals(">"))
                    {
                        string[] t2 = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (ID[i].Equals(t2[m]) && string.Compare(name[i], textBox4.Text) == 1)
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("<"))
                    {
                        string[] t2 = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (ID[i].Equals(t2[m]) && string.Compare(name[i], textBox4.Text) == -1)
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                }
                if (radioButton12.Checked)
                {
                    //=first
                    if (O1.Equals("=") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (ID[i].Equals(textBox3.Text) || name[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (ID[i].Equals(textBox3.Text) || !name[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (ID[i].Equals(textBox3.Text) || string.Compare(name[i], textBox4.Text) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (ID[i].Equals(textBox3.Text) || string.Compare(name[i], textBox4.Text) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (ID[i].Equals(textBox3.Text) || name[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //!=first
                    if (O1.Equals("!=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!ID[i].Equals(textBox3.Text) || !name[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!ID[i].Equals(textBox3.Text) || name[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!ID[i].Equals(textBox3.Text) || string.Compare(name[i], textBox4.Text) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!ID[i].Equals(textBox3.Text) || string.Compare(name[i], textBox4.Text) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (!ID[i].Equals(textBox3.Text) || name[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //<First
                    if (O1.Equals("<") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (int.Parse(ID[i]) < int.Parse(textBox3.Text) || string.Compare(name[i], textBox4.Text) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (int.Parse(ID[i]) < int.Parse(textBox3.Text) || name[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (int.Parse(ID[i]) < int.Parse(textBox3.Text) || !name[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (int.Parse(ID[i]) < int.Parse(textBox3.Text) || string.Compare(name[i], textBox4.Text) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (int.Parse(ID[i]) < int.Parse(textBox3.Text) || name[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //>first
                    if (O1.Equals(">") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (int.Parse(ID[i]) > int.Parse(textBox3.Text) || string.Compare(name[i], textBox4.Text) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (int.Parse(ID[i]) > int.Parse(textBox3.Text) || name[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (int.Parse(ID[i]) > int.Parse(textBox3.Text) || !name[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (int.Parse(ID[i]) > int.Parse(textBox3.Text) || string.Compare(name[i], textBox4.Text) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (int.Parse(ID[i]) > int.Parse(textBox3.Text) || name[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //IN First
                    if (O1.Equals("IN") && O2.Equals("IN"))
                    {
                        string[] t2 = textBox3.Text.Split(',');
                        string[] t = textBox4.Text.Split(',');
                        List<int> z = new List<int> { };
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (name[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    z.Add(i);
                                    break;
                                }
                            }
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (ID[i].Equals(t2[m]))
                                {
                                    if (!z.Contains(i))
                                    {
                                        dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                        break;
                                    }
                                }
                            }

                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("="))
                    {
                        string[] t2 = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (ID[i].Equals(t2[m]) || name[i].Equals(textBox4.Text))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("!="))
                    {
                        string[] t2 = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (ID[i].Equals(t2[m]) || !name[i].Equals(textBox4.Text))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals(">"))
                    {
                        string[] t2 = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (ID[i].Equals(t2[m]) || string.Compare(name[i], textBox4.Text) == 1)
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("<"))
                    {
                        string[] t2 = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (ID[i].Equals(t2[m]) || string.Compare(name[i], textBox4.Text) == -1)
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    break;
                                }
                            }
                        }
                    }
                }

            }
            //===================================================================
            if (comboBox2.Text.Equals("ID") && comboBox6.Text.Equals("Salery"))
            {
                string O1 = comboBox3.Text;
                string V1 = textBox3.Text;

                string O2 = comboBox5.Text;
                string V2 = textBox4.Text;

                if (radioButton11.Checked)
                {
                    //=first
                    if (O1.Equals("=") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (ID[i].Equals(textBox3.Text) && Salery[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (ID[i].Equals(textBox3.Text) && !Salery[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (ID[i].Equals(textBox3.Text) && double.Parse(Salery[i]) > double.Parse(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (ID[i].Equals(textBox3.Text) && double.Parse(Salery[i]) < double.Parse(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (ID[i].Equals(textBox3.Text) && Salery[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    //!=first
                    if (O1.Equals("!=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!ID[i].Equals(textBox3.Text) && !Salery[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!ID[i].Equals(textBox3.Text) && Salery[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!ID[i].Equals(textBox3.Text) && double.Parse(Salery[i]) > double.Parse(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!ID[i].Equals(textBox3.Text) && double.Parse(Salery[i]) < double.Parse(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (!ID[i].Equals(textBox3.Text) && Salery[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    //<First
                    if (O1.Equals("<") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (int.Parse(ID[i]) < int.Parse(textBox3.Text) && double.Parse(Salery[i]) < double.Parse(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (int.Parse(ID[i]) < int.Parse(textBox3.Text) && Salery[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (int.Parse(ID[i]) < int.Parse(textBox3.Text) && !Salery[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (int.Parse(ID[i]) < int.Parse(textBox3.Text) && double.Parse(Salery[i]) > double.Parse(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (int.Parse(ID[i]) < int.Parse(textBox3.Text) && Salery[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    //>first
                    if (O1.Equals(">") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (int.Parse(ID[i]) > int.Parse(textBox3.Text) && double.Parse(Salery[i]) > double.Parse(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (int.Parse(ID[i]) > int.Parse(textBox3.Text) && Salery[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (int.Parse(ID[i]) > int.Parse(textBox3.Text) && !Salery[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (int.Parse(ID[i]) > int.Parse(textBox3.Text) && double.Parse(Salery[i]) < double.Parse(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (int.Parse(ID[i]) > int.Parse(textBox3.Text) && Salery[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    //IN First
                    if (O1.Equals("IN") && O2.Equals("IN"))
                    {
                        string[] t2 = textBox3.Text.Split(',');
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                for (int m = 0; m < t2.Length; m++)
                                {
                                    if (ID[i].Equals(t2[m]) && Salery[i].Equals(t[j]))
                                    {

                                        dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    }
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("="))
                    {
                        string[] t2 = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (ID[i].Equals(t2[m]) && Salery[i].Equals(textBox4.Text))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("!="))
                    {
                        string[] t2 = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (ID[i].Equals(t2[m]) && !Salery[i].Equals(textBox4.Text))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals(">"))
                    {
                        string[] t2 = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (ID[i].Equals(t2[m]) && double.Parse(Salery[i]) > double.Parse(textBox4.Text))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("<"))
                    {
                        string[] t2 = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (ID[i].Equals(t2[m]) && double.Parse(Salery[i]) < double.Parse(textBox4.Text))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                }
                if (radioButton12.Checked)
                {
                    //=first
                    if (O1.Equals("=") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (ID[i].Equals(textBox3.Text) || Salery[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (ID[i].Equals(textBox3.Text) || !Salery[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (ID[i].Equals(textBox3.Text) || double.Parse(Salery[i]) > double.Parse(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (ID[i].Equals(textBox3.Text) || double.Parse(Salery[i]) < double.Parse(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (ID[i].Equals(textBox3.Text) || Salery[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //!=first
                    if (O1.Equals("!=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!ID[i].Equals(textBox3.Text) || !Salery[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!ID[i].Equals(textBox3.Text) || Salery[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!ID[i].Equals(textBox3.Text) || double.Parse(Salery[i]) > double.Parse(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!ID[i].Equals(textBox3.Text) || double.Parse(Salery[i]) < double.Parse(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (!ID[i].Equals(textBox3.Text) || Salery[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //<First
                    if (O1.Equals("<") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (int.Parse(ID[i]) < int.Parse(textBox3.Text) || double.Parse(Salery[i]) < double.Parse(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (int.Parse(ID[i]) < int.Parse(textBox3.Text) || Salery[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (int.Parse(ID[i]) < int.Parse(textBox3.Text) || !Salery[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (int.Parse(ID[i]) < int.Parse(textBox3.Text) || double.Parse(Salery[i]) > double.Parse(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (int.Parse(ID[i]) < int.Parse(textBox3.Text) || Salery[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //>first
                    if (O1.Equals(">") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (int.Parse(ID[i]) > int.Parse(textBox3.Text) || double.Parse(Salery[i]) > double.Parse(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (int.Parse(ID[i]) > int.Parse(textBox3.Text) || Salery[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (int.Parse(ID[i]) > int.Parse(textBox3.Text) || !Salery[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (int.Parse(ID[i]) > int.Parse(textBox3.Text) || double.Parse(Salery[i]) < double.Parse(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (int.Parse(ID[i]) > int.Parse(textBox3.Text) || Salery[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //IN First
                    if (O1.Equals("IN") && O2.Equals("IN"))
                    {
                        string[] t2 = textBox3.Text.Split(',');
                        string[] t = textBox4.Text.Split(',');
                        List<int> z = new List<int> { };
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (Salery[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    z.Add(i);
                                    break;
                                }
                            }
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (ID[i].Equals(t2[m]))
                                {
                                    if (!z.Contains(i))
                                    {
                                        dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                        break;
                                    }
                                }
                            }

                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("="))
                    {
                        string[] t2 = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (ID[i].Equals(t2[m]) || Salery[i].Equals(textBox4.Text))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("!="))
                    {
                        string[] t2 = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (ID[i].Equals(t2[m]) || !Salery[i].Equals(textBox4.Text))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals(">"))
                    {
                        string[] t2 = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (ID[i].Equals(t2[m]) || double.Parse(Salery[i]) > double.Parse(textBox4.Text))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("<"))
                    {
                        string[] t2 = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (ID[i].Equals(t2[m]) || double.Parse(Salery[i]) < double.Parse(textBox4.Text))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    break;
                                }
                            }
                        }
                    }
                }

            }
            //=============================================================================
            if (comboBox2.Text.Equals("ID") && comboBox6.Text.Equals("Course Name"))
            {
                string O1 = comboBox3.Text;
                string V1 = textBox3.Text;

                string O2 = comboBox5.Text;
                string V2 = textBox4.Text;

                if (radioButton11.Checked)
                {
                    //=first
                    if (O1.Equals("=") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (ID[i].Equals(textBox3.Text) && courseID[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (ID[i].Equals(textBox3.Text) && !courseID[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (ID[i].Equals(textBox3.Text) && string.Compare(courseID[i], textBox4.Text) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (ID[i].Equals(textBox3.Text) && string.Compare(courseID[i], textBox4.Text) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (ID[i].Equals(textBox3.Text) && courseID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    //!=first
                    if (O1.Equals("!=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!ID[i].Equals(textBox3.Text) && !courseID[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!ID[i].Equals(textBox3.Text) && courseID[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!ID[i].Equals(textBox3.Text) && string.Compare(courseID[i], textBox4.Text) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!ID[i].Equals(textBox3.Text) && string.Compare(courseID[i], textBox4.Text) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (!ID[i].Equals(textBox3.Text) && courseID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    //<First
                    if (O1.Equals("<") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (int.Parse(ID[i]) < int.Parse(textBox3.Text) && string.Compare(courseID[i], textBox4.Text) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (int.Parse(ID[i]) < int.Parse(textBox3.Text) && courseID[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (int.Parse(ID[i]) < int.Parse(textBox3.Text) && !courseID[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (int.Parse(ID[i]) < int.Parse(textBox3.Text) && string.Compare(courseID[i], textBox4.Text) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (int.Parse(ID[i]) < int.Parse(textBox3.Text) && courseID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    //>first
                    if (O1.Equals(">") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (int.Parse(ID[i]) > int.Parse(textBox3.Text) && string.Compare(courseID[i], textBox4.Text) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (int.Parse(ID[i]) > int.Parse(textBox3.Text) && courseID[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (int.Parse(ID[i]) > int.Parse(textBox3.Text) && !courseID[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (int.Parse(ID[i]) > int.Parse(textBox3.Text) && string.Compare(courseID[i], textBox4.Text) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (int.Parse(ID[i]) > int.Parse(textBox3.Text) && courseID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    //IN First
                    if (O1.Equals("IN") && O2.Equals("IN"))
                    {
                        string[] t2 = textBox3.Text.Split(',');
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                for (int m = 0; m < t2.Length; m++)
                                {
                                    if (ID[i].Equals(t2[m]) && courseID[i].Equals(t[j]))
                                    {

                                        dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    }
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("="))
                    {
                        string[] t2 = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (ID[i].Equals(t2[m]) && courseID[i].Equals(textBox4.Text))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("!="))
                    {
                        string[] t2 = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (ID[i].Equals(t2[m]) && !courseID[i].Equals(textBox4.Text))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals(">"))
                    {
                        string[] t2 = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (ID[i].Equals(t2[m]) && string.Compare(courseID[i], textBox4.Text) == 1)
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("<"))
                    {
                        string[] t2 = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (ID[i].Equals(t2[m]) && string.Compare(courseID[i], textBox4.Text) == -1)
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                }
                if (radioButton12.Checked)
                {
                    //=first
                    if (O1.Equals("=") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (ID[i].Equals(textBox3.Text) || courseID[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (ID[i].Equals(textBox3.Text) || !courseID[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (ID[i].Equals(textBox3.Text) || string.Compare(courseID[i], textBox4.Text) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (ID[i].Equals(textBox3.Text) || string.Compare(courseID[i], textBox4.Text) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (ID[i].Equals(textBox3.Text) || courseID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //!=first
                    if (O1.Equals("!=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!ID[i].Equals(textBox3.Text) || !courseID[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!ID[i].Equals(textBox3.Text) || courseID[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!ID[i].Equals(textBox3.Text) || string.Compare(courseID[i], textBox4.Text) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!ID[i].Equals(textBox3.Text) || string.Compare(courseID[i], textBox4.Text) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (!ID[i].Equals(textBox3.Text) || courseID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //<First
                    if (O1.Equals("<") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (int.Parse(ID[i]) < int.Parse(textBox3.Text) || string.Compare(courseID[i], textBox4.Text) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (int.Parse(ID[i]) < int.Parse(textBox3.Text) || courseID[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (int.Parse(ID[i]) < int.Parse(textBox3.Text) || !courseID[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (int.Parse(ID[i]) < int.Parse(textBox3.Text) || string.Compare(courseID[i], textBox4.Text) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (int.Parse(ID[i]) < int.Parse(textBox3.Text) || courseID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //>first
                    if (O1.Equals(">") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (int.Parse(ID[i]) > int.Parse(textBox3.Text) || string.Compare(courseID[i], textBox4.Text) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (int.Parse(ID[i]) > int.Parse(textBox3.Text) || courseID[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (int.Parse(ID[i]) > int.Parse(textBox3.Text) || !courseID[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (int.Parse(ID[i]) > int.Parse(textBox3.Text) || string.Compare(courseID[i], textBox4.Text) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (int.Parse(ID[i]) > int.Parse(textBox3.Text) || courseID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //IN First
                    if (O1.Equals("IN") && O2.Equals("IN"))
                    {
                        string[] t2 = textBox3.Text.Split(',');
                        string[] t = textBox4.Text.Split(',');
                        List<int> z = new List<int> { };
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (courseID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    z.Add(i);
                                    break;
                                }
                            }
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (ID[i].Equals(t2[m]))
                                {
                                    if (!z.Contains(i))
                                    {
                                        dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                        break;
                                    }
                                }
                            }

                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("="))
                    {
                        string[] t2 = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (ID[i].Equals(t2[m]) || courseID[i].Equals(textBox4.Text))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("!="))
                    {
                        string[] t2 = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (ID[i].Equals(t2[m]) || !courseID[i].Equals(textBox4.Text))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals(">"))
                    {
                        string[] t2 = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (ID[i].Equals(t2[m]) || string.Compare(courseID[i], textBox4.Text) == 1)
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("<"))
                    {
                        string[] t2 = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (ID[i].Equals(t2[m]) || string.Compare(courseID[i], textBox4.Text) == -1)
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    break;
                                }
                            }
                        }
                    }
                }

            }
            //======================================================================================================
            //Name First
            if (comboBox2.Text.Equals("Name") && comboBox6.Text.Equals("Name"))
            {
                string O1 = comboBox3.Text;
                string V1 = textBox3.Text;

                string O2 = comboBox5.Text;
                string V2 = textBox4.Text;

                if (radioButton11.Checked)
                {
                    //=first
                    if (O1.Equals("=") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (name[i].Equals(textBox3.Text) && name[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (name[i].Equals(textBox3.Text) && !name[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (name[i].Equals(textBox3.Text) && string.Compare(name[i], textBox4.Text) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }

                    }

                    if (O1.Equals("=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (name[i].Equals(textBox3.Text) && string.Compare(name[i], textBox4.Text) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }
                    if (O1.Equals("=") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (name[i].Equals(textBox3.Text) && name[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    //!=first
                    if (O1.Equals("!=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!name[i].Equals(textBox3.Text) && !name[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!name[i].Equals(textBox3.Text) && name[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!name[i].Equals(textBox3.Text) && string.Compare(name[i], textBox4.Text) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!name[i].Equals(textBox3.Text) && string.Compare(name[i], textBox4.Text) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (!name[i].Equals(textBox3.Text) && name[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    //<First
                    if (O1.Equals("<") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(name[i], textBox3.Text) == 1 && string.Compare(name[i], textBox4.Text) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(name[i], textBox3.Text) == -1 && name[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }

                    }

                    if (O1.Equals("<") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(name[i], textBox3.Text) == -1 && !name[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(name[i], textBox3.Text) == -1 && string.Compare(name[i], textBox4.Text) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (string.Compare(name[i], textBox3.Text) == -1 && name[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    //>first
                    if (O1.Equals(">") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(name[i], textBox3.Text) == 1 && string.Compare(name[i], textBox4.Text) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }

                    }

                    if (O1.Equals(">") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(name[i], textBox3.Text) == 1 && name[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(name[i], textBox3.Text) == 1 && !name[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(name[i], textBox3.Text) == 1 && string.Compare(name[i], textBox4.Text) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }

                    }

                    if (O1.Equals(">") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (string.Compare(name[i], textBox3.Text) == 1 && name[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    //IN First
                    if (O1.Equals("IN") && O2.Equals("IN"))
                    {
                        string[] t2 = textBox3.Text.Split(',');
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                for (int m = 0; m < t2.Length; m++)
                                {
                                    if (name[i].Equals(t2[m]) && name[i].Equals(t[j]))
                                    {

                                        dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    }
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("="))
                    {
                        string[] t2 = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (name[i].Equals(t2[m]) && name[i].Equals(textBox4.Text))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }


                    }

                    if (O1.Equals("IN") && O2.Equals("!="))
                    {
                        string[] t2 = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (name[i].Equals(t2[m]) && !name[i].Equals(textBox4.Text))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals(">"))
                    {
                        string[] t2 = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (name[i].Equals(t2[m]) && string.Compare(name[i], textBox4.Text) == 1)
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }

                    }

                    if (O1.Equals("IN") && O2.Equals("<"))
                    {
                        string[] t2 = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (name[i].Equals(t2[m]) && string.Compare(name[i], textBox4.Text) == -1)
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                }
                if (radioButton12.Checked)
                {
                    //=first
                    if (O1.Equals("=") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (name[i].Equals(textBox3.Text) || name[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (name[i].Equals(textBox3.Text) || !name[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals(">"))
                    {

                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (name[i].Equals(textBox3.Text) || string.Compare(name[i], textBox4.Text) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (name[i].Equals(textBox3.Text) || string.Compare(name[i], textBox4.Text) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }
                    if (O1.Equals("=") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (name[i].Equals(textBox3.Text) || name[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //!=first
                    if (O1.Equals("!=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!name[i].Equals(textBox3.Text) || !name[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!name[i].Equals(textBox3.Text) || name[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!name[i].Equals(textBox3.Text) || string.Compare(name[i], textBox4.Text) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }

                    }

                    if (O1.Equals("!=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!name[i].Equals(textBox3.Text) || string.Compare(name[i], textBox4.Text) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (!name[i].Equals(textBox3.Text) || name[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //<First
                    if (O1.Equals("<") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(name[i], textBox3.Text) == -1 || string.Compare(name[i], textBox4.Text) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(name[i], textBox3.Text) == -1 || name[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(name[i], textBox3.Text) == -1 || !name[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(name[i], textBox3.Text) == -1 || string.Compare(name[i], textBox4.Text) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (string.Compare(name[i], textBox3.Text) == -1 && name[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    //>first
                    if (O1.Equals(">") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(name[i], textBox3.Text) == 1 || string.Compare(name[i], textBox4.Text) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(name[i], textBox3.Text) == 1 || name[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(name[i], textBox3.Text) == 1 || !name[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(name[i], textBox3.Text) == 1 || string.Compare(name[i], textBox4.Text) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (string.Compare(name[i], textBox3.Text) == 1 || name[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //IN First
                    if (O1.Equals("IN") && O2.Equals("IN"))
                    {
                        string[] t2 = textBox3.Text.Split(',');
                        string[] t = textBox4.Text.Split(',');
                        List<int> z = new List<int> { };
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (name[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    z.Add(i);
                                    break;
                                }
                            }
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (name[i].Equals(t2[m]))
                                {
                                    if (!z.Contains(i))
                                    {
                                        dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                        break;
                                    }
                                }
                            }

                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("="))
                    {
                        string[] t2 = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (name[i].Equals(t2[m]) || name[i].Equals(textBox4.Text))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("!="))
                    {
                        string[] t2 = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (name[i].Equals(t2[m]) || !name[i].Equals(textBox4.Text))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals(">"))
                    {
                        string[] t2 = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (name[i].Equals(t2[m]) || string.Compare(name[i], textBox4.Text) == 1)
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("<"))
                    {
                        string[] t2 = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (name[i].Equals(t2[m]) || string.Compare(name[i], textBox4.Text) == -1)
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    break;
                                }
                            }
                        }
                    }
                }
            }
            //=================================================================================
            if (comboBox2.Text.Equals("Name") && comboBox6.Text.Equals("ID"))
            {
                string O1 = comboBox3.Text;
                string V1 = textBox3.Text;

                string O2 = comboBox5.Text;
                string V2 = textBox4.Text;

                if (radioButton11.Checked)
                {
                    //=first
                    if (O1.Equals("=") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (name[i].Equals(textBox3.Text) && ID[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (name[i].Equals(textBox3.Text) && !ID[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (name[i].Equals(textBox3.Text) && int.Parse(ID[i]) > int.Parse(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (name[i].Equals(textBox3.Text) && int.Parse(ID[i]) < int.Parse(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (name[i].Equals(textBox3.Text) && ID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    //!=first
                    if (O1.Equals("!=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!name[i].Equals(textBox3.Text) && !ID[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!name[i].Equals(textBox3.Text) && ID[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!name[i].Equals(textBox3.Text) && int.Parse(ID[i]) > int.Parse(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!name[i].Equals(textBox3.Text) && int.Parse(ID[i]) < int.Parse(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (!name[i].Equals(textBox3.Text) && ID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    //<First
                    if (O1.Equals("<") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(name[i], textBox3.Text) == -1 && int.Parse(ID[i]) < int.Parse(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if ((string.Compare(name[i], textBox3.Text) == -1 && ID[i].Equals(textBox4.Text)))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(name[i], textBox3.Text) == -1 && !ID[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(name[i], textBox3.Text) == -1 && int.Parse(ID[i]) > int.Parse(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (string.Compare(name[i], textBox3.Text) == -1 && ID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    //>first
                    if (O1.Equals(">") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(name[i], textBox3.Text) == 1 && int.Parse(ID[i]) > int.Parse(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(name[i], textBox3.Text) == 1 && ID[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(name[i], textBox3.Text) == 1 && !ID[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(name[i], textBox3.Text) == 1 && int.Parse(ID[i]) < int.Parse(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (string.Compare(name[i], textBox3.Text) == 1 && ID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    //IN First
                    if (O1.Equals("IN") && O2.Equals("IN"))
                    {
                        string[] t2 = textBox3.Text.Split(',');
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                for (int m = 0; m < t2.Length; m++)
                                {
                                    if (name[i].Equals(t2[m]) && ID[i].Equals(t[j]))
                                    {

                                        dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    }
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("="))
                    {
                        string[] t2 = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (name[i].Equals(t2[m]) && ID[i].Equals(textBox4.Text))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("!="))
                    {
                        string[] t2 = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (name[i].Equals(t2[m]) && !ID[i].Equals(textBox4.Text))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals(">"))
                    {
                        string[] t2 = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (name[i].Equals(t2[m]) && int.Parse(ID[i]) > int.Parse(textBox4.Text))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("<"))
                    {
                        string[] t2 = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (name[i].Equals(t2[m]) && int.Parse(ID[i]) < int.Parse(textBox4.Text))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                }
                if (radioButton12.Checked)
                {
                    //=first
                    if (O1.Equals("=") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (name[i].Equals(textBox3.Text) || ID[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (name[i].Equals(textBox3.Text) || !ID[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (name[i].Equals(textBox3.Text) || int.Parse(ID[i]) > int.Parse(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (name[i].Equals(textBox3.Text) || int.Parse(ID[i]) < int.Parse(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (name[i].Equals(textBox3.Text) || ID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //!=first
                    if (O1.Equals("!=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!name[i].Equals(textBox3.Text) || !ID[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!name[i].Equals(textBox3.Text) || ID[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!name[i].Equals(textBox3.Text) || int.Parse(ID[i]) > int.Parse(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!name[i].Equals(textBox3.Text) || int.Parse(ID[i]) < int.Parse(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (!name[i].Equals(textBox3.Text) || ID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //<First
                    if (O1.Equals("<") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(name[i], textBox3.Text) == -1 || int.Parse(ID[i]) < int.Parse(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(name[i], textBox3.Text) == -1 || ID[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(name[i], textBox3.Text) == -1 || !ID[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(name[i], textBox3.Text) == -1 || int.Parse(ID[i]) > int.Parse(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (string.Compare(name[i], textBox3.Text) == -1 || ID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //>first
                    if (O1.Equals(">") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(name[i], textBox3.Text) == 1 || int.Parse(ID[i]) > int.Parse(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(name[i], textBox3.Text) == 1 || ID[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(name[i], textBox3.Text) == 1 || !ID[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(name[i], textBox3.Text) == 1 || int.Parse(ID[i]) < int.Parse(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (string.Compare(name[i], textBox3.Text) == 1 || ID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //IN First
                    if (O1.Equals("IN") && O2.Equals("IN"))
                    {
                        string[] t2 = textBox3.Text.Split(',');
                        string[] t = textBox4.Text.Split(',');
                        List<int> z = new List<int> { };
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (ID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    z.Add(i);
                                    break;
                                }
                            }
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (name[i].Equals(t2[m]))
                                {
                                    if (!z.Contains(i))
                                    {
                                        dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                        break;
                                    }
                                }
                            }

                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("="))
                    {
                        string[] t2 = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (name[i].Equals(t2[m]) || ID[i].Equals(textBox4.Text))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("!="))
                    {
                        string[] t2 = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (name[i].Equals(t2[m]) || !ID[i].Equals(textBox4.Text))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals(">"))
                    {
                        string[] t2 = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (name[i].Equals(t2[m]) || int.Parse(ID[i]) > int.Parse(textBox4.Text))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("<"))
                    {
                        string[] t2 = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (name[i].Equals(t2[m]) || int.Parse(ID[i]) < int.Parse(textBox4.Text))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    break;
                                }
                            }
                        }
                    }
                }

            }

            if (comboBox2.Text.Equals("Name") && comboBox6.Text.Equals("Salery"))
            {
                string O1 = comboBox3.Text;
                string V1 = textBox3.Text;

                string O2 = comboBox5.Text;
                string V2 = textBox4.Text;

                if (radioButton11.Checked)
                {
                    //=first
                    if (O1.Equals("=") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (name[i].Equals(textBox3.Text) && Salery[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (name[i].Equals(textBox3.Text) && !Salery[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (name[i].Equals(textBox3.Text) && double.Parse(Salery[i]) > double.Parse(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (name[i].Equals(textBox3.Text) && double.Parse(Salery[i]) < double.Parse(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (name[i].Equals(textBox3.Text) && Salery[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    //!=first
                    if (O1.Equals("!=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!name[i].Equals(textBox3.Text) && !Salery[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!name[i].Equals(textBox3.Text) && Salery[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!name[i].Equals(textBox3.Text) && double.Parse(Salery[i]) > double.Parse(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!name[i].Equals(textBox3.Text) && double.Parse(Salery[i]) < double.Parse(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (!name[i].Equals(textBox3.Text) && Salery[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    //<First
                    if (O1.Equals("<") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(name[i], textBox3.Text) == -1 && double.Parse(Salery[i]) < double.Parse(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(name[i], textBox3.Text) == -1 && Salery[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(name[i], textBox3.Text) == -1 && !Salery[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(name[i], textBox3.Text) == -1 && double.Parse(Salery[i]) > double.Parse(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (string.Compare(name[i], textBox3.Text) == -1 && Salery[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    //>first
                    if (O1.Equals(">") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(name[i], textBox3.Text) == 1 && double.Parse(Salery[i]) > double.Parse(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(name[i], textBox3.Text) == 1 && Salery[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(name[i], textBox3.Text) == 1 && !Salery[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(name[i], textBox3.Text) == 1 && double.Parse(Salery[i]) < double.Parse(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (string.Compare(name[i], textBox3.Text) == 1 && Salery[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    //IN First
                    if (O1.Equals("IN") && O2.Equals("IN"))
                    {
                        string[] t2 = textBox3.Text.Split(',');
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                for (int m = 0; m < t2.Length; m++)
                                {
                                    if (name[i].Equals(t2[m]) && Salery[i].Equals(t[j]))
                                    {

                                        dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    }
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("="))
                    {
                        string[] t2 = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (name[i].Equals(t2[m]) && Salery[i].Equals(textBox4.Text))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("!="))
                    {
                        string[] t2 = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (name[i].Equals(t2[m]) && !Salery[i].Equals(textBox4.Text))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals(">"))
                    {
                        string[] t2 = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (name[i].Equals(t2[m]) && double.Parse(Salery[i]) > double.Parse(textBox4.Text))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("<"))
                    {
                        string[] t2 = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (name[i].Equals(t2[m]) && double.Parse(Salery[i]) < double.Parse(textBox4.Text))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                }
                if (radioButton12.Checked)
                {
                    //=first
                    if (O1.Equals("=") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (name[i].Equals(textBox3.Text) || Salery[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (name[i].Equals(textBox3.Text) || !Salery[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (name[i].Equals(textBox3.Text) || double.Parse(Salery[i]) > double.Parse(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (name[i].Equals(textBox3.Text) || double.Parse(Salery[i]) < double.Parse(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (name[i].Equals(textBox3.Text) || Salery[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //!=first
                    if (O1.Equals("!=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!name[i].Equals(textBox3.Text) || !Salery[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!name[i].Equals(textBox3.Text) || Salery[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!name[i].Equals(textBox3.Text) || double.Parse(Salery[i]) > double.Parse(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!name[i].Equals(textBox3.Text) || double.Parse(Salery[i]) < double.Parse(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (!name[i].Equals(textBox3.Text) || Salery[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //<First
                    if (O1.Equals("<") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(name[i], textBox3.Text) == -1 || double.Parse(Salery[i]) < double.Parse(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(name[i], textBox3.Text) == -1 || Salery[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(name[i], textBox3.Text) == -1 || !Salery[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(name[i], textBox3.Text) == -1 || double.Parse(Salery[i]) > double.Parse(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (string.Compare(name[i], textBox3.Text) == -1 || Salery[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //>first
                    if (O1.Equals(">") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(name[i], textBox3.Text) == 1 || double.Parse(Salery[i]) > double.Parse(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(name[i], textBox3.Text) == 1 || Salery[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(name[i], textBox3.Text) == 1 || !Salery[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(name[i], textBox3.Text) == 1 || double.Parse(Salery[i]) < double.Parse(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (string.Compare(name[i], textBox3.Text) == 1 || Salery[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //IN First
                    if (O1.Equals("IN") && O2.Equals("IN"))
                    {
                        string[] t2 = textBox3.Text.Split(',');
                        string[] t = textBox4.Text.Split(',');
                        List<int> z = new List<int> { };
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (Salery[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    z.Add(i);
                                    break;
                                }
                            }
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (name[i].Equals(t2[m]))
                                {
                                    if (!z.Contains(i))
                                    {
                                        dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                        break;
                                    }
                                }
                            }

                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("="))
                    {
                        string[] t2 = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (name[i].Equals(t2[m]) || Salery[i].Equals(textBox4.Text))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("!="))
                    {
                        string[] t2 = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (name[i].Equals(t2[m]) || !Salery[i].Equals(textBox4.Text))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals(">"))
                    {
                        string[] t2 = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (name[i].Equals(t2[m]) || double.Parse(Salery[i]) > double.Parse(textBox4.Text))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("<"))
                    {
                        string[] t2 = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (name[i].Equals(t2[m]) || double.Parse(Salery[i]) < double.Parse(textBox4.Text))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    break;
                                }
                            }
                        }
                    }
                }

            }

            if (comboBox2.Text.Equals("Name") && comboBox6.Text.Equals("CourseID"))
            {
                string O1 = comboBox3.Text;
                string V1 = textBox3.Text;

                string O2 = comboBox5.Text;
                string V2 = textBox4.Text;

                if (radioButton11.Checked)
                {
                    //=first
                    if (O1.Equals("=") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (name[i].Equals(textBox3.Text) && courseID[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (name[i].Equals(textBox3.Text) && !courseID[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (name[i].Equals(textBox3.Text) && string.Compare(courseID[i], textBox4.Text) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (name[i].Equals(textBox3.Text) && string.Compare(courseID[i], textBox4.Text) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (name[i].Equals(textBox3.Text) && courseID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    //!=first
                    if (O1.Equals("!=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!name[i].Equals(textBox3.Text) && !courseID[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!name[i].Equals(textBox3.Text) && courseID[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!name[i].Equals(textBox3.Text) && string.Compare(courseID[i], textBox4.Text) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!name[i].Equals(textBox3.Text) && string.Compare(courseID[i], textBox4.Text) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (!name[i].Equals(textBox3.Text) && courseID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    //<First
                    if (O1.Equals("<") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(name[i], textBox3.Text) == -1 && string.Compare(courseID[i], textBox4.Text) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(name[i], textBox3.Text) == -1 && courseID[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(name[i], textBox3.Text) == -1 && !courseID[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(name[i], textBox3.Text) == -1 && string.Compare(courseID[i], textBox4.Text) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (string.Compare(name[i], textBox3.Text) == -1 && courseID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    //>first
                    if (O1.Equals(">") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(name[i], textBox3.Text) == 1 && string.Compare(courseID[i], textBox4.Text) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(name[i], textBox3.Text) == 1 && courseID[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(name[i], textBox3.Text) == 1 && !courseID[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(name[i], textBox3.Text) == 1 && string.Compare(courseID[i], textBox4.Text) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (string.Compare(name[i], textBox3.Text) == 1 && courseID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    //IN First
                    if (O1.Equals("IN") && O2.Equals("IN"))
                    {
                        string[] t2 = textBox3.Text.Split(',');
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                for (int m = 0; m < t2.Length; m++)
                                {
                                    if (name[i].Equals(t2[m]) && courseID[i].Equals(t[j]))
                                    {

                                        dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    }
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("="))
                    {
                        string[] t2 = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (name[i].Equals(t2[m]) && courseID[i].Equals(textBox4.Text))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("!="))
                    {
                        string[] t2 = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (name[i].Equals(t2[m]) && !courseID[i].Equals(textBox4.Text))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals(">"))
                    {
                        string[] t2 = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (name[i].Equals(t2[m]) && string.Compare(courseID[i], textBox4.Text) == 1)
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("<"))
                    {
                        string[] t2 = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (name[i].Equals(t2[m]) && string.Compare(courseID[i], textBox4.Text) == -1)
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                }
                if (radioButton12.Checked)
                {
                    //=first
                    if (O1.Equals("=") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (name[i].Equals(textBox3.Text) || courseID[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (name[i].Equals(textBox3.Text) || !courseID[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (name[i].Equals(textBox3.Text) || string.Compare(courseID[i], textBox4.Text) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (name[i].Equals(textBox3.Text) || string.Compare(courseID[i], textBox4.Text) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (name[i].Equals(textBox3.Text) || courseID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //!=first
                    if (O1.Equals("!=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!name[i].Equals(textBox3.Text) || !courseID[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!name[i].Equals(textBox3.Text) || courseID[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!name[i].Equals(textBox3.Text) || string.Compare(courseID[i], textBox4.Text) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!name[i].Equals(textBox3.Text) || string.Compare(courseID[i], textBox4.Text) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (!name[i].Equals(textBox3.Text) || courseID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //<First
                    if (O1.Equals("<") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(name[i], textBox3.Text) == -1 || string.Compare(courseID[i], textBox4.Text) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(name[i], textBox3.Text) == -1 || courseID[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(name[i], textBox3.Text) == -1 || !courseID[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(name[i], textBox3.Text) == -1 || string.Compare(courseID[i], textBox4.Text) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (string.Compare(name[i], textBox3.Text) == -1 || courseID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //>first
                    if (O1.Equals(">") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(name[i], textBox3.Text) == 1 || string.Compare(courseID[i], textBox4.Text) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(name[i], textBox3.Text) == -1 || courseID[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(name[i], textBox3.Text) == 1 || !courseID[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(name[i], textBox3.Text) == 1 || string.Compare(courseID[i], textBox4.Text) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (string.Compare(name[i], textBox3.Text) == 1 || courseID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //IN First
                    if (O1.Equals("IN") && O2.Equals("IN"))
                    {
                        string[] t2 = textBox3.Text.Split(',');
                        string[] t = textBox4.Text.Split(',');
                        List<int> z = new List<int> { };
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (courseID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    z.Add(i);
                                    break;
                                }
                            }
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (name[i].Equals(t2[m]))
                                {
                                    if (!z.Contains(i))
                                    {
                                        dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                        break;
                                    }
                                }
                            }

                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("="))
                    {
                        string[] t2 = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (name[i].Equals(t2[m]) || courseID[i].Equals(textBox4.Text))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("!="))
                    {
                        string[] t2 = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (name[i].Equals(t2[m]) || !courseID[i].Equals(textBox4.Text))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals(">"))
                    {
                        string[] t2 = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (name[i].Equals(t2[m]) || string.Compare(courseID[i], textBox4.Text) == 1)
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("<"))
                    {
                        string[] t2 = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (name[i].Equals(t2[m]) || string.Compare(courseID[i], textBox4.Text) == -1)
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    break;
                                }
                            }
                        }
                    }
                }

            }

            //Salery First
            if (comboBox2.Text.Equals("Salery") && comboBox6.Text.Equals("Salery"))
            {
                string O1 = comboBox3.Text;
                string V1 = textBox3.Text;

                string O2 = comboBox5.Text;
                string V2 = textBox4.Text;

                if (radioButton11.Checked)
                {
                    //=first
                    if (O1.Equals("=") && O2.Equals("="))
                    {

                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < T1.Length; j++)
                            {
                                if (int.Parse(Salery[i]) == int.Parse(textBox3.Text) && int.Parse(Salery[j]) == int.Parse(textBox4.Text))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    dgvDisplay.Rows.Add(new string[] { ID[j], name[j], Salery[j], courseID[j] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < T1.Length; j++)
                            {
                                if (int.Parse(Salery[i]) == int.Parse(textBox3.Text) && int.Parse(Salery[j]) != int.Parse(textBox4.Text))
                                {
                                    dgvDisplay.Rows.Add(new string[] { ID[j], name[j], Salery[j], courseID[j] });
                                }
                            }

                        }
                    }

                    if (O1.Equals("=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < T1.Length; j++)
                            {

                                if (int.Parse(Salery[i]) == int.Parse(textBox3.Text) && string.Compare(Salery[j], textBox4.Text) == 1)
                                {
                                    dgvDisplay.Rows.Add(new string[] { ID[j], name[j], Salery[j], courseID[j] });
                                }
                            }

                        }
                    }

                    if (O1.Equals("=") && O2.Equals("<"))
                    {
                        bool ok = false;
                        for (int i = 0; i < T1.Length; i++)
                        {
                            ok = false;
                            for (int j = 0; j < T1.Length; j++)
                            {

                                if (int.Parse(Salery[i]) == int.Parse(textBox3.Text) && string.Compare(Salery[j], textBox4.Text) == -1)
                                {
                                    ok = true;
                                    dgvDisplay.Rows.Add(new string[] { ID[j], name[j], Salery[j], courseID[j] });
                                }
                            }

                            if (ok == true)
                            {
                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }

                        }
                    }

                    if (O1.Equals("=") && O2.Equals("IN"))
                    {
                        bool ok = false;
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            ok = false;
                            for (int k = 0; k < T1.Length; k++)
                            {
                                for (int j = 0; j < t.Length; j++)
                                {
                                    if (int.Parse(Salery[i]) == int.Parse(textBox3.Text) && int.Parse(Salery[k]) == int.Parse(t[j]))
                                    {
                                        ok = true;
                                        dgvDisplay.Rows.Add(new string[] { ID[k], name[k], Salery[k], courseID[k] });
                                    }
                                }
                            }
                            if (ok == true)
                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                        }
                    }

                    //!=first
                    if (O1.Equals("!=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (int.Parse(Salery[i]) != int.Parse(textBox3.Text) && int.Parse(Salery[i]) != int.Parse(textBox4.Text))
                            {
                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });

                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (int.Parse(Salery[i]) != int.Parse(textBox3.Text) && int.Parse(Salery[i]) == int.Parse(textBox4.Text))
                            {
                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });

                            }

                        }
                    }

                    if (O1.Equals("!=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (int.Parse(Salery[i]) != int.Parse(textBox3.Text) && int.Parse(Salery[i]) > int.Parse(textBox4.Text))
                            {
                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });

                            }

                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (int.Parse(Salery[i]) != int.Parse(textBox3.Text) && int.Parse(Salery[i]) < int.Parse(textBox4.Text))
                            {
                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });

                            }

                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (int.Parse(Salery[i]) != int.Parse(textBox3.Text) && int.Parse(Salery[i]) == int.Parse(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    //<First
                    if (O1.Equals("<") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (int.Parse(Salery[i]) < int.Parse(textBox3.Text) && int.Parse(Salery[i]) < int.Parse(textBox4.Text))
                            {
                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });

                            }

                        }
                    }

                    if (O1.Equals("<") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (int.Parse(Salery[i]) < int.Parse(textBox3.Text) && int.Parse(Salery[i]) == int.Parse(textBox4.Text))
                            {
                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });

                            }

                        }
                    }

                    if (O1.Equals("<") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (int.Parse(Salery[i]) < int.Parse(textBox3.Text) && int.Parse(Salery[i]) != int.Parse(textBox4.Text))
                            {
                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });

                            }

                        }
                    }

                    if (O1.Equals("<") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (int.Parse(Salery[i]) < int.Parse(textBox3.Text) && int.Parse(Salery[i]) > int.Parse(textBox4.Text))
                            {
                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });

                            }

                        }
                    }

                    if (O1.Equals("<") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (int.Parse(Salery[i]) < int.Parse(textBox3.Text) && int.Parse(Salery[i]) == int.Parse(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    //>first
                    if (O1.Equals(">") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (int.Parse(Salery[i]) > int.Parse(textBox3.Text) && int.Parse(Salery[i]) > int.Parse(textBox4.Text))
                            {
                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (int.Parse(Salery[i]) > int.Parse(textBox3.Text) && int.Parse(Salery[i]) == int.Parse(textBox4.Text))
                            {
                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (int.Parse(Salery[i]) > int.Parse(textBox3.Text) && int.Parse(Salery[i]) != int.Parse(textBox4.Text))
                            {
                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (int.Parse(Salery[i]) > int.Parse(textBox3.Text) && int.Parse(Salery[i]) < int.Parse(textBox4.Text))
                            {
                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (int.Parse(Salery[i]) > int.Parse(textBox3.Text) && int.Parse(Salery[i]) == int.Parse(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    //IN First
                    if (O1.Equals("IN") && O2.Equals("IN"))
                    {
                        string[] l = textBox3.Text.Split(',');
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int k = 0; k < l.Length; k++)
                            {
                                for (int j = 0; j < t.Length; j++)
                                {
                                    if (int.Parse(Salery[i]) == int.Parse(l[k]) && int.Parse(Salery[i]) == int.Parse(t[j]))
                                    {

                                        dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    }
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("="))
                    {
                        string[] l = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int k = 0; k < l.Length; k++)
                            {
                                if (int.Parse(Salery[i]) == int.Parse(l[k]) && int.Parse(Salery[i]) == int.Parse(textBox4.Text))
                                {
                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("!="))
                    {
                        string[] l = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int k = 0; k < l.Length; k++)
                            {
                                if (int.Parse(Salery[i]) == int.Parse(l[k]) && int.Parse(Salery[i]) != int.Parse(textBox4.Text))
                                {
                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }

                    }

                    if (O1.Equals("IN") && O2.Equals(">"))
                    {
                        string[] l = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int k = 0; k < l.Length; k++)
                            {
                                if (int.Parse(Salery[i]) == int.Parse(l[k]) && int.Parse(Salery[i]) > int.Parse(textBox4.Text))
                                {
                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }

                    }

                    if (O1.Equals("IN") && O2.Equals("<"))
                    {
                        string[] l = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int k = 0; k < l.Length; k++)
                            {
                                if (int.Parse(Salery[i]) == int.Parse(l[k]) && int.Parse(Salery[i]) < int.Parse(textBox4.Text))
                                {
                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }

                    }

                }
                if (radioButton12.Checked)
                {
                    //=first
                    if (O1.Equals("=") && O2.Equals("="))
                    {

                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < T1.Length; j++)
                            {
                                if (int.Parse(Salery[i]) == int.Parse(textBox3.Text) || int.Parse(Salery[j]) == int.Parse(textBox4.Text))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    dgvDisplay.Rows.Add(new string[] { ID[j], name[j], Salery[j], courseID[j] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < T1.Length; j++)
                            {
                                if (int.Parse(Salery[i]) == int.Parse(textBox3.Text) || int.Parse(Salery[j]) != int.Parse(textBox4.Text))
                                {
                                    dgvDisplay.Rows.Add(new string[] { ID[j], name[j], Salery[j], courseID[j] });
                                }
                            }

                        }
                    }

                    if (O1.Equals("=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < T1.Length; j++)
                            {

                                if (int.Parse(Salery[i]) == int.Parse(textBox3.Text) || string.Compare(Salery[j], textBox4.Text) == 1)
                                {
                                    dgvDisplay.Rows.Add(new string[] { ID[j], name[j], Salery[j], courseID[j] });
                                }
                            }

                        }
                    }

                    if (O1.Equals("=") && O2.Equals("<"))
                    {
                        bool ok = false;
                        for (int i = 0; i < T1.Length; i++)
                        {
                            ok = false;
                            for (int j = 0; j < T1.Length; j++)
                            {

                                if (int.Parse(Salery[i]) == int.Parse(textBox3.Text) || string.Compare(Salery[j], textBox4.Text) == -1)
                                {
                                    ok = true;
                                    dgvDisplay.Rows.Add(new string[] { ID[j], name[j], Salery[j], courseID[j] });
                                }
                            }

                            if (ok == true)
                            {
                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }

                        }
                    }

                    if (O1.Equals("=") && O2.Equals("IN"))
                    {
                        bool ok = false;
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            ok = false;
                            for (int k = 0; k < T1.Length; k++)
                            {
                                for (int j = 0; j < t.Length; j++)
                                {
                                    if (int.Parse(Salery[i]) == int.Parse(textBox3.Text) || int.Parse(Salery[k]) == int.Parse(t[j]))
                                    {
                                        ok = true;
                                        dgvDisplay.Rows.Add(new string[] { ID[k], name[k], Salery[k], courseID[k] });
                                    }
                                }
                            }
                            if (ok == true)
                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                        }
                    }

                    //!=first
                    if (O1.Equals("!=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (int.Parse(Salery[i]) != int.Parse(textBox3.Text) || int.Parse(Salery[i]) != int.Parse(textBox4.Text))
                            {
                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });

                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (int.Parse(Salery[i]) != int.Parse(textBox3.Text) || int.Parse(Salery[i]) == int.Parse(textBox4.Text))
                            {
                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });

                            }

                        }
                    }

                    if (O1.Equals("!=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (int.Parse(Salery[i]) != int.Parse(textBox3.Text) || int.Parse(Salery[i]) > int.Parse(textBox4.Text))
                            {
                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });

                            }

                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (int.Parse(Salery[i]) != int.Parse(textBox3.Text) || int.Parse(Salery[i]) < int.Parse(textBox4.Text))
                            {
                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });

                            }

                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (int.Parse(Salery[i]) != int.Parse(textBox3.Text) || int.Parse(Salery[i]) == int.Parse(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    //<First
                    if (O1.Equals("<") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (int.Parse(Salery[i]) < int.Parse(textBox3.Text) || int.Parse(Salery[i]) < int.Parse(textBox4.Text))
                            {
                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });

                            }

                        }
                    }

                    if (O1.Equals("<") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (int.Parse(Salery[i]) < int.Parse(textBox3.Text) || int.Parse(Salery[i]) == int.Parse(textBox4.Text))
                            {
                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });

                            }

                        }
                    }

                    if (O1.Equals("<") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (int.Parse(Salery[i]) < int.Parse(textBox3.Text) || int.Parse(Salery[i]) != int.Parse(textBox4.Text))
                            {
                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });

                            }

                        }
                    }

                    if (O1.Equals("<") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (int.Parse(Salery[i]) < int.Parse(textBox3.Text) || int.Parse(Salery[i]) > int.Parse(textBox4.Text))
                            {
                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });

                            }

                        }
                    }

                    if (O1.Equals("<") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (int.Parse(Salery[i]) < int.Parse(textBox3.Text) || int.Parse(Salery[i]) == int.Parse(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    //>first
                    if (O1.Equals(">") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (int.Parse(Salery[i]) > int.Parse(textBox3.Text) || int.Parse(Salery[i]) > int.Parse(textBox4.Text))
                            {
                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (int.Parse(Salery[i]) > int.Parse(textBox3.Text) || int.Parse(Salery[i]) == int.Parse(textBox4.Text))
                            {
                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (int.Parse(Salery[i]) > int.Parse(textBox3.Text) || int.Parse(Salery[i]) != int.Parse(textBox4.Text))
                            {
                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (int.Parse(Salery[i]) > int.Parse(textBox3.Text) || int.Parse(Salery[i]) < int.Parse(textBox4.Text))
                            {
                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (int.Parse(Salery[i]) > int.Parse(textBox3.Text) || int.Parse(Salery[i]) == int.Parse(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    //IN First
                    if (O1.Equals("IN") && O2.Equals("IN"))
                    {
                        string[] l = textBox3.Text.Split(',');
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int k = 0; k < l.Length; k++)
                            {
                                for (int j = 0; j < t.Length; j++)
                                {
                                    if (int.Parse(Salery[i]) == int.Parse(l[k]) || int.Parse(Salery[i]) == int.Parse(t[j]))
                                    {

                                        dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    }
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("="))
                    {
                        string[] l = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int k = 0; k < l.Length; k++)
                            {
                                if (int.Parse(Salery[i]) == int.Parse(l[k]) || int.Parse(Salery[i]) == int.Parse(textBox4.Text))
                                {
                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("!="))
                    {
                        string[] l = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int k = 0; k < l.Length; k++)
                            {
                                if (int.Parse(Salery[i]) == int.Parse(l[k]) || int.Parse(Salery[i]) != int.Parse(textBox4.Text))
                                {
                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }

                    }

                    if (O1.Equals("IN") && O2.Equals(">"))
                    {
                        string[] l = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int k = 0; k < l.Length; k++)
                            {
                                if (int.Parse(Salery[i]) == int.Parse(l[k]) || int.Parse(Salery[i]) > int.Parse(textBox4.Text))
                                {
                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }

                    }

                    if (O1.Equals("IN") && O2.Equals("<"))
                    {
                        string[] l = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int k = 0; k < l.Length; k++)
                            {
                                if (int.Parse(Salery[i]) == int.Parse(l[k]) || int.Parse(Salery[i]) < int.Parse(textBox4.Text))
                                {
                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }

                    }

                }
            }

            if (comboBox2.Text.Equals("Salery") && comboBox6.Text.Equals("ID"))
            {
                string O1 = comboBox3.Text;
                string V1 = textBox3.Text;

                string O2 = comboBox5.Text;
                string V2 = textBox4.Text;

                if (radioButton11.Checked)
                {
                    //=first
                    if (O1.Equals("=") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (Salery[i].Equals(textBox3.Text) && ID[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (Salery[i].Equals(textBox3.Text) && !ID[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (Salery[i].Equals(textBox3.Text) && string.Compare(ID[i], textBox4.Text) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (Salery[i].Equals(textBox3.Text) && string.Compare(ID[i], textBox4.Text) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (Salery[i].Equals(textBox3.Text) && ID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    //!=first
                    if (O1.Equals("!=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!Salery[i].Equals(textBox3.Text) && !ID[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!Salery[i].Equals(textBox3.Text) && ID[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!Salery[i].Equals(textBox3.Text) && string.Compare(ID[i], textBox4.Text) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!Salery[i].Equals(textBox3.Text) && string.Compare(ID[i], textBox4.Text) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (!Salery[i].Equals(textBox3.Text) && ID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    //<First
                    if (O1.Equals("<") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(Salery[i], textBox3.Text) == -1 && string.Compare(ID[i], textBox4.Text) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(Salery[i], textBox3.Text) == -1 && ID[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(Salery[i], textBox3.Text) == -1 && !ID[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(Salery[i], textBox3.Text) == -1 && string.Compare(ID[i], textBox4.Text) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (string.Compare(Salery[i], textBox3.Text) == -1 && ID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    //>first
                    if (O1.Equals(">") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(Salery[i], textBox3.Text) == 1 && string.Compare(ID[i], textBox4.Text) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(Salery[i], textBox3.Text) == 1 && ID[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(Salery[i], textBox3.Text) == 1 && !ID[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(Salery[i], textBox3.Text) == 1 && string.Compare(ID[i], textBox4.Text) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (string.Compare(Salery[i], textBox3.Text) == 1 && ID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    //IN First
                    if (O1.Equals("IN") && O2.Equals("IN"))
                    {
                        string[] l = textBox3.Text.Split(',');
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int k = 0; k < l.Length; k++)
                            {
                                for (int j = 0; j < t.Length; j++)
                                {
                                    if (Salery[i].Equals(l[k]) && ID[i].Equals(t[j]))
                                    {
                                        dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    }
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("="))
                    {
                        string[] l = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int k = 0; k < l.Length; k++)
                            {
                                if (Salery[i].Equals(l[k]) && ID[i].Equals(textBox4.Text))
                                {
                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("!="))
                    {
                        string[] l = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int k = 0; k < l.Length; k++)
                            {
                                if (Salery[i].Equals(l[k]) && !ID[i].Equals(textBox4.Text))
                                {
                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals(">"))
                    {
                        string[] l = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int k = 0; k < l.Length; k++)
                            {
                                if (Salery[i].Equals(l[k]) && string.Compare(ID[i], textBox4.Text) == 1)
                                {
                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("<"))
                    {
                        string[] l = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int k = 0; k < l.Length; k++)
                            {
                                if (Salery[i].Equals(l[k]) && string.Compare(ID[i], textBox4.Text) == -1)
                                {
                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                }
                if (radioButton12.Checked)
                {
                    //=first
                    if (O1.Equals("=") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (Salery[i].Equals(textBox3.Text) || ID[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (Salery[i].Equals(textBox3.Text) || !ID[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (Salery[i].Equals(textBox3.Text) || string.Compare(ID[i], textBox4.Text) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (Salery[i].Equals(textBox3.Text) || string.Compare(ID[i], textBox4.Text) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (Salery[i].Equals(textBox3.Text) || ID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    //!=first
                    if (O1.Equals("!=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!Salery[i].Equals(textBox3.Text) || !ID[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!Salery[i].Equals(textBox3.Text) || ID[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!Salery[i].Equals(textBox3.Text) || string.Compare(ID[i], textBox4.Text) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!Salery[i].Equals(textBox3.Text) || string.Compare(ID[i], textBox4.Text) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (!Salery[i].Equals(textBox3.Text) || ID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    //<First
                    if (O1.Equals("<") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(Salery[i], textBox3.Text) == -1 || string.Compare(ID[i], textBox4.Text) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(Salery[i], textBox3.Text) == -1 || ID[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(Salery[i], textBox3.Text) == -1 || !ID[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(Salery[i], textBox3.Text) == -1 || string.Compare(ID[i], textBox4.Text) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (string.Compare(Salery[i], textBox3.Text) == -1 || ID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    //>first
                    if (O1.Equals(">") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(Salery[i], textBox3.Text) == 1 || string.Compare(ID[i], textBox4.Text) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(Salery[i], textBox3.Text) == 1 || ID[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(Salery[i], textBox3.Text) == 1 || !ID[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(Salery[i], textBox3.Text) == 1 || string.Compare(ID[i], textBox4.Text) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (string.Compare(Salery[i], textBox3.Text) == 1 || ID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    //IN First
                    if (O1.Equals("IN") && O2.Equals("IN"))
                    {
                        string[] l = textBox3.Text.Split(',');
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int k = 0; k < l.Length; k++)
                            {
                                for (int j = 0; j < t.Length; j++)
                                {
                                    if (Salery[i].Equals(l[k]) || ID[i].Equals(t[j]))
                                    {
                                        dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    }
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("="))
                    {
                        string[] l = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int k = 0; k < l.Length; k++)
                            {
                                if (Salery[i].Equals(l[k]) || ID[i].Equals(textBox4.Text))
                                {
                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("!="))
                    {
                        string[] l = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int k = 0; k < l.Length; k++)
                            {
                                if (Salery[i].Equals(l[k]) || !ID[i].Equals(textBox4.Text))
                                {
                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals(">"))
                    {
                        string[] l = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int k = 0; k < l.Length; k++)
                            {
                                if (Salery[i].Equals(l[k]) || string.Compare(ID[i], textBox4.Text) == 1)
                                {
                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("<"))
                    {
                        string[] l = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int k = 0; k < l.Length; k++)
                            {
                                if (Salery[i].Equals(l[k]) || string.Compare(ID[i], textBox4.Text) == -1)
                                {
                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }
                }
            }

            if (comboBox2.Text.Equals("Salery") && comboBox6.Text.Equals("Name"))
            {
                string O1 = comboBox3.Text;
                string V1 = textBox3.Text;

                string O2 = comboBox5.Text;
                string V2 = textBox4.Text;


                if (radioButton11.Checked)
                {
                    //=first
                    if (O1.Equals("=") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (Salery[i].Equals(textBox3.Text) && name[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (Salery[i].Equals(textBox3.Text) && !name[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (Salery[i].Equals(textBox3.Text) && string.Compare(name[i], textBox4.Text) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (Salery[i].Equals(textBox3.Text) && string.Compare(name[i], textBox4.Text) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (Salery[i].Equals(textBox3.Text) && name[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    //!=first
                    if (O1.Equals("!=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!Salery[i].Equals(textBox3.Text) && !name[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!Salery[i].Equals(textBox3.Text) && name[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!Salery[i].Equals(textBox3.Text) && string.Compare(name[i], textBox4.Text) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!Salery[i].Equals(textBox3.Text) && string.Compare(name[i], textBox4.Text) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (!Salery[i].Equals(textBox3.Text) && name[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    //<First
                    if (O1.Equals("<") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(Salery[i], textBox3.Text) == -1 && string.Compare(name[i], textBox4.Text) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(Salery[i], textBox3.Text) == -1 && name[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(Salery[i], textBox3.Text) == -1 && !name[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(Salery[i], textBox3.Text) == -1 && string.Compare(name[i], textBox4.Text) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (string.Compare(Salery[i], textBox3.Text) == -1 && name[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    //>first
                    if (O1.Equals(">") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(Salery[i], textBox3.Text) == 1 && string.Compare(name[i], textBox4.Text) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(Salery[i], textBox3.Text) == 1 && name[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(Salery[i], textBox3.Text) == 1 && !name[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(Salery[i], textBox3.Text) == 1 && string.Compare(name[i], textBox4.Text) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (string.Compare(Salery[i], textBox3.Text) == 1 && name[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    //IN First
                    if (O1.Equals("IN") && O2.Equals("IN"))
                    {
                        string[] l = textBox3.Text.Split(',');
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int k = 0; k < l.Length; k++)
                            {
                                for (int j = 0; j < t.Length; j++)
                                {
                                    if (Salery[i].Equals(l[k]) && name[i].Equals(t[j]))
                                    {
                                        dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    }
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("="))
                    {
                        string[] l = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int k = 0; k < l.Length; k++)
                            {
                                if (Salery[i].Equals(l[k]) && name[i].Equals(textBox4.Text))
                                {
                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("!="))
                    {
                        string[] l = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int k = 0; k < l.Length; k++)
                            {
                                if (Salery[i].Equals(l[k]) && !name[i].Equals(textBox4.Text))
                                {
                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals(">"))
                    {
                        string[] l = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int k = 0; k < l.Length; k++)
                            {
                                if (Salery[i].Equals(l[k]) && string.Compare(name[i], textBox4.Text) == 1)
                                {
                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("<"))
                    {
                        string[] l = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int k = 0; k < l.Length; k++)
                            {
                                if (Salery[i].Equals(l[k]) && string.Compare(name[i], textBox4.Text) == -1)
                                {
                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                }
                if (radioButton12.Checked)
                {
                    //=first
                    if (O1.Equals("=") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (Salery[i].Equals(textBox3.Text) || name[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (Salery[i].Equals(textBox3.Text) || !name[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (Salery[i].Equals(textBox3.Text) || string.Compare(name[i], textBox4.Text) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (Salery[i].Equals(textBox3.Text) || string.Compare(name[i], textBox4.Text) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (Salery[i].Equals(textBox3.Text) || name[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    //!=first
                    if (O1.Equals("!=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!Salery[i].Equals(textBox3.Text) || !name[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!Salery[i].Equals(textBox3.Text) || name[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!Salery[i].Equals(textBox3.Text) || string.Compare(name[i], textBox4.Text) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!Salery[i].Equals(textBox3.Text) || string.Compare(name[i], textBox4.Text) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (!Salery[i].Equals(textBox3.Text) || name[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    //<First
                    if (O1.Equals("<") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(Salery[i], textBox3.Text) == -1 || string.Compare(name[i], textBox4.Text) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(Salery[i], textBox3.Text) == -1 || name[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(Salery[i], textBox3.Text) == -1 || !name[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(Salery[i], textBox3.Text) == -1 || string.Compare(name[i], textBox4.Text) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (string.Compare(Salery[i], textBox3.Text) == -1 || name[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    //>first
                    if (O1.Equals(">") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(Salery[i], textBox3.Text) == 1 || string.Compare(name[i], textBox4.Text) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(Salery[i], textBox3.Text) == 1 || name[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(Salery[i], textBox3.Text) == 1 || !name[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(Salery[i], textBox3.Text) == 1 || string.Compare(name[i], textBox4.Text) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (string.Compare(Salery[i], textBox3.Text) == 1 || name[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    //IN First
                    if (O1.Equals("IN") && O2.Equals("IN"))
                    {
                        string[] l = textBox3.Text.Split(',');
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int k = 0; k < l.Length; k++)
                            {
                                for (int j = 0; j < t.Length; j++)
                                {
                                    if (Salery[i].Equals(l[k]) || name[i].Equals(t[j]))
                                    {
                                        dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    }
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("="))
                    {
                        string[] l = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int k = 0; k < l.Length; k++)
                            {
                                if (Salery[i].Equals(l[k]) || name[i].Equals(textBox4.Text))
                                {
                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("!="))
                    {
                        string[] l = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int k = 0; k < l.Length; k++)
                            {
                                if (Salery[i].Equals(l[k]) || !name[i].Equals(textBox4.Text))
                                {
                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals(">"))
                    {
                        string[] l = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int k = 0; k < l.Length; k++)
                            {
                                if (Salery[i].Equals(l[k]) || string.Compare(name[i], textBox4.Text) == 1)
                                {
                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("<"))
                    {
                        string[] l = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int k = 0; k < l.Length; k++)
                            {
                                if (Salery[i].Equals(l[k]) || string.Compare(name[i], textBox4.Text) == -1)
                                {
                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }
                }

            }

            if (comboBox2.Text.Equals("Salery") && comboBox6.Text.Equals("Course Name"))
            {
                string O1 = comboBox3.Text;
                string V1 = textBox3.Text;

                string O2 = comboBox5.Text;
                string V2 = textBox4.Text;


                if (radioButton11.Checked)
                {
                    //=first
                    if (O1.Equals("=") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (Salery[i].Equals(textBox3.Text) && courseID[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (Salery[i].Equals(textBox3.Text) && !courseID[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (Salery[i].Equals(textBox3.Text) && string.Compare(courseID[i], textBox4.Text) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (Salery[i].Equals(textBox3.Text) && string.Compare(courseID[i], textBox4.Text) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (Salery[i].Equals(textBox3.Text) && courseID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    //!=first
                    if (O1.Equals("!=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!Salery[i].Equals(textBox3.Text) && !courseID[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!Salery[i].Equals(textBox3.Text) && courseID[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!Salery[i].Equals(textBox3.Text) && string.Compare(courseID[i], textBox4.Text) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!Salery[i].Equals(textBox3.Text) && string.Compare(courseID[i], textBox4.Text) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (!Salery[i].Equals(textBox3.Text) && courseID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    //<First
                    if (O1.Equals("<") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(Salery[i], textBox3.Text) == -1 && string.Compare(courseID[i], textBox4.Text) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(Salery[i], textBox3.Text) == -1 && courseID[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(Salery[i], textBox3.Text) == -1 && !courseID[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(Salery[i], textBox3.Text) == -1 && string.Compare(courseID[i], textBox4.Text) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (string.Compare(Salery[i], textBox3.Text) == -1 && courseID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    //>first
                    if (O1.Equals(">") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(Salery[i], textBox3.Text) == 1 && string.Compare(courseID[i], textBox4.Text) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(Salery[i], textBox3.Text) == 1 && courseID[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(Salery[i], textBox3.Text) == 1 && !courseID[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(Salery[i], textBox3.Text) == 1 && string.Compare(courseID[i], textBox4.Text) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (string.Compare(Salery[i], textBox3.Text) == 1 && courseID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    //IN First
                    if (O1.Equals("IN") && O2.Equals("IN"))
                    {
                        string[] l = textBox3.Text.Split(',');
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int k = 0; k < l.Length; k++)
                            {
                                for (int j = 0; j < t.Length; j++)
                                {
                                    if (Salery[i].Equals(l[k]) && courseID[i].Equals(t[j]))
                                    {
                                        dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    }
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("="))
                    {
                        string[] l = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int k = 0; k < l.Length; k++)
                            {
                                if (Salery[i].Equals(l[k]) && courseID[i].Equals(textBox4.Text))
                                {
                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("!="))
                    {
                        string[] l = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int k = 0; k < l.Length; k++)
                            {
                                if (Salery[i].Equals(l[k]) && !courseID[i].Equals(textBox4.Text))
                                {
                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals(">"))
                    {
                        string[] l = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int k = 0; k < l.Length; k++)
                            {
                                if (Salery[i].Equals(l[k]) && string.Compare(courseID[i], textBox4.Text) == 1)
                                {
                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("<"))
                    {
                        string[] l = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int k = 0; k < l.Length; k++)
                            {
                                if (Salery[i].Equals(l[k]) && string.Compare(courseID[i], textBox4.Text) == -1)
                                {
                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                }
                if (radioButton12.Checked)
                {
                    //=first
                    if (O1.Equals("=") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (Salery[i].Equals(textBox3.Text) || courseID[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (Salery[i].Equals(textBox3.Text) || !courseID[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (Salery[i].Equals(textBox3.Text) || string.Compare(courseID[i], textBox4.Text) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (Salery[i].Equals(textBox3.Text) || string.Compare(courseID[i], textBox4.Text) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (Salery[i].Equals(textBox3.Text) || courseID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    //!=first
                    if (O1.Equals("!=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!Salery[i].Equals(textBox3.Text) || !courseID[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!Salery[i].Equals(textBox3.Text) || courseID[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!Salery[i].Equals(textBox3.Text) || string.Compare(courseID[i], textBox4.Text) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!Salery[i].Equals(textBox3.Text) || string.Compare(courseID[i], textBox4.Text) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (!Salery[i].Equals(textBox3.Text) || courseID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    //<First
                    if (O1.Equals("<") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(Salery[i], textBox3.Text) == -1 || string.Compare(courseID[i], textBox4.Text) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(Salery[i], textBox3.Text) == -1 || courseID[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(Salery[i], textBox3.Text) == -1 || !courseID[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(Salery[i], textBox3.Text) == -1 || string.Compare(courseID[i], textBox4.Text) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (string.Compare(Salery[i], textBox3.Text) == -1 || courseID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    //>first
                    if (O1.Equals(">") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(Salery[i], textBox3.Text) == 1 || string.Compare(courseID[i], textBox4.Text) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(Salery[i], textBox3.Text) == 1 || courseID[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(Salery[i], textBox3.Text) == 1 || !courseID[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(Salery[i], textBox3.Text) == 1 || string.Compare(courseID[i], textBox4.Text) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (string.Compare(Salery[i], textBox3.Text) == 1 || courseID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    //IN First
                    if (O1.Equals("IN") && O2.Equals("IN"))
                    {
                        string[] l = textBox3.Text.Split(',');
                        string[] t = textBox4.Text.Split(',');
                        List<int> z = new List<int> { };
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (courseID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    z.Add(i);
                                    break;
                                }
                            }
                            for (int m = 0; m < l.Length; m++)
                            {
                                if (Salery[i].Equals(l[m]))
                                {
                                    if (!z.Contains(i))
                                    {
                                        dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                        break;
                                    }
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("="))
                    {
                        string[] l = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int k = 0; k < l.Length; k++)
                            {
                                if (Salery[i].Equals(l[k]) || courseID[i].Equals(textBox4.Text))
                                {
                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("!="))
                    {
                        string[] l = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int k = 0; k < l.Length; k++)
                            {
                                if (Salery[i].Equals(l[k]) || !courseID[i].Equals(textBox4.Text))
                                {
                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals(">"))
                    {
                        string[] l = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int k = 0; k < l.Length; k++)
                            {
                                if (Salery[i].Equals(l[k]) || string.Compare(courseID[i], textBox4.Text) == 1)
                                {
                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("<"))
                    {
                        string[] l = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int k = 0; k < l.Length; k++)
                            {
                                if (Salery[i].Equals(l[k]) || string.Compare(courseID[i], textBox4.Text) == -1)
                                {
                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }
                }

            }

            //course name first
            if (comboBox2.Text.Equals("Course Name") && comboBox6.Text.Equals("Course Name"))
            {
                string O1 = comboBox3.Text;
                string V1 = textBox3.Text;

                string O2 = comboBox5.Text;
                string V2 = textBox4.Text;

                if (radioButton11.Checked)
                {
                    //=first
                    if (O1.Equals("=") && O2.Equals("="))
                    {

                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (courseID[i].Equals(V1))
                            {
                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }

                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (courseID[i].Equals(V2))
                            {
                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (courseID[i].Equals(V1))
                            {
                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }

                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!courseID[i].Equals(V2))
                            {
                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (courseID[i].Equals(V1))
                            {
                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }

                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(courseID[i], V2) == 1)
                            {
                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (courseID[i].Equals(V1))
                            {
                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }

                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(courseID[i], V2) == -1)
                            {
                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }
                    if (O1.Equals("=") && O2.Equals("IN"))
                    {
                        string[] arr = V2.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (courseID[i].Equals(V1))
                            {
                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }

                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < arr.Length; j++)
                            {
                                if (courseID[i].Equals(arr[j]))
                                {
                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    //!=first
                    if (O1.Equals("!=") && O2.Equals("!="))
                    {

                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!courseID[i].Equals(V1) && !courseID[i].Equals(V2))
                            {
                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }


                    }

                    if (O1.Equals("!=") && O2.Equals("="))
                    {

                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!courseID[i].Equals(V1) && courseID[i].Equals(V2))
                            {
                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }


                    }

                    if (O1.Equals("!=") && O2.Equals(">"))
                    {

                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!courseID[i].Equals(V1) && string.Compare(courseID[i], V2) == 1)
                            {
                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("<"))
                    {

                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!courseID[i].Equals(V1) && string.Compare(courseID[i], V2) == -1)
                            {
                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("IN"))
                    {

                        string[] arr = V2.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < arr.Length; j++)
                            {
                                if (!courseID[i].Equals(V1) && courseID[i].Equals(arr[j]))
                                {
                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    //<First
                    if (O1.Equals("<") && O2.Equals("<"))
                    {

                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(courseID[i], V1) == -1 && string.Compare(courseID[i], V2) == -1)
                            {
                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }



                    }

                    if (O1.Equals("<") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(courseID[i], V1) == -1 && courseID[i].Equals(V2))
                            {
                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }


                    }

                    if (O1.Equals("<") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(courseID[i], V1) == -1 && !courseID[i].Equals(V2))
                            {
                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }

                    }

                    if (O1.Equals("<") && O2.Equals(">"))
                    {

                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(courseID[i], V1) == -1 && string.Compare(courseID[i], V2) == 1)
                            {
                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }

                    }

                    if (O1.Equals("<") && O2.Equals("IN"))
                    {

                        string[] arr = V2.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < arr.Length; j++)
                            {
                                if (string.Compare(courseID[i], V1) == -1 && courseID[i].Equals(arr[j]))
                                {
                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    //>first
                    if (O1.Equals(">") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(courseID[i], V1) == 1 && string.Compare(courseID[i], V2) == 1)
                            {
                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }


                    }

                    if (O1.Equals(">") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(courseID[i], V1) == 1 && courseID[i].Equals(V2))
                            {
                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }

                    }

                    if (O1.Equals(">") && O2.Equals("!="))
                    {

                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(courseID[i], V1) == 1 && !courseID[i].Equals(V2))
                            {
                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }

                    }

                    if (O1.Equals(">") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(courseID[i], V1) == 1 && string.Compare(courseID[i], V2) == -1)
                            {
                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }

                    }

                    if (O1.Equals(">") && O2.Equals("IN"))
                    {

                        string[] arr = V2.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < arr.Length; j++)
                            {
                                if (string.Compare(courseID[i], V1) == 1 && courseID[i].Equals(arr[j]))
                                {
                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    //IN First
                    if (O1.Equals("IN") && O2.Equals("IN"))
                    {
                        List<string> a = new List<string>();
                        string[] k = V1.Split(',');
                        string[] l = V2.Split(',');

                        for (int i = 0; i < k.Length; i++)
                        {
                            if (!a.Contains(k[i]))
                            {
                                a.Add(k[i]);
                            }
                        }

                        for (int i = 0; i < l.Length; i++)
                        {
                            if (!a.Contains(l[i]))
                            {
                                a.Add(l[i]);
                            }
                        }

                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (a.Contains(courseID[i]))
                            {
                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }

                    }

                    if (O1.Equals("IN") && O2.Equals("="))
                    {

                        List<string> a = new List<string>();
                        string[] k = V1.Split(',');
                        for (int i = 0; i < k.Length; i++)
                        {
                            if (!a.Contains(k[i]))
                            {
                                a.Add(k[i]);
                            }
                        }
                        if (!a.Contains(V2))
                        {
                            a.Add(V2);
                        }

                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (a.Contains(courseID[i]))
                            {
                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("!="))
                    {

                        List<string> a = new List<string>();
                        string[] k = V1.Split(',');
                        for (int i = 0; i < k.Length; i++)
                        {
                            if (!a.Contains(k[i]))
                            {
                                a.Add(k[i]);
                            }
                        }

                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!courseID[i].Equals(V2) && !a.Contains(courseID[i]))
                            {
                                a.Add(courseID[i]);
                            }
                        }
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (a.Contains(courseID[i]))
                            {
                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals(">"))
                    {

                        string[] t2 = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (courseID[i].Equals(t2[m]) && string.Compare(name[i], textBox4.Text) == 1)
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("<"))
                    {

                        string[] t2 = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (courseID[i].Equals(t2[m]) && string.Compare(name[i], textBox4.Text) == -1)
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                }
                if (radioButton12.Checked)
                {
                    //=first
                    if (O1.Equals("=") && O2.Equals("="))
                    {

                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (courseID[i].Equals(textBox3.Text) || courseID[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (courseID[i].Equals(textBox3.Text) || !courseID[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (courseID[i].Equals(textBox3.Text) || string.Compare(courseID[i], textBox4.Text) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (courseID[i].Equals(textBox3.Text) || string.Compare(courseID[i], textBox4.Text) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }
                    if (O1.Equals("=") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (courseID[i].Equals(textBox3.Text) || courseID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    //!=first
                    if (O1.Equals("!=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!courseID[i].Equals(textBox3.Text) || !courseID[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!courseID[i].Equals(textBox3.Text) || courseID[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!courseID[i].Equals(textBox3.Text) || string.Compare(courseID[i], textBox4.Text) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!courseID[i].Equals(textBox3.Text) || string.Compare(courseID[i], textBox4.Text) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (!courseID[i].Equals(textBox3.Text) || courseID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    //<First
                    if (O1.Equals("<") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(courseID[i], textBox3.Text) == -1 || string.Compare(courseID[i], textBox4.Text) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(courseID[i], textBox3.Text) == -1 || courseID[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(courseID[i], textBox3.Text) == -1 || !courseID[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(courseID[i], textBox3.Text) == -1 || string.Compare(courseID[i], textBox4.Text) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (string.Compare(courseID[i], textBox3.Text) == -1 || courseID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //>first
                    if (O1.Equals(">") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(courseID[i], textBox3.Text) == 1 || string.Compare(courseID[i], textBox4.Text) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(courseID[i], textBox3.Text) == 1 || courseID[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(courseID[i], textBox3.Text) == -1 || !courseID[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(courseID[i], textBox3.Text) == 1 || string.Compare(courseID[i], textBox4.Text) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (string.Compare(courseID[i], textBox3.Text) == 1 || courseID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //IN First
                    if (O1.Equals("IN") && O2.Equals("IN"))
                    {


                        string[] t2 = textBox3.Text.Split(',');
                        string[] t = textBox4.Text.Split(',');
                        List<int> z = new List<int> { };
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (courseID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    z.Add(i);
                                    break;
                                }
                            }
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (courseID[i].Equals(t2[m]))
                                {
                                    if (!z.Contains(i))
                                    {
                                        dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                        break;
                                    }
                                }
                            }

                        }

                    }

                    if (O1.Equals("IN") && O2.Equals("="))
                    {
                        string[] t2 = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (courseID[i].Equals(t2[m]) || courseID[i].Equals(textBox4.Text))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("!="))
                    {
                        string[] t2 = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (courseID[i].Equals(t2[m]) || !courseID[i].Equals(textBox4.Text))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals(">"))
                    {
                        string[] t2 = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (courseID[i].Equals(t2[m]) || string.Compare(courseID[i], textBox4.Text) == 1)
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("<"))
                    {
                        string[] t2 = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (courseID[i].Equals(t2[m]) || string.Compare(courseID[i], textBox4.Text) == -1)
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    break;
                                }
                            }
                        }
                    }
                }
            }

            if (comboBox2.Text.Equals("Course Name") && comboBox6.Text.Equals("ID"))
            {
                string O1 = comboBox3.Text;
                string V1 = textBox3.Text;

                string O2 = comboBox5.Text;
                string V2 = textBox4.Text;

                if (radioButton11.Checked)
                {

                    //=first
                    if (O1.Equals("=") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (courseID[i].Equals(textBox3.Text) && ID[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (courseID[i].Equals(textBox3.Text) && !ID[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (courseID[i].Equals(textBox3.Text) && string.Compare(ID[i], textBox4.Text) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (courseID[i].Equals(textBox3.Text) && string.Compare(ID[i], textBox4.Text) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (courseID[i].Equals(textBox3.Text) && ID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    //!=first
                    if (O1.Equals("!=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!courseID[i].Equals(textBox3.Text) && !ID[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!courseID[i].Equals(textBox3.Text) && ID[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!courseID[i].Equals(textBox3.Text) && string.Compare(ID[i], textBox4.Text) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!courseID[i].Equals(textBox3.Text) && string.Compare(ID[i], textBox4.Text) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (!courseID[i].Equals(textBox3.Text) && ID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    //<First
                    if (O1.Equals("<") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (int.Parse(ID[i]) < int.Parse(textBox4.Text) && string.Compare(courseID[i], textBox3.Text) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (int.Parse(ID[i]) == int.Parse(textBox4.Text) && string.Compare(courseID[i], textBox3.Text) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (int.Parse(ID[i]) != int.Parse(textBox4.Text) && string.Compare(courseID[i], textBox3.Text) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (int.Parse(ID[i]) < int.Parse(textBox4.Text) && string.Compare(courseID[i], textBox3.Text) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (int.Parse(ID[i]) == int.Parse(t[j]) && string.Compare(courseID[i], textBox3.Text) == -1)
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    //>first
                    if (O1.Equals(">") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (int.Parse(ID[i]) > int.Parse(textBox4.Text) && string.Compare(courseID[i], textBox3.Text) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (int.Parse(ID[i]) == int.Parse(textBox4.Text) && string.Compare(courseID[i], textBox3.Text) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (int.Parse(ID[i]) != int.Parse(textBox4.Text) && string.Compare(courseID[i], textBox3.Text) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (int.Parse(ID[i]) < int.Parse(textBox4.Text) && string.Compare(courseID[i], textBox3.Text) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (int.Parse(ID[i]) == int.Parse(t[j]) && string.Compare(courseID[i], textBox3.Text) == 1)
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    //IN First
                    if (O1.Equals("IN") && O2.Equals("IN"))
                    {
                        string[] t2 = textBox3.Text.Split(',');
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                for (int m = 0; m < t2.Length; m++)
                                {
                                    if (ID[i].Equals(t[j]) && courseID[i].Equals(t2[m]))
                                    {

                                        dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    }
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("="))
                    {
                        string[] t2 = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (ID[i].Equals(textBox4.Text) && courseID[i].Equals(t2[m]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("!="))
                    {
                        string[] t2 = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (!ID[i].Equals(textBox4.Text) && courseID[i].Equals(t2[m]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals(">"))
                    {
                        string[] t2 = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (int.Parse(ID[i]) > int.Parse(textBox4.Text) && courseID[i].Equals(t2[m]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("<"))
                    {
                        string[] t2 = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (int.Parse(ID[i]) < int.Parse(textBox4.Text) && courseID[i].Equals(t2[m]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }


                }
                if (radioButton12.Checked)
                {

                    //=first
                    if (O1.Equals("=") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (courseID[i].Equals(textBox3.Text) || ID[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!ID[i].Equals(textBox4.Text) || courseID[i].Equals(textBox3.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(ID[i], textBox4.Text) == 1 || courseID[i].Equals(textBox3.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(ID[i], textBox4.Text) == -1 || courseID[i].Equals(textBox3.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (ID[i].Equals(t[j]) || courseID[i].Equals(textBox3.Text))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //!=first
                    if (O1.Equals("!=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!courseID[i].Equals(textBox3.Text) || !ID[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (ID[i].Equals(textBox4.Text) || !courseID[i].Equals(textBox3.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(ID[i], textBox4.Text) == 1 || !courseID[i].Equals(textBox3.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(ID[i], textBox4.Text) == -1 || !courseID[i].Equals(textBox3.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (ID[i].Equals(t[j]) || !courseID[i].Equals(textBox3.Text))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //<First
                    if (O1.Equals("<") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (int.Parse(ID[i]) < int.Parse(textBox4.Text) || string.Compare(courseID[i], textBox3.Text) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (int.Parse(ID[i]) == int.Parse(textBox4.Text) || string.Compare(courseID[i], textBox3.Text) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (int.Parse(ID[i]) != int.Parse(textBox4.Text) || string.Compare(courseID[i], textBox3.Text) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (int.Parse(ID[i]) > int.Parse(textBox4.Text) || string.Compare(courseID[i], textBox3.Text) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (int.Parse(ID[i]) == int.Parse(t[j]) || string.Compare(courseID[i], textBox3.Text) == -1)
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    break;
                                }
                            }
                        }
                    }
                    //here 
                    //>first
                    if (O1.Equals(">") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (int.Parse(ID[i]) > int.Parse(textBox4.Text) || string.Compare(courseID[i], textBox3.Text) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (int.Parse(ID[i]) == int.Parse(textBox4.Text) || string.Compare(courseID[i], textBox3.Text) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (int.Parse(ID[i]) != int.Parse(textBox4.Text) || string.Compare(courseID[i], textBox3.Text) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (int.Parse(ID[i]) < int.Parse(textBox4.Text) || string.Compare(courseID[i], textBox3.Text) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (int.Parse(ID[i]) == int.Parse(t[j]) || string.Compare(courseID[i], textBox3.Text) == 1)
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //IN First
                    if (O1.Equals("IN") && O2.Equals("IN"))
                    {
                        string[] t2 = textBox3.Text.Split(',');
                        string[] t = textBox4.Text.Split(',');
                        List<int> z = new List<int> { };
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (ID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    z.Add(i);
                                    break;
                                }
                            }
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (courseID[i].Equals(t2[m]))
                                {
                                    if (!z.Contains(i))
                                    {
                                        dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                        break;
                                    }
                                }
                            }

                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("="))
                    {
                        string[] t2 = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (ID[i].Equals(textBox4.Text) || courseID[i].Equals(t2[m]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("!="))
                    {
                        string[] t2 = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (ID[i].Equals(textBox4.Text) || !courseID[i].Equals(t2[m]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals(">"))
                    {
                        string[] t2 = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (string.Compare(ID[i], textBox4.Text) == 1 || courseID[i].Equals(t2[m]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("<"))
                    {
                        string[] t2 = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (string.Compare(ID[i], textBox4.Text) == -1 || courseID[i].Equals(t2[m]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    break;
                                }
                            }
                        }
                    }


                }
            }

            if (comboBox2.Text.Equals("Course Name") && comboBox6.Text.Equals("Name"))
            {
                string O1 = comboBox3.Text;
                string V1 = textBox3.Text;

                string O2 = comboBox5.Text;
                string V2 = textBox4.Text;

                if (radioButton11.Checked)
                {
                    //=first
                    if (O1.Equals("=") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (name[i].Equals(textBox4.Text) && courseID[i].Equals(textBox3.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!name[i].Equals(textBox4.Text) && !courseID[i].Equals(textBox3.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(name[i], textBox4.Text) == 1 && courseID[i].Equals(textBox3.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(name[i], textBox4.Text) == -1 && courseID[i].Equals(textBox3.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (name[i].Equals(t[j]) && courseID[i].Equals(textBox3.Text))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    //!=first
                    if (O1.Equals("!=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!name[i].Equals(textBox4.Text) && !courseID[i].Equals(textBox3.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (name[i].Equals(textBox4.Text) && !courseID[i].Equals(textBox3.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(name[i], textBox4.Text) == 1 && !courseID[i].Equals(textBox3.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(name[i], textBox4.Text) == -1 && !courseID[i].Equals(textBox3.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (name[i].Equals(t[j]) && !courseID[i].Equals(textBox3.Text))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    //<First
                    if (O1.Equals("<") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(name[i], textBox4.Text) == -1 && string.Compare(courseID[i], textBox3.Text) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (name[i].Equals(textBox4.Text) && string.Compare(courseID[i], textBox3.Text) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!name[i].Equals(textBox4.Text) && string.Compare(courseID[i], textBox3.Text) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(name[i], textBox4.Text) == 1 && string.Compare(courseID[i], textBox3.Text) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (name[i].Equals(t[j]) && string.Compare(courseID[i], textBox3.Text) == -1)
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    //>first
                    if (O1.Equals(">") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(name[i], textBox4.Text) == 1 && string.Compare(courseID[i], textBox3.Text) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (name[i].Equals(textBox4.Text) && string.Compare(courseID[i], textBox3.Text) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!name[i].Equals(textBox4.Text) && string.Compare(courseID[i], textBox3.Text) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(name[i], textBox4.Text) == -1 && string.Compare(courseID[i], textBox3.Text) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (name[i].Equals(t[j]) && string.Compare(courseID[i], textBox3.Text) == 1)
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    //IN First
                    if (O1.Equals("IN") && O2.Equals("IN"))
                    {
                        string[] t2 = textBox3.Text.Split(',');
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                for (int m = 0; m < t2.Length; m++)
                                {
                                    if (name[i].Equals(t[m]) && courseID[i].Equals(t2[j]))
                                    {

                                        dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    }
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("="))
                    {
                        string[] t2 = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (name[i].Equals(textBox4.Text) && courseID[i].Equals(t2[m]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("!="))
                    {
                        string[] t2 = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (!name[i].Equals(textBox4.Text) && courseID[i].Equals(t2[m]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals(">"))
                    {
                        string[] t2 = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (string.Compare(name[i], textBox4.Text) == 1 && courseID[i].Equals(t2[m]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("<"))
                    {
                        string[] t2 = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (string.Compare(name[i], textBox4.Text) == -1 && courseID[i].Equals(t2[m]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                }
                if (radioButton12.Checked)
                {
                    //=first
                    if (O1.Equals("=") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (name[i].Equals(textBox4.Text) || courseID[i].Equals(textBox3.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!name[i].Equals(textBox4.Text) || courseID[i].Equals(textBox3.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(name[i], textBox4.Text) == 1 || courseID[i].Equals(textBox3.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(name[i], textBox4.Text) == -1 || courseID[i].Equals(textBox3.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (name[i].Equals(t[j]) || courseID[i].Equals(textBox3.Text))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //!=first
                    if (O1.Equals("!=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!name[i].Equals(textBox4.Text) || !courseID[i].Equals(textBox3.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (name[i].Equals(textBox4.Text) || !courseID[i].Equals(textBox3.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(name[i], textBox4.Text) == 1 || !courseID[i].Equals(textBox3.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(name[i], textBox4.Text) == -1 || !courseID[i].Equals(textBox3.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (name[i].Equals(t[j]) || !courseID[i].Equals(textBox3.Text))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //<First
                    if (O1.Equals("<") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(name[i], textBox4.Text) == -1 || string.Compare(courseID[i], textBox3.Text) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (name[i].Equals(textBox4.Text) || string.Compare(courseID[i], textBox3.Text) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!name[i].Equals(textBox4.Text) || string.Compare(courseID[i], textBox3.Text) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(name[i], textBox4.Text) == 1 || string.Compare(courseID[i], textBox3.Text) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (name[i].Equals(t[j]) || string.Compare(courseID[i], textBox3.Text) == -1)
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //>first
                    if (O1.Equals(">") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(name[i], textBox4.Text) == 1 || string.Compare(courseID[i], textBox3.Text) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (name[i].Equals(textBox4.Text) || string.Compare(courseID[i], textBox3.Text) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!name[i].Equals(textBox4.Text) || string.Compare(courseID[i], textBox3.Text) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(name[i], textBox4.Text) == -1 || string.Compare(courseID[i], textBox3.Text) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }

                    }

                    if (O1.Equals(">") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (name[i].Equals(t[j]) || string.Compare(courseID[i], textBox3.Text) == 1)
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //IN First
                    if (O1.Equals("IN") && O2.Equals("IN"))
                    {
                        string[] t2 = textBox3.Text.Split(',');
                        string[] t = textBox4.Text.Split(',');
                        List<int> z = new List<int> { };
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (name[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    z.Add(i);
                                    break;
                                }
                            }
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (courseID[i].Equals(t2[m]))
                                {
                                    if (!z.Contains(i))
                                    {
                                        dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                        break;
                                    }
                                }
                            }

                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("="))
                    {
                        string[] t2 = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (name[i].Equals(textBox4.Text) || courseID[i].Equals(t2[m]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("!="))
                    {
                        string[] t2 = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (!name[i].Equals(textBox4.Text) || courseID[i].Equals(t2[m]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals(">"))
                    {
                        string[] t2 = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (string.Compare(name[i], textBox4.Text) == 1 || courseID[i].Equals(t2[m]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("<"))
                    {
                        string[] t2 = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (string.Compare(name[i], textBox4.Text) == -1 || courseID[i].Equals(t2[m]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    break;
                                }
                            }
                        }
                    }
                }


            }

            if (comboBox2.Text.Equals("Course Name") && comboBox6.Text.Equals("Salery"))
            {
                string O1 = comboBox3.Text;
                string V1 = textBox3.Text;

                string O2 = comboBox5.Text;
                string V2 = textBox4.Text;

                if (radioButton11.Checked)
                {
                    //=first
                    if (O1.Equals("=") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (courseID[i].Equals(textBox3.Text) && Salery[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (courseID[i].Equals(textBox3.Text) && !Salery[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (courseID[i].Equals(textBox3.Text) && double.Parse(Salery[i]) > double.Parse(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (courseID[i].Equals(textBox3.Text) && double.Parse(Salery[i]) < double.Parse(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (courseID[i].Equals(textBox3.Text) && Salery[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    //!=first
                    if (O1.Equals("!=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!courseID[i].Equals(textBox3.Text) && !Salery[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!courseID[i].Equals(textBox3.Text) && Salery[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!courseID[i].Equals(textBox3.Text) && double.Parse(Salery[i]) > double.Parse(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!courseID[i].Equals(textBox3.Text) && double.Parse(Salery[i]) < double.Parse(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (!courseID[i].Equals(textBox3.Text) && Salery[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    //<First
                    if (O1.Equals("<") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(courseID[i], textBox3.Text) == -1 && double.Parse(Salery[i]) < double.Parse(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(courseID[i], textBox3.Text) == -1 && Salery[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(courseID[i], textBox3.Text) == -1 && !Salery[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(courseID[i], textBox3.Text) == -1 && double.Parse(Salery[i]) > double.Parse(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (string.Compare(courseID[i], textBox3.Text) == -1 && Salery[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    //>first
                    if (O1.Equals(">") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(courseID[i], textBox3.Text) == 1 && double.Parse(Salery[i]) > double.Parse(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(courseID[i], textBox3.Text) == 1 && Salery[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(courseID[i], textBox3.Text) == 1 && !Salery[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(courseID[i], textBox3.Text) == 1 && double.Parse(Salery[i]) < double.Parse(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (string.Compare(courseID[i], textBox3.Text) == 1 && Salery[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    //IN First
                    if (O1.Equals("IN") && O2.Equals("IN"))
                    {
                        string[] t2 = textBox3.Text.Split(',');
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                for (int m = 0; m < t2.Length; m++)
                                {
                                    if (courseID[i].Equals(t2[m]) && Salery[i].Equals(t[j]))
                                    {

                                        dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    }
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("="))
                    {
                        string[] t2 = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (courseID[i].Equals(t2[m]) && Salery[i].Equals(textBox4.Text))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("!="))
                    {
                        string[] t2 = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (courseID[i].Equals(t2[m]) && !Salery[i].Equals(textBox4.Text))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals(">"))
                    {
                        string[] t2 = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (courseID[i].Equals(t2[m]) && double.Parse(Salery[i]) > double.Parse(textBox4.Text))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("<"))
                    {
                        string[] t2 = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (courseID[i].Equals(t2[m]) && double.Parse(Salery[i]) < double.Parse(textBox4.Text))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                }
                            }
                        }
                    }

                }
                if (radioButton12.Checked)
                {
                    //=first
                    if (O1.Equals("=") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (courseID[i].Equals(textBox3.Text) || Salery[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (courseID[i].Equals(textBox3.Text) || !Salery[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (courseID[i].Equals(textBox3.Text) || double.Parse(Salery[i]) > double.Parse(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (courseID[i].Equals(textBox3.Text) || double.Parse(Salery[i]) < double.Parse(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (courseID[i].Equals(textBox3.Text) || Salery[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //!=first
                    if (O1.Equals("!=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!courseID[i].Equals(textBox3.Text) || !Salery[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!courseID[i].Equals(textBox3.Text) || Salery[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!courseID[i].Equals(textBox3.Text) || double.Parse(Salery[i]) > double.Parse(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (!courseID[i].Equals(textBox3.Text) || double.Parse(Salery[i]) < double.Parse(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (!courseID[i].Equals(textBox3.Text) || Salery[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //<First
                    if (O1.Equals("<") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(courseID[i], textBox3.Text) == -1 || double.Parse(Salery[i]) < double.Parse(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(courseID[i], textBox3.Text) == -1 || Salery[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(courseID[i], textBox3.Text) == -1 || !Salery[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(courseID[i], textBox3.Text) == -1 || double.Parse(Salery[i]) > double.Parse(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (string.Compare(courseID[i], textBox3.Text) == -1 || Salery[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //>first
                    if (O1.Equals(">") && O2.Equals(">"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(courseID[i], textBox3.Text) == 1 || double.Parse(Salery[i]) > double.Parse(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(courseID[i], textBox3.Text) == 1 || Salery[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("!="))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(courseID[i], textBox3.Text) == 1 || !Salery[i].Equals(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("<"))
                    {
                        for (int i = 0; i < T1.Length; i++)
                        {
                            if (string.Compare(courseID[i], textBox3.Text) == 1 || double.Parse(Salery[i]) < double.Parse(textBox4.Text))
                            {

                                dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("IN"))
                    {
                        string[] t = textBox4.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (string.Compare(courseID[i], textBox3.Text) == 1 || Salery[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //IN First
                    if (O1.Equals("IN") && O2.Equals("IN"))
                    {
                        string[] t2 = textBox3.Text.Split(',');
                        string[] t = textBox4.Text.Split(',');
                        List<int> z = new List<int> { };
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (Salery[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    z.Add(i);
                                    break;
                                }
                            }
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (courseID[i].Equals(t2[m]))
                                {
                                    if (!z.Contains(i))
                                    {
                                        dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                        break;
                                    }
                                }
                            }

                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("="))
                    {
                        string[] t2 = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (courseID[i].Equals(t2[m]) || Salery[i].Equals(textBox4.Text))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("!="))
                    {
                        string[] t2 = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (courseID[i].Equals(t2[m]) || !Salery[i].Equals(textBox4.Text))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals(">"))
                    {
                        string[] t2 = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (courseID[i].Equals(t2[m]) || double.Parse(Salery[i]) > double.Parse(textBox4.Text))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("<"))
                    {
                        string[] t2 = textBox3.Text.Split(',');
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (courseID[i].Equals(t2[m]) || double.Parse(Salery[i]) < double.Parse(textBox4.Text))
                                {

                                    dgvDisplay.Rows.Add(new string[] { ID[i], name[i], Salery[i], courseID[i] });
                                    break;
                                }
                            }
                        }
                    }
                }

            }
        }

        private void button1_Click_1(object sender, EventArgs e)
        {
            dgvDisplay.Rows.Clear();
            string Value = comboBox10.Text;

            if (Value.Equals("ID"))
            {
                if (radioButton24.Checked)
                {
                    for (int i = 0; i < C1.Length; i++)
                    {
                        if (c_ID[i].Equals(textBox7.Text))
                        {

                            dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                        }
                    }
                }

                if (radioButton23.Checked)
                {
                    for (int i = 0; i < C1.Length; i++)
                    {
                        if (!c_ID[i].Equals(textBox7.Text))
                        {

                            dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                        }
                    }
                }

                if (radioButton21.Checked)
                {
                    for (int i = 0; i < C1.Length; i++)
                    {
                        if (int.Parse(c_ID[i]) > int.Parse(textBox7.Text))
                        {

                            dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                        }
                    }
                }

                if (radioButton22.Checked)
                {
                    for (int i = 0; i < C1.Length; i++)
                    {
                        if (int.Parse(c_ID[i]) < int.Parse(textBox7.Text))
                        {

                            dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                        }
                    }
                }

                if (radioButton20.Checked)
                {
                    string[] t = textBox7.Text.Split(',');
                    for (int i = 0; i < C1.Length; i++)
                    {
                        for (int j = 0; j < t.Length; j++)
                        {
                            if (c_ID[i].Equals(t[j]))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }
                }
            }

            if (Value.Equals("Name"))
            {
                if (radioButton24.Checked)
                {
                    for (int i = 0; i < C1.Length; i++)
                    {
                        if (c_name[i].Equals(textBox7.Text))
                        {

                            dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                        }
                    }
                }

                if (radioButton23.Checked)
                {
                    for (int i = 0; i < C1.Length; i++)
                    {
                        if (!c_name[i].Equals(textBox7.Text))
                        {

                            dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                        }
                    }
                }

                if (radioButton21.Checked)
                {
                    for (int i = 0; i < C1.Length; i++)
                    {
                        if (string.Compare(c_name[i], textBox7.Text) == 1)
                        {

                            dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                        }
                    }
                }

                if (radioButton22.Checked)
                {
                    for (int i = 0; i < C1.Length; i++)
                    {
                        if (string.Compare(c_name[i], textBox7.Text) == -1)
                        {

                            dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                        }
                    }
                }

                if (radioButton20.Checked)
                {
                    string[] t = textBox7.Text.Split(',');
                    for (int i = 0; i < C1.Length; i++)
                    {
                        for (int j = 0; j < t.Length; j++)
                        {
                            if (c_name[i].Equals(t[j]))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }
                }
            }

            if (Value.Equals("Time"))
            {
                if (radioButton24.Checked)
                {
                    for (int i = 0; i < C1.Length; i++)
                    {
                        if (c_Time[i].Equals(textBox7.Text))
                        {

                            dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                        }
                    }
                }

                if (radioButton23.Checked)
                {
                    for (int i = 0; i < C1.Length; i++)
                    {
                        if (!c_Time[i].Equals(textBox7.Text))
                        {

                            dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                        }
                    }
                }

                if (radioButton21.Checked)
                {
                    for (int i = 0; i < C1.Length; i++)
                    {
                        if (int.Parse(c_Time[i]) > int.Parse(textBox7.Text))
                        {

                            dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                        }
                    }
                }

                if (radioButton22.Checked)
                {
                    for (int i = 0; i < C1.Length; i++)
                    {
                        if (int.Parse(c_Time[i]) < int.Parse(textBox7.Text))
                        {

                            dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                        }
                    }
                }

                if (radioButton20.Checked)
                {
                    string[] t = textBox7.Text.Split(',');
                    for (int i = 0; i < C1.Length; i++)
                    {
                        for (int j = 0; j < t.Length; j++)
                        {
                            if (c_Time[i].Equals(t[j]))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }
                }
            }

            if (Value.Equals("Grade Of The Course"))
            {
                if (radioButton24.Checked)
                {
                    for (int i = 0; i < C1.Length; i++)
                    {
                        if (c_grade[i].Equals(textBox7.Text))
                        {

                            dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                        }
                    }
                }

                if (radioButton23.Checked)
                {
                    for (int i = 0; i < C1.Length; i++)
                    {
                        if (!c_grade[i].Equals(textBox7.Text))
                        {

                            dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                        }
                    }
                }

                if (radioButton21.Checked)
                {
                    for (int i = 0; i < C1.Length; i++)
                    {
                        if (int.Parse(c_grade[i]) > int.Parse(textBox7.Text))
                        {

                            dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                        }
                    }
                }

                if (radioButton22.Checked)
                {
                    for (int i = 0; i < C1.Length; i++)
                    {
                        if (int.Parse(c_grade[i]) < int.Parse(textBox7.Text))
                        {

                            dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                        }
                    }
                }

                if (radioButton20.Checked)
                {
                    string[] t = textBox7.Text.Split(',');
                    for (int i = 0; i < C1.Length; i++)
                    {
                        for (int j = 0; j < t.Length; j++)
                        {
                            if (c_grade[i].Equals(t[j]))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }
                }
            }
        }

        private void radioButton19_CheckedChanged(object sender, EventArgs e)
        {
            try
            {

                int[] Temp = new int[dgvDisplay.Rows.Count - 1];
                int Sum = 0;
                for (int i = 0; i < dgvDisplay.Rows.Count - 1; i++)
                {
                    Temp[i] = int.Parse(dgvDisplay.Rows[i].Cells[2].Value.ToString());
                }

                for (int i = 0; i < Temp.Length; i++)
                {
                    Sum += Temp[i];
                }
                textBox2.Text = "SUM = " + Sum.ToString();
            }
            catch
            {
                MessageBox.Show("Must Select Time From First Qusetion.");

            }
        }

        private void radioButton29_CheckedChanged(object sender, EventArgs e)
        {
            try
            {

                int[] Temp = new int[dgvDisplay.Rows.Count - 1];
                int Sum = 0;
                for (int i = 0; i < dgvDisplay.Rows.Count - 1; i++)
                {
                    Temp[i] = int.Parse(dgvDisplay.Rows[i].Cells[3].Value.ToString());
                }

                for (int i = 0; i < Temp.Length; i++)
                {
                    Sum += Temp[i];
                }
                textBox2.Text = "SUM = " + Sum.ToString();
            }
            catch
            {
                MessageBox.Show("Must Select Grade Of The Course From First Qusetion.");

            }
        }

        private void radioButton18_CheckedChanged(object sender, EventArgs e)
        {
            try
            {
                int[] Temp = new int[dgvDisplay.Rows.Count - 1];
                double Avg = 0.0;
                for (int i = 0; i < dgvDisplay.Rows.Count - 1; i++)
                {
                    Temp[i] = int.Parse(dgvDisplay.Rows[i].Cells[2].Value.ToString());
                }

                for (int i = 0; i < Temp.Length; i++)
                {
                    Avg += Temp[i];
                }
                Avg = Avg / (double)Temp.Length;
                textBox2.Text = "AVG = " + Avg.ToString();
            }
            catch
            {
                MessageBox.Show("Must Select Time From First Qusetion.");
            }
        }

        private void radioButton28_CheckedChanged(object sender, EventArgs e)
        {
            try
            {
                int[] Temp = new int[dgvDisplay.Rows.Count - 1];
                double Avg = 0.0;
                for (int i = 0; i < dgvDisplay.Rows.Count - 1; i++)
                {
                    Temp[i] = int.Parse(dgvDisplay.Rows[i].Cells[3].Value.ToString());
                }

                for (int i = 0; i < Temp.Length; i++)
                {
                    Avg += Temp[i];
                }
                Avg = Avg / (double)Temp.Length;
                textBox2.Text = "AVG = " + Avg.ToString();
            }
            catch
            {
                MessageBox.Show("Must Select Grade Of The Course From First Qusetion.");
            }
        }

        private void radioButton17_CheckedChanged(object sender, EventArgs e)
        {
            try
            {
                int[] Temp = new int[dgvDisplay.Rows.Count - 1];
                for (int i = 0; i < dgvDisplay.Rows.Count - 1; i++)
                {
                    Temp[i] = int.Parse(dgvDisplay.Rows[i].Cells[2].Value.ToString());
                }

                textBox2.Text = "MAX = " + Temp.Max().ToString();
            }
            catch
            {
                MessageBox.Show("Must Select Time From First Qusetion.");
            }
        }

        private void radioButton27_CheckedChanged(object sender, EventArgs e)
        {
            try
            {
                int[] Temp = new int[dgvDisplay.Rows.Count - 1];
                for (int i = 0; i < dgvDisplay.Rows.Count - 1; i++)
                {
                    Temp[i] = int.Parse(dgvDisplay.Rows[i].Cells[3].Value.ToString());
                }

                textBox2.Text = "MAX = " + Temp.Max().ToString();
            }
            catch
            {
                MessageBox.Show("Must Select Grade Of The Course From First Qusetion.");
            }
        }

        private void radioButton16_CheckedChanged(object sender, EventArgs e)
        {
            try
            {
                int[] Temp = new int[dgvDisplay.Rows.Count - 1];
                for (int i = 0; i < dgvDisplay.Rows.Count - 1; i++)
                {
                    Temp[i] = int.Parse(dgvDisplay.Rows[i].Cells[2].Value.ToString());
                }

                textBox2.Text = "MIN = " + Temp.Min().ToString();
            }

            catch
            {
                MessageBox.Show("Must Select Time From First Qusetion.");
            }
        }

        private void radioButton26_CheckedChanged(object sender, EventArgs e)
        {
            try
            {
                int[] Temp = new int[dgvDisplay.Rows.Count - 1];
                for (int i = 0; i < dgvDisplay.Rows.Count - 1; i++)
                {
                    Temp[i] = int.Parse(dgvDisplay.Rows[i].Cells[3].Value.ToString());
                }

                textBox2.Text = "MIN = " + Temp.Min().ToString();
            }

            catch
            {
                MessageBox.Show("Must Select Grade Of The Course From First Qusetion.");
            }
        }

        private void radioButton15_CheckedChanged(object sender, EventArgs e)
        {
            try
            {
                textBox2.Text = "COUNT = " + (dgvDisplay.Rows.Count - 1).ToString();
            }
            catch
            {


                MessageBox.Show("Must Select Time From First Qusetion.");

            }
        }

        private void radioButton25_CheckedChanged(object sender, EventArgs e)
        {
            try
            {
                textBox2.Text = "COUNT = " + (dgvDisplay.Rows.Count - 1).ToString();
            }
            catch
            {


                MessageBox.Show("Must Select Grade Of The Course From First Qusetion.");

            }
        }

        private void button6_Click(object sender, EventArgs e)
        {
            dgvDisplay.Rows.Clear();

            //ID First
            if (comboBox9.Text.Equals("ID") && comboBox4.Text.Equals("ID"))
            {
                string O1 = comboBox8.Text;
                string V1 = textBox6.Text;

                string O2 = comboBox7.Text;
                string V2 = textBox5.Text;

                if (radioButton14.Checked)
                {
                    //=first
                    if (O1.Equals("=") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_ID[i].Equals(V1) && c_ID[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_ID[i].Equals(V1) && !c_ID[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_ID[i].Equals(V1) && int.Parse(c_ID[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_ID[i].Equals(V1) && int.Parse(c_ID[i]) < int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (c_ID[i].Equals(V1) && c_ID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                    //!=first
                    if (O1.Equals("!=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_ID[i].Equals(V1) && !c_ID[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_ID[i].Equals(V1) && c_ID[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_ID[i].Equals(V1) && int.Parse(c_ID[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_ID[i].Equals(V1) && int.Parse(c_ID[i]) < int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (!c_ID[i].Equals(V1) && c_ID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                    //<First
                    if (O1.Equals("<") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_ID[i]) < int.Parse(V1) && int.Parse(c_ID[i]) < int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_ID[i]) < int.Parse(V1) && c_ID[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_ID[i]) < int.Parse(V1) && !c_ID[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_ID[i]) < int.Parse(V1) && int.Parse(c_ID[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (int.Parse(c_ID[i]) < int.Parse(V1) && c_ID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                    //>first
                    if (O1.Equals(">") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_ID[i]) > int.Parse(V1) && int.Parse(c_ID[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_ID[i]) > int.Parse(V1) && c_ID[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_ID[i]) > int.Parse(V1) && !c_ID[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_ID[i]) > int.Parse(V1) && int.Parse(c_ID[i]) < int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (int.Parse(c_ID[i]) > int.Parse(V1) && c_ID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                    //IN First
                    if (O1.Equals("IN") && O2.Equals("IN"))
                    {
                        string[] t2 = V1.Split(',');
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                for (int m = 0; m < t2.Length; m++)
                                {
                                    if (c_ID[i].Equals(t2[m]) && c_ID[i].Equals(t[j]))
                                    {

                                        dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    }
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("="))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_ID[i].Equals(t2[m]) && c_ID[i].Equals(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("!="))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_ID[i].Equals(t2[m]) && !c_ID[i].Equals(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals(">"))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_ID[i].Equals(t2[m]) && int.Parse(c_ID[i]) > int.Parse(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("<"))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_ID[i].Equals(t2[m]) && int.Parse(c_ID[i]) < int.Parse(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                }
                if (radioButton13.Checked)
                {
                    //=first
                    if (O1.Equals("=") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_ID[i].Equals(V1) || c_ID[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_ID[i].Equals(V1) || !c_ID[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_ID[i].Equals(V1) || int.Parse(c_ID[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_ID[i].Equals(V1) || int.Parse(c_ID[i]) < int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (c_ID[i].Equals(V1) || c_ID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //!=first
                    if (O1.Equals("!=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_ID[i].Equals(V1) || !c_ID[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_ID[i].Equals(V1) || c_ID[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_ID[i].Equals(V1) || int.Parse(c_ID[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_ID[i].Equals(V1) || int.Parse(c_ID[i]) < int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (!c_ID[i].Equals(V1) || c_ID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //<First
                    if (O1.Equals("<") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_ID[i]) < int.Parse(V1) || int.Parse(c_ID[i]) < int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_ID[i]) < int.Parse(V1) || c_ID[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_ID[i]) < int.Parse(V1) || !c_ID[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_ID[i]) < int.Parse(V1) || int.Parse(c_ID[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (int.Parse(c_ID[i]) < int.Parse(V1) || c_ID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //>first
                    if (O1.Equals(">") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_ID[i]) > int.Parse(V1) || int.Parse(c_ID[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_ID[i]) > int.Parse(V1) || c_ID[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_ID[i]) > int.Parse(V1) || !c_ID[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_ID[i]) > int.Parse(V1) || int.Parse(c_ID[i]) < int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (int.Parse(c_ID[i]) > int.Parse(V1) || c_ID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //IN First
                    if (O1.Equals("IN") && O2.Equals("IN"))
                    {
                        string[] t2 = V1.Split(',');
                        string[] t = V2.Split(',');
                        List<int> z = new List<int> { };
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (c_ID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    z.Add(i);
                                    break;
                                }
                            }
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_ID[i].Equals(t2[m]))
                                {
                                    if (!z.Contains(i))
                                    {
                                        dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                        break;
                                    }
                                }
                            }

                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("="))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_ID[i].Equals(t2[m]) || c_ID[i].Equals(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("!="))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_ID[i].Equals(t2[m]) || !c_ID[i].Equals(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals(">"))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_ID[i].Equals(t2[m]) || int.Parse(c_ID[i]) > int.Parse(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("<"))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_ID[i].Equals(t2[m]) || int.Parse(c_ID[i]) < int.Parse(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }
                }

            }
            //==========================================================================
            if (comboBox9.Text.Equals("ID") && comboBox4.Text.Equals("Name"))
            {
                string O1 = comboBox8.Text;
                string V1 = textBox6.Text;

                string O2 = comboBox7.Text;
                string V2 = textBox5.Text;

                if (radioButton14.Checked)
                {
                    //=first
                    if (O1.Equals("=") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_ID[i].Equals(V1) && c_name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_ID[i].Equals(V1) && !c_name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_ID[i].Equals(V1) && string.Compare(c_name[i], V2) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_ID[i].Equals(V1) && string.Compare(c_name[i], V2) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (c_ID[i].Equals(V1) && c_name[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                    //!=first
                    if (O1.Equals("!=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_ID[i].Equals(V1) && !c_name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_ID[i].Equals(V1) && name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_ID[i].Equals(V1) && string.Compare(c_name[i], V2) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_ID[i].Equals(V1) && string.Compare(c_name[i], V2) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (!c_ID[i].Equals(V1) && c_name[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                    //<First
                    if (O1.Equals("<") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_ID[i]) < int.Parse(V1) && string.Compare(c_name[i], V2) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_ID[i]) < int.Parse(V1) && c_name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_ID[i]) < int.Parse(V1) && !c_name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_ID[i]) < int.Parse(V1) && string.Compare(c_name[i], V2) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (int.Parse(c_ID[i]) < int.Parse(V1) && c_name[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                    //>first
                    if (O1.Equals(">") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_ID[i]) > int.Parse(V1) && string.Compare(c_name[i], V2) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_ID[i]) > int.Parse(V1) && c_name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_ID[i]) > int.Parse(V1) && !c_name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_ID[i]) > int.Parse(V1) && string.Compare(c_name[i], V2) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (int.Parse(c_ID[i]) > int.Parse(V1) && c_name[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                    //IN First
                    if (O1.Equals("IN") && O2.Equals("IN"))
                    {
                        string[] t2 = V1.Split(',');
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                for (int m = 0; m < t2.Length; m++)
                                {
                                    if (c_ID[i].Equals(t2[m]) && c_name[i].Equals(t[j]))
                                    {

                                        dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    }
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("="))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_ID[i].Equals(t2[m]) && c_name[i].Equals(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("!="))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_ID[i].Equals(t2[m]) && !c_name[i].Equals(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals(">"))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_ID[i].Equals(t2[m]) && string.Compare(c_name[i], V2) == 1)
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("<"))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_ID[i].Equals(t2[m]) && string.Compare(c_name[i], V2) == -1)
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                }
                if (radioButton13.Checked)
                {
                    //=first
                    if (O1.Equals("=") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_ID[i].Equals(V1) || c_name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_ID[i].Equals(V1) || !c_name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_ID[i].Equals(V1) || string.Compare(c_name[i], V2) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_ID[i].Equals(V1) || string.Compare(c_name[i], V2) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (c_ID[i].Equals(V1) || c_name[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //!=first
                    if (O1.Equals("!=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_ID[i].Equals(V1) || !c_name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_ID[i].Equals(V1) || c_name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_ID[i].Equals(V1) || string.Compare(c_name[i], V2) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_ID[i].Equals(V1) || string.Compare(c_name[i], V2) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (!c_ID[i].Equals(V1) || c_name[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //<First
                    if (O1.Equals("<") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_ID[i]) < int.Parse(V1) || string.Compare(c_name[i], V2) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_ID[i]) < int.Parse(V1) || c_name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_ID[i]) < int.Parse(V1) || !c_name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_ID[i]) < int.Parse(V1) || string.Compare(c_name[i], V2) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (int.Parse(c_ID[i]) < int.Parse(V1) || c_name[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //>first
                    if (O1.Equals(">") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_ID[i]) > int.Parse(V1) || string.Compare(c_name[i], V2) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_ID[i]) > int.Parse(V1) || c_name[i].Equals(V1))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_ID[i]) > int.Parse(V1) || !c_name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_ID[i]) > int.Parse(V1) || string.Compare(c_name[i], V2) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (int.Parse(c_ID[i]) > int.Parse(V1) || c_name[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //IN First
                    if (O1.Equals("IN") && O2.Equals("IN"))
                    {
                        string[] t2 = V1.Split(',');
                        string[] t = V2.Split(',');
                        List<int> z = new List<int> { };
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (c_name[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    z.Add(i);
                                    break;
                                }
                            }
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_ID[i].Equals(t2[m]))
                                {
                                    if (!z.Contains(i))
                                    {
                                        dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                        break;
                                    }
                                }
                            }

                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("="))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_ID[i].Equals(t2[m]) || c_name[i].Equals(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("!="))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_ID[i].Equals(t2[m]) || !c_name[i].Equals(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals(">"))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_ID[i].Equals(t2[m]) || string.Compare(c_name[i], V2) == 1)
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("<"))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_ID[i].Equals(t2[m]) || string.Compare(c_name[i], V2) == -1)
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }
                }

            }
            //===================================================================
            if (comboBox9.Text.Equals("ID") && comboBox4.Text.Equals("Time"))
            {
                string O1 = comboBox8.Text;
                string V1 = textBox6.Text;

                string O2 = comboBox7.Text;
                string V2 = textBox5.Text;

                if (radioButton14.Checked)
                {
                    //=first
                    if (O1.Equals("=") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_ID[i].Equals(V1) && c_Time[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_ID[i].Equals(V1) && !c_Time[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_ID[i].Equals(V1) && int.Parse(c_Time[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_ID[i].Equals(V1) && int.Parse(c_Time[i]) < int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (c_ID[i].Equals(V1) && c_Time[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                    //!=first
                    if (O1.Equals("!=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_ID[i].Equals(V1) && !c_Time[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_ID[i].Equals(V1) && c_Time[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_ID[i].Equals(V1) && int.Parse(c_Time[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_ID[i].Equals(V1) && int.Parse(c_Time[i]) < int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (!c_ID[i].Equals(V1) && c_Time[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                    //<First
                    if (O1.Equals("<") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_ID[i]) < int.Parse(V1) && int.Parse(c_Time[i]) < int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_ID[i]) < int.Parse(V1) && c_Time[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_ID[i]) < int.Parse(V1) && !c_Time[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_ID[i]) < int.Parse(V1) && int.Parse(c_Time[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (int.Parse(c_ID[i]) < int.Parse(V1) && c_Time[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                    //>first
                    if (O1.Equals(">") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_ID[i]) > int.Parse(V1) && int.Parse(c_Time[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_ID[i]) > int.Parse(V1) && c_Time[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_ID[i]) > int.Parse(V1) && !c_Time[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_ID[i]) > int.Parse(V1) && int.Parse(c_Time[i]) < int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (int.Parse(c_ID[i]) > int.Parse(V1) && c_Time[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                    //IN First
                    if (O1.Equals("IN") && O2.Equals("IN"))
                    {
                        string[] t2 = V1.Split(',');
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                for (int m = 0; m < t2.Length; m++)
                                {
                                    if (c_ID[i].Equals(t2[m]) && c_Time[i].Equals(t[j]))
                                    {

                                        dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    }
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("="))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_ID[i].Equals(t2[m]) && c_Time[i].Equals(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("!="))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_ID[i].Equals(t2[m]) && !c_Time[i].Equals(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals(">"))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_ID[i].Equals(t2[m]) && int.Parse(c_Time[i]) > int.Parse(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("<"))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_ID[i].Equals(t2[m]) && int.Parse(c_Time[i]) < int.Parse(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                }
                if (radioButton13.Checked)
                {
                    //=first
                    if (O1.Equals("=") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_ID[i].Equals(V1) || c_Time[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_ID[i].Equals(V1) || !c_Time[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_ID[i].Equals(V1) || int.Parse(c_Time[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_ID[i].Equals(V1) || int.Parse(c_Time[i]) < int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (c_ID[i].Equals(V1) || c_Time[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //!=first
                    if (O1.Equals("!=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_ID[i].Equals(V1) || !c_Time[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_ID[i].Equals(V1) || c_Time[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_ID[i].Equals(V1) || int.Parse(c_Time[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_ID[i].Equals(V1) || int.Parse(c_Time[i]) < int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (!c_ID[i].Equals(V1) || c_Time[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //<First
                    if (O1.Equals("<") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_ID[i]) < int.Parse(V1) || int.Parse(c_Time[i]) < int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_ID[i]) < int.Parse(V1) || c_Time[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_ID[i]) < int.Parse(V1) || !c_Time[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_ID[i]) < int.Parse(V1) || int.Parse(c_Time[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (int.Parse(c_ID[i]) < int.Parse(V1) || c_Time[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //>first
                    if (O1.Equals(">") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_ID[i]) > int.Parse(V1) || int.Parse(c_Time[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_ID[i]) > int.Parse(V1) || c_Time[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_ID[i]) > int.Parse(V1) || !c_Time[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_ID[i]) > int.Parse(V1) || int.Parse(c_Time[i]) < int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (int.Parse(c_ID[i]) > int.Parse(V1) || c_Time[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //IN First
                    if (O1.Equals("IN") && O2.Equals("IN"))
                    {
                        string[] t2 = V1.Split(',');
                        string[] t = V2.Split(',');
                        List<int> z = new List<int> { };
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (c_Time[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    z.Add(i);
                                    break;
                                }
                            }
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_ID[i].Equals(t2[m]))
                                {
                                    if (!z.Contains(i))
                                    {
                                        dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                        break;
                                    }
                                }
                            }

                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("="))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_ID[i].Equals(t2[m]) || c_Time[i].Equals(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("!="))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_ID[i].Equals(t2[m]) || !c_Time[i].Equals(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals(">"))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_ID[i].Equals(t2[m]) || int.Parse(c_Time[i]) > int.Parse(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("<"))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_ID[i].Equals(t2[m]) || int.Parse(c_Time[i]) < int.Parse(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }
                }

            }

            //=============================================================================
            if (comboBox9.Text.Equals("ID") && comboBox4.Text.Equals("Grade Of The Course"))
            {
                string O1 = comboBox8.Text;
                string V1 = textBox6.Text;

                string O2 = comboBox7.Text;
                string V2 = textBox5.Text;

                if (radioButton14.Checked)
                {
                    //=first
                    if (O1.Equals("=") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_ID[i].Equals(V1) && c_grade[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_ID[i].Equals(V1) && !c_grade[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_ID[i].Equals(V1) && int.Parse(c_grade[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_ID[i].Equals(V1) && int.Parse(c_grade[i]) < int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (c_ID[i].Equals(V1) && c_grade[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                    //!=first
                    if (O1.Equals("!=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_ID[i].Equals(V1) && !c_grade[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_ID[i].Equals(V1) && c_grade[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_ID[i].Equals(V1) && int.Parse(c_grade[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_ID[i].Equals(V1) && int.Parse(c_grade[i]) < int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (!c_ID[i].Equals(V1) && c_grade[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                    //<First
                    if (O1.Equals("<") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_ID[i]) < int.Parse(V1) && int.Parse(c_grade[i]) < int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_ID[i]) < int.Parse(V1) && c_grade[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_ID[i]) < int.Parse(V1) && !c_grade[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_ID[i]) < int.Parse(V1) && int.Parse(c_grade[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (int.Parse(c_ID[i]) < int.Parse(V1) && c_grade[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                    //>first
                    if (O1.Equals(">") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_ID[i]) > int.Parse(V1) && int.Parse(c_grade[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_ID[i]) > int.Parse(V1) && c_grade[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_ID[i]) > int.Parse(V1) && !c_grade[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_ID[i]) > int.Parse(V1) && int.Parse(c_grade[i]) < int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (int.Parse(c_ID[i]) > int.Parse(V1) && c_grade[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                    //IN First
                    if (O1.Equals("IN") && O2.Equals("IN"))
                    {
                        string[] t2 = V1.Split(',');
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                for (int m = 0; m < t2.Length; m++)
                                {
                                    if (c_ID[i].Equals(t2[m]) && c_grade[i].Equals(t[j]))
                                    {

                                        dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    }
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("="))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_ID[i].Equals(t2[m]) && c_grade[i].Equals(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("!="))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_ID[i].Equals(t2[m]) && !c_grade[i].Equals(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals(">"))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_ID[i].Equals(t2[m]) && int.Parse(c_grade[i]) > int.Parse(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("<"))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_ID[i].Equals(t2[m]) && int.Parse(c_grade[i]) < int.Parse(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                }
                if (radioButton13.Checked)
                {
                    //=first
                    if (O1.Equals("=") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_ID[i].Equals(V1) || c_grade[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_ID[i].Equals(V1) || !c_grade[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_ID[i].Equals(V1) || int.Parse(c_grade[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_ID[i].Equals(V1) || int.Parse(c_grade[i]) < int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (c_ID[i].Equals(V1) || c_grade[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //!=first
                    if (O1.Equals("!=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_ID[i].Equals(V1) || !c_grade[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_ID[i].Equals(V1) || c_grade[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_ID[i].Equals(V1) || int.Parse(c_grade[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_ID[i].Equals(V1) || int.Parse(c_grade[i]) < int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (!c_ID[i].Equals(V1) || c_grade[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //<First
                    if (O1.Equals("<") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_ID[i]) < int.Parse(V1) || int.Parse(c_grade[i]) < int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_ID[i]) < int.Parse(V1) || c_grade[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_ID[i]) < int.Parse(V1) || !c_grade[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_ID[i]) < int.Parse(V1) || int.Parse(c_grade[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (int.Parse(c_ID[i]) < int.Parse(V1) || c_grade[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //>first
                    if (O1.Equals(">") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_ID[i]) > int.Parse(V1) || int.Parse(c_grade[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_ID[i]) > int.Parse(V1) || c_grade[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_ID[i]) > int.Parse(V1) || !c_grade[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_ID[i]) > int.Parse(V1) || int.Parse(c_grade[i]) < int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (int.Parse(c_ID[i]) > int.Parse(V1) || c_grade[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //IN First
                    if (O1.Equals("IN") && O2.Equals("IN"))
                    {
                        string[] t2 = V1.Split(',');
                        string[] t = V2.Split(',');
                        List<int> z = new List<int> { };
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (c_grade[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    z.Add(i);
                                    break;
                                }
                            }
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_ID[i].Equals(t2[m]))
                                {
                                    if (!z.Contains(i))
                                    {
                                        dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                        break;
                                    }
                                }
                            }

                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("="))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_ID[i].Equals(t2[m]) || c_grade[i].Equals(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("!="))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_ID[i].Equals(t2[m]) || !c_grade[i].Equals(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals(">"))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_ID[i].Equals(t2[m]) || int.Parse(c_grade[i]) > int.Parse(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("<"))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_ID[i].Equals(t2[m]) || int.Parse(c_grade[i]) < int.Parse(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }
                }

            }
            //==============================================================================================
            
            //Name first
            if (comboBox9.Text.Equals("Name") && comboBox4.Text.Equals("Name"))
            {
                string O1 = comboBox8.Text;
                string V1 = textBox6.Text;

                string O2 = comboBox7.Text;
                string V2 = textBox5.Text;

                if (radioButton14.Checked)
                {
                    //=first
                    if (O1.Equals("=") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_name[i].Equals(V1) && c_name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_name[i].Equals(V1) && !c_name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_name[i].Equals(V1) && string.Compare(c_name[i], V2) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_name[i].Equals(V1) && string.Compare(c_name[i], V2) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (c_name[i].Equals(V1) && c_name[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                    //!=first
                    if (O1.Equals("!=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_name[i].Equals(V1) && !c_name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_name[i].Equals(V1) && name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_name[i].Equals(V1) && string.Compare(c_name[i], V2) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_name[i].Equals(V1) && string.Compare(c_name[i], V2) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (!c_name[i].Equals(V1) && c_name[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                    //<First
                    if (O1.Equals("<") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if ( string.Compare(c_name[i],V1) == -1 && string.Compare(c_name[i], V2) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (string.Compare(c_name[i], V1) == -1 && c_name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (string.Compare(c_name[i], V1) == -1 && !c_name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (string.Compare(c_name[i], V1) == -1 && string.Compare(c_name[i], V2) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (string.Compare(c_name[i], V1) == -1 && c_name[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                    //>first
                    if (O1.Equals(">") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (string.Compare(c_name[i], V1) == 1 && string.Compare(c_name[i], V2) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (string.Compare(c_name[i], V1) == 1 && c_name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (string.Compare(c_name[i], V1) == 1 && !c_name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (string.Compare(c_name[i], V1) == 1 && string.Compare(c_name[i], V2) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (string.Compare(c_name[i], V1) == 1 && c_name[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                    //IN First
                    if (O1.Equals("IN") && O2.Equals("IN"))
                    {
                        string[] t2 = V1.Split(',');
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                for (int m = 0; m < t2.Length; m++)
                                {
                                    if (c_name[i].Equals(t2[m]) && c_name[i].Equals(t[j]))
                                    {

                                        dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    }
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("="))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_name[i].Equals(t2[m]) && c_name[i].Equals(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("!="))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_name[i].Equals(t2[m]) && !c_name[i].Equals(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals(">"))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_name[i].Equals(t2[m]) && string.Compare(c_name[i], V2) == 1)
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("<"))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_name[i].Equals(t2[m]) && string.Compare(c_name[i], V2) == -1)
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                }
                if (radioButton13.Checked)
                {
                    //=first
                    if (O1.Equals("=") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_name[i].Equals(V1) || c_name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_name[i].Equals(V1) || !c_name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_name[i].Equals(V1) || string.Compare(c_name[i], V2) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_name[i].Equals(V1) || string.Compare(c_name[i], V2) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (c_name[i].Equals(V1) || c_name[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //!=first
                    if (O1.Equals("!=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_name[i].Equals(V1) || !c_name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_name[i].Equals(V1) || c_name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_name[i].Equals(V1) || string.Compare(c_name[i], V2) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_name[i].Equals(V1) || string.Compare(c_name[i], V2) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (!c_name[i].Equals(V1) || c_name[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //<First
                    if (O1.Equals("<") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (string.Compare(c_name[i], V1) == -1 || string.Compare(c_name[i], V2) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (string.Compare(c_name[i], V1) == -1 || c_name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (string.Compare(c_name[i], V1) == -1 || !c_name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (string.Compare(c_name[i], V1) == -1 || string.Compare(c_name[i], V2) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (string.Compare(c_name[i], V1) == -1 || c_name[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //>first
                    if (O1.Equals(">") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (string.Compare(c_name[i], V1) == 1 || string.Compare(c_name[i], V2) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (string.Compare(c_name[i], V1) == 1 || c_name[i].Equals(V1))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (string.Compare(c_name[i], V1) == 1 || !c_name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (string.Compare(c_name[i], V1) == 1 || string.Compare(c_name[i], V2) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (string.Compare(c_name[i], V1) == 1 || c_name[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //IN First
                    if (O1.Equals("IN") && O2.Equals("IN"))
                    {
                        string[] t2 = V1.Split(',');
                        string[] t = V2.Split(',');
                        List<int> z = new List<int> { };
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (c_name[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    z.Add(i);
                                    break;
                                }
                            }
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_name[i].Equals(t2[m]))
                                {
                                    if (!z.Contains(i))
                                    {
                                        dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                        break;
                                    }
                                }
                            }

                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("="))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_name[i].Equals(t2[m]) || c_name[i].Equals(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("!="))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_name[i].Equals(t2[m]) || !c_name[i].Equals(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals(">"))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_name[i].Equals(t2[m]) || string.Compare(c_name[i], V2) == 1)
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("<"))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_name[i].Equals(t2[m]) || string.Compare(c_name[i], V2) == -1)
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }
                }

            }
            //===========================================================================
            if (comboBox9.Text.Equals("Name") && comboBox4.Text.Equals("ID"))
            {
                string O1 = comboBox8.Text;
                string V1 = textBox6.Text;

                string O2 = comboBox7.Text;
                string V2 = textBox5.Text;

                if (radioButton14.Checked)
                {
                    //=first
                    if (O1.Equals("=") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_name[i].Equals(V1) && c_ID[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_name[i].Equals(V1) && !c_ID[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_name[i].Equals(V1) && int.Parse(c_ID[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_name[i].Equals(V1) && int.Parse(c_ID[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (c_name[i].Equals(V1) && c_ID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                    //!=first
                    if (O1.Equals("!=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_name[i].Equals(V1) && !c_ID[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_name[i].Equals(V1) && c_ID[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_name[i].Equals(V1) && int.Parse(c_ID[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_name[i].Equals(V1) && int.Parse(c_ID[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (!c_name[i].Equals(V1) && c_ID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                    //<First
                    if (O1.Equals("<") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (string.Compare(c_name[i], V1) == -1 && int.Parse(c_ID[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (string.Compare(c_name[i], V1) == -1 && c_ID[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (string.Compare(c_name[i], V1) == -1 && !c_ID[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (string.Compare(c_name[i], V1) == -1 && int.Parse(c_ID[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (string.Compare(c_name[i], V1) == -1 && c_ID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                    //>first
                    if (O1.Equals(">") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (string.Compare(c_name[i], V1) == 1 && int.Parse(c_ID[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (string.Compare(c_name[i], V1) == 1 && c_ID[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (string.Compare(c_name[i], V1) == 1 && !c_ID[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (string.Compare(c_name[i], V1) == 1 && int.Parse(c_ID[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (string.Compare(c_name[i], V1) == 1 && c_ID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                    //IN First
                    if (O1.Equals("IN") && O2.Equals("IN"))
                    {
                        string[] t2 = V1.Split(',');
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                for (int m = 0; m < t2.Length; m++)
                                {
                                    if (c_name[i].Equals(t2[m]) && c_ID[i].Equals(t[j]))
                                    {

                                        dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    }
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("="))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_name[i].Equals(t2[m]) && c_ID[i].Equals(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("!="))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_name[i].Equals(t2[m]) && !c_ID[i].Equals(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals(">"))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_name[i].Equals(t2[m]) && int.Parse(c_ID[i]) > int.Parse(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("<"))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_name[i].Equals(t2[m]) && int.Parse(c_ID[i]) > int.Parse(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                }
                if (radioButton13.Checked)
                {
                    //=first
                    if (O1.Equals("=") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_name[i].Equals(V1) || c_ID[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_name[i].Equals(V1) || !c_ID[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_name[i].Equals(V1) || int.Parse(c_ID[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_name[i].Equals(V1) || int.Parse(c_ID[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (c_name[i].Equals(V1) || c_ID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //!=first
                    if (O1.Equals("!=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_name[i].Equals(V1) || !c_ID[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_name[i].Equals(V1) || c_ID[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_name[i].Equals(V1) || int.Parse(c_ID[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_name[i].Equals(V1) || int.Parse(c_ID[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (!c_name[i].Equals(V1) || c_ID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //<First
                    if (O1.Equals("<") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (string.Compare(c_name[i], V1) == -1 || int.Parse(c_ID[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (string.Compare(c_name[i], V1) == -1 || c_ID[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (string.Compare(c_name[i], V1) == -1 || !c_ID[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (string.Compare(c_name[i], V1) == -1 || int.Parse(c_ID[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (string.Compare(c_name[i], V1) == -1 || c_ID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //>first
                    if (O1.Equals(">") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (string.Compare(c_name[i], V1) == 1 || int.Parse(c_ID[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (string.Compare(c_name[i], V1) == 1 || c_ID[i].Equals(V1))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (string.Compare(c_name[i], V1) == 1 || !c_ID[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (string.Compare(c_name[i], V1) == 1 || int.Parse(c_ID[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (string.Compare(c_name[i], V1) == 1 || c_ID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //IN First
                    if (O1.Equals("IN") && O2.Equals("IN"))
                    {
                        string[] t2 = V1.Split(',');
                        string[] t = V2.Split(',');
                        List<int> z = new List<int> { };
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (c_ID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    z.Add(i);
                                    break;
                                }
                            }
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_name[i].Equals(t2[m]))
                                {
                                    if (!z.Contains(i))
                                    {
                                        dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                        break;
                                    }
                                }
                            }

                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("="))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_name[i].Equals(t2[m]) || c_ID[i].Equals(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("!="))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_name[i].Equals(t2[m]) || !c_ID[i].Equals(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals(">"))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_name[i].Equals(t2[m]) || int.Parse(c_ID[i]) > int.Parse(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("<"))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_name[i].Equals(t2[m]) || int.Parse(c_ID[i]) > int.Parse(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }
                }

            }
            //===============================================================================
            if (comboBox9.Text.Equals("Name") && comboBox4.Text.Equals("Time"))
            {
                string O1 = comboBox8.Text;
                string V1 = textBox6.Text;

                string O2 = comboBox7.Text;
                string V2 = textBox5.Text;

                if (radioButton14.Checked)
                {
                    //=first
                    if (O1.Equals("=") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_name[i].Equals(V1) && c_Time[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_name[i].Equals(V1) && !c_Time[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_name[i].Equals(V1) && int.Parse(c_Time[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_name[i].Equals(V1) && int.Parse(c_Time[i]) < int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (c_name[i].Equals(V1) && c_Time[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                    //!=first
                    if (O1.Equals("!=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_name[i].Equals(V1) && !c_Time[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_name[i].Equals(V1) && c_Time[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_name[i].Equals(V1) && int.Parse(c_Time[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_name[i].Equals(V1) && int.Parse(c_Time[i]) < int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (!c_name[i].Equals(V1) && c_Time[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                    //<First
                    if (O1.Equals("<") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (string.Compare(c_name[i], V1) == -1 && int.Parse(c_Time[i]) < int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (string.Compare(c_name[i], V1) == -1 && c_Time[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (string.Compare(c_name[i], V1) == -1 && !c_Time[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (string.Compare(c_name[i], V1) == -1 && int.Parse(c_Time[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (string.Compare(c_name[i], V1) == -1 && c_Time[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                    //>first
                    if (O1.Equals(">") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (string.Compare(c_name[i], V1) == 1 && int.Parse(c_Time[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (string.Compare(c_name[i], V1) == 1 && c_Time[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (string.Compare(c_name[i], V1) == 1 && !c_Time[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (string.Compare(c_name[i], V1) == 1 && int.Parse(c_Time[i]) < int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (string.Compare(c_name[i], V1) == 1 && c_Time[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                    //IN First
                    if (O1.Equals("IN") && O2.Equals("IN"))
                    {
                        string[] t2 = V1.Split(',');
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                for (int m = 0; m < t2.Length; m++)
                                {
                                    if (c_name[i].Equals(t2[m]) && c_Time[i].Equals(t[j]))
                                    {

                                        dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    }
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("="))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_name[i].Equals(t2[m]) && c_Time[i].Equals(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("!="))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_name[i].Equals(t2[m]) && !c_Time[i].Equals(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals(">"))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_name[i].Equals(t2[m]) && int.Parse(c_Time[i]) > int.Parse(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("<"))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_name[i].Equals(t2[m]) && int.Parse(c_Time[i]) < int.Parse(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                }
                if (radioButton13.Checked)
                {
                    //=first
                    if (O1.Equals("=") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_name[i].Equals(V1) || c_Time[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_name[i].Equals(V1) || !c_Time[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_name[i].Equals(V1) || int.Parse(c_Time[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_name[i].Equals(V1) || int.Parse(c_Time[i]) < int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (c_name[i].Equals(V1) || c_Time[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //!=first
                    if (O1.Equals("!=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_name[i].Equals(V1) || !c_Time[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_name[i].Equals(V1) || c_Time[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_name[i].Equals(V1) || int.Parse(c_Time[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_name[i].Equals(V1) || int.Parse(c_Time[i]) < int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (!c_name[i].Equals(V1) || c_Time[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //<First
                    if (O1.Equals("<") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (string.Compare(c_name[i], V1) == -1 || int.Parse(c_Time[i]) < int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (string.Compare(c_name[i], V1) == -1 || c_Time[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (string.Compare(c_name[i], V1) == -1 || !c_Time[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (string.Compare(c_name[i], V1) == -1 || int.Parse(c_Time[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (string.Compare(c_name[i], V1) == -1 || c_Time[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //>first
                    if (O1.Equals(">") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (string.Compare(c_name[i], V1) == 1 || int.Parse(c_Time[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (string.Compare(c_name[i], V1) == 1 || c_Time[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (string.Compare(c_name[i], V1) == 1 || !c_Time[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (string.Compare(c_name[i], V1) == 1 || int.Parse(c_Time[i]) < int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (string.Compare(c_name[i], V1) == 1 || c_Time[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //IN First
                    if (O1.Equals("IN") && O2.Equals("IN"))
                    {
                        string[] t2 = V1.Split(',');
                        string[] t = V2.Split(',');
                        List<int> z = new List<int> { };
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (c_Time[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    z.Add(i);
                                    break;
                                }
                            }
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_name[i].Equals(t2[m]))
                                {
                                    if (!z.Contains(i))
                                    {
                                        dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                        break;
                                    }
                                }
                            }

                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("="))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_name[i].Equals(t2[m]) || c_Time[i].Equals(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("!="))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_name[i].Equals(t2[m]) || !c_Time[i].Equals(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals(">"))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_name[i].Equals(t2[m]) || int.Parse(c_Time[i]) > int.Parse(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("<"))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_name[i].Equals(t2[m]) || int.Parse(c_Time[i]) < int.Parse(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }
                }

            }
            //==================================================================================
            if (comboBox9.Text.Equals("Name") && comboBox4.Text.Equals("Grade Of The Course"))
            {
                string O1 = comboBox8.Text;
                string V1 = textBox6.Text;

                string O2 = comboBox7.Text;
                string V2 = textBox5.Text;

                if (radioButton14.Checked)
                {
                    //=first
                    if (O1.Equals("=") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_name[i].Equals(V1) && c_grade[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_name[i].Equals(V1) && !c_grade[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_name[i].Equals(V1) && int.Parse(c_grade[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_name[i].Equals(V1) && int.Parse(c_grade[i]) < int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (c_name[i].Equals(V1) && c_grade[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                    //!=first
                    if (O1.Equals("!=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_name[i].Equals(V1) && !c_grade[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_name[i].Equals(V1) && c_grade[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_name[i].Equals(V1) && int.Parse(c_grade[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_name[i].Equals(V1) && int.Parse(c_grade[i]) < int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (!c_name[i].Equals(V1) && c_grade[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                    //<First
                    if (O1.Equals("<") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (string.Compare(c_name[i], V1) == -1 && int.Parse(c_grade[i]) < int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (string.Compare(c_name[i], V1) == -1 && c_grade[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (string.Compare(c_name[i], V1) == -1 && !c_grade[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (string.Compare(c_name[i], V1) == -1 && int.Parse(c_grade[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (string.Compare(c_name[i], V1) == -1 && c_grade[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                    //>first
                    if (O1.Equals(">") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (string.Compare(c_name[i], V1) == 1 && int.Parse(c_grade[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (string.Compare(c_name[i], V1) == 1 && c_grade[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (string.Compare(c_name[i], V1) == 1 && !c_grade[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (string.Compare(c_name[i], V1) == 1 && int.Parse(c_grade[i]) < int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (string.Compare(c_name[i], V1) == 1 && c_grade[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                    //IN First
                    if (O1.Equals("IN") && O2.Equals("IN"))
                    {
                        string[] t2 = V1.Split(',');
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                for (int m = 0; m < t2.Length; m++)
                                {
                                    if (c_name[i].Equals(t2[m]) && c_grade[i].Equals(t[j]))
                                    {

                                        dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    }
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("="))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_name[i].Equals(t2[m]) && c_grade[i].Equals(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("!="))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_name[i].Equals(t2[m]) && !c_grade[i].Equals(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals(">"))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_name[i].Equals(t2[m]) && int.Parse(c_grade[i]) > int.Parse(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("<"))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_name[i].Equals(t2[m]) && int.Parse(c_grade[i]) < int.Parse(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                }
                if (radioButton13.Checked)
                {
                    //=first
                    if (O1.Equals("=") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_name[i].Equals(V1) || c_grade[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_name[i].Equals(V1) || !c_grade[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_name[i].Equals(V1) || int.Parse(c_grade[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_name[i].Equals(V1) || int.Parse(c_grade[i]) < int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (c_name[i].Equals(V1) || c_grade[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //!=first
                    if (O1.Equals("!=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_name[i].Equals(V1) || !c_grade[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_name[i].Equals(V1) || c_grade[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_name[i].Equals(V1) || int.Parse(c_grade[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_name[i].Equals(V1) || int.Parse(c_grade[i]) < int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (!c_name[i].Equals(V1) || c_grade[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //<First
                    if (O1.Equals("<") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (string.Compare(c_name[i], V1) == -1 || int.Parse(c_grade[i]) < int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (string.Compare(c_name[i], V1) == -1 || c_grade[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (string.Compare(c_name[i], V1) == -1 || !c_grade[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (string.Compare(c_name[i], V1) == -1 || int.Parse(c_grade[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (string.Compare(c_name[i], V1) == -1 || c_grade[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //>first
                    if (O1.Equals(">") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (string.Compare(c_name[i], V1) == 1 || int.Parse(c_grade[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (string.Compare(c_name[i], V1) == 1 || c_grade[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (string.Compare(c_name[i], V1) == 1 || !c_grade[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (string.Compare(c_name[i], V1) == 1 || int.Parse(c_grade[i]) < int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (string.Compare(c_name[i], V1) == 1 || c_grade[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //IN First
                    if (O1.Equals("IN") && O2.Equals("IN"))
                    {
                        string[] t2 = V1.Split(',');
                        string[] t = V2.Split(',');
                        List<int> z = new List<int> { };
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (c_grade[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    z.Add(i);
                                    break;
                                }
                            }
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_name[i].Equals(t2[m]))
                                {
                                    if (!z.Contains(i))
                                    {
                                        dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                        break;
                                    }
                                }
                            }

                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("="))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_name[i].Equals(t2[m]) || c_grade[i].Equals(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("!="))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_name[i].Equals(t2[m]) || !c_grade[i].Equals(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals(">"))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_name[i].Equals(t2[m]) || int.Parse(c_grade[i]) > int.Parse(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("<"))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_name[i].Equals(t2[m]) || int.Parse(c_grade[i]) < int.Parse(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }
                }

            }
            //===============================================================================
            
            //Time first
            if (comboBox9.Text.Equals("Time") && comboBox4.Text.Equals("ID"))
            {
                string O1 = comboBox8.Text;
                string V1 = textBox6.Text;

                string O2 = comboBox7.Text;
                string V2 = textBox5.Text;

                if (radioButton14.Checked)
                {
                    //=first
                    if (O1.Equals("=") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_Time[i].Equals(V1) && c_ID[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_Time[i].Equals(V1) && !c_ID[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_Time[i].Equals(V1) && int.Parse(c_ID[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_Time[i].Equals(V1) && int.Parse(c_ID[i]) < int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (c_Time[i].Equals(V1) && c_ID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                    //!=first
                    if (O1.Equals("!=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_Time[i].Equals(V1) && !c_ID[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_Time[i].Equals(V1) && c_ID[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_Time[i].Equals(V1) && int.Parse(c_ID[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_Time[i].Equals(V1) && int.Parse(c_ID[i]) < int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (!c_Time[i].Equals(V1) && c_ID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                    //<First
                    if (O1.Equals("<") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_Time[i]) < int.Parse(V1) && int.Parse(c_ID[i]) < int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_Time[i]) < int.Parse(V1) && c_ID[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_Time[i]) < int.Parse(V1) && !c_ID[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_Time[i]) < int.Parse(V1) && int.Parse(c_ID[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (int.Parse(c_Time[i]) < int.Parse(V1) && c_ID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                    //>first
                    if (O1.Equals(">") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_Time[i]) > int.Parse(V1) && int.Parse(c_ID[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_Time[i]) > int.Parse(V1) && c_ID[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_Time[i]) > int.Parse(V1) && !c_ID[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_Time[i]) > int.Parse(V1) && int.Parse(c_ID[i]) < int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (int.Parse(c_Time[i]) > int.Parse(V1) && c_ID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                    //IN First
                    if (O1.Equals("IN") && O2.Equals("IN"))
                    {
                        string[] t2 = V1.Split(',');
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                for (int m = 0; m < t2.Length; m++)
                                {
                                    if (c_Time[i].Equals(t2[m]) && c_ID[i].Equals(t[j]))
                                    {

                                        dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    }
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("="))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_Time[i].Equals(t2[m]) && c_ID[i].Equals(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("!="))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_Time[i].Equals(t2[m]) && !c_ID[i].Equals(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals(">"))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_Time[i].Equals(t2[m]) && int.Parse(c_ID[i]) > int.Parse(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("<"))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_Time[i].Equals(t2[m]) && int.Parse(c_ID[i]) < int.Parse(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                }
                if (radioButton13.Checked)
                {
                    //=first
                    if (O1.Equals("=") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_Time[i].Equals(V1) || c_ID[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_Time[i].Equals(V1) || !c_ID[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_Time[i].Equals(V1) || int.Parse(c_ID[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_Time[i].Equals(V1) || int.Parse(c_ID[i]) < int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (c_Time[i].Equals(V1) || c_ID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //!=first
                    if (O1.Equals("!=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_Time[i].Equals(V1) || !c_ID[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_Time[i].Equals(V1) || c_ID[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_Time[i].Equals(V1) || int.Parse(c_ID[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_Time[i].Equals(V1) || int.Parse(c_ID[i]) < int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (!c_Time[i].Equals(V1) || c_ID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //<First
                    if (O1.Equals("<") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_Time[i]) < int.Parse(V1) || int.Parse(c_ID[i]) < int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_Time[i]) < int.Parse(V1) || c_ID[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_Time[i]) < int.Parse(V1) || !c_ID[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_Time[i]) < int.Parse(V1) || int.Parse(c_ID[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (int.Parse(c_Time[i]) < int.Parse(V1) || c_ID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //>first
                    if (O1.Equals(">") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_Time[i]) > int.Parse(V1) || int.Parse(c_ID[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_Time[i]) > int.Parse(V1) || c_ID[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_Time[i]) > int.Parse(V1) || !c_ID[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_Time[i]) > int.Parse(V1) || int.Parse(c_ID[i]) < int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (int.Parse(c_Time[i]) > int.Parse(V1) || c_ID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //IN First
                    if (O1.Equals("IN") && O2.Equals("IN"))
                    {
                        string[] t2 = V1.Split(',');
                        string[] t = V2.Split(',');
                        List<int> z = new List<int> { };
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (c_Time[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    z.Add(i);
                                    break;
                                }
                            }
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_ID[i].Equals(t2[m]))
                                {
                                    if (!z.Contains(i))
                                    {
                                        dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                        break;
                                    }
                                }
                            }

                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("="))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_Time[i].Equals(t2[m]) || c_ID[i].Equals(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("!="))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_Time[i].Equals(t2[m]) || !c_ID[i].Equals(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals(">"))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_Time[i].Equals(t2[m]) || int.Parse(c_ID[i]) > int.Parse(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("<"))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_Time[i].Equals(t2[m]) || int.Parse(c_ID[i]) < int.Parse(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }
                }

            }
            //============================================================================
            if (comboBox9.Text.Equals("Time") && comboBox4.Text.Equals("Name"))
            {
                string O1 = comboBox8.Text;
                string V1 = textBox6.Text;

                string O2 = comboBox7.Text;
                string V2 = textBox5.Text;

                if (radioButton14.Checked)
                {
                    //=first
                    if (O1.Equals("=") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_Time[i].Equals(V1) && c_name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_Time[i].Equals(V1) && !c_name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_Time[i].Equals(V1) && string.Compare(c_name[i], V2) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_Time[i].Equals(V1) && string.Compare(c_name[i], V2) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (c_Time[i].Equals(V1) && c_name[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                    //!=first
                    if (O1.Equals("!=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_Time[i].Equals(V1) && !c_name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_Time[i].Equals(V1) && name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_Time[i].Equals(V1) && string.Compare(c_name[i], V2) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_Time[i].Equals(V1) && string.Compare(c_name[i], V2) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (!c_Time[i].Equals(V1) && c_name[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                    //<First
                    if (O1.Equals("<") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_Time[i]) < int.Parse(V1) && string.Compare(c_name[i], V2) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_Time[i]) < int.Parse(V1) && c_name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_Time[i]) < int.Parse(V1) && !c_name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_Time[i]) < int.Parse(V1) && string.Compare(c_name[i], V2) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (int.Parse(c_Time[i]) < int.Parse(V1) && c_name[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                    //>first
                    if (O1.Equals(">") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_Time[i]) > int.Parse(V1) && string.Compare(c_name[i], V2) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_Time[i]) > int.Parse(V1) && c_name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_Time[i]) > int.Parse(V1) && !c_name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_Time[i]) > int.Parse(V1) && string.Compare(c_name[i], V2) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (int.Parse(c_Time[i]) > int.Parse(V1) && c_name[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                    //IN First
                    if (O1.Equals("IN") && O2.Equals("IN"))
                    {
                        string[] t2 = V1.Split(',');
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                for (int m = 0; m < t2.Length; m++)
                                {
                                    if (c_Time[i].Equals(t2[m]) && c_name[i].Equals(t[j]))
                                    {

                                        dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    }
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("="))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_Time[i].Equals(t2[m]) && c_name[i].Equals(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("!="))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_Time[i].Equals(t2[m]) && !c_name[i].Equals(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals(">"))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_Time[i].Equals(t2[m]) && string.Compare(c_name[i], V2) == 1)
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("<"))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_Time[i].Equals(t2[m]) && string.Compare(c_name[i], V2) == -1)
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                }
                if (radioButton13.Checked)
                {
                    //=first
                    if (O1.Equals("=") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_Time[i].Equals(V1) || c_name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_Time[i].Equals(V1) || !c_name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_Time[i].Equals(V1) || string.Compare(c_name[i], V2) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_Time[i].Equals(V1) || string.Compare(c_name[i], V2) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (c_Time[i].Equals(V1) || c_name[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //!=first
                    if (O1.Equals("!=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_Time[i].Equals(V1) || !c_name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_Time[i].Equals(V1) || c_name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_Time[i].Equals(V1) || string.Compare(c_name[i], V2) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_Time[i].Equals(V1) || string.Compare(c_name[i], V2) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (!c_Time[i].Equals(V1) || c_name[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //<First
                    if (O1.Equals("<") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_Time[i]) < int.Parse(V1) || string.Compare(c_name[i], V2) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_Time[i]) < int.Parse(V1) || c_name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_Time[i]) < int.Parse(V1) || !c_name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_Time[i]) < int.Parse(V1) || string.Compare(c_name[i], V2) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (int.Parse(c_Time[i]) < int.Parse(V1) || c_name[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //>first
                    if (O1.Equals(">") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_Time[i]) > int.Parse(V1) || string.Compare(c_name[i], V2) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_Time[i]) > int.Parse(V1) || c_name[i].Equals(V1))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_Time[i]) > int.Parse(V1) || !c_name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_Time[i]) > int.Parse(V1) || string.Compare(c_name[i], V2) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (int.Parse(c_Time[i]) > int.Parse(V1) || c_name[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //IN First
                    if (O1.Equals("IN") && O2.Equals("IN"))
                    {
                        string[] t2 = V1.Split(',');
                        string[] t = V2.Split(',');
                        List<int> z = new List<int> { };
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (c_name[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    z.Add(i);
                                    break;
                                }
                            }
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_Time[i].Equals(t2[m]))
                                {
                                    if (!z.Contains(i))
                                    {
                                        dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                        break;
                                    }
                                }
                            }

                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("="))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_Time[i].Equals(t2[m]) || c_name[i].Equals(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("!="))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_Time[i].Equals(t2[m]) || !c_name[i].Equals(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals(">"))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_Time[i].Equals(t2[m]) || string.Compare(c_name[i], V2) == 1)
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("<"))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_Time[i].Equals(t2[m]) || string.Compare(c_name[i], V2) == -1)
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }
                }

            }
            //==================================================================================
            if (comboBox9.Text.Equals("Time") && comboBox4.Text.Equals("Time"))
            {
                string O1 = comboBox8.Text;
                string V1 = textBox6.Text;

                string O2 = comboBox7.Text;
                string V2 = textBox5.Text;

                if (radioButton14.Checked)
                {
                    //=first
                    if (O1.Equals("=") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_Time[i].Equals(V1) && c_Time[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_Time[i].Equals(V1) && !c_Time[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_Time[i].Equals(V1) && int.Parse(c_Time[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_Time[i].Equals(V1) && int.Parse(c_Time[i]) < int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (c_Time[i].Equals(V1) && c_Time[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                    //!=first
                    if (O1.Equals("!=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_Time[i].Equals(V1) && !c_Time[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_Time[i].Equals(V1) && c_Time[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_Time[i].Equals(V1) && int.Parse(c_Time[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_Time[i].Equals(V1) && int.Parse(c_Time[i]) < int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (!c_Time[i].Equals(V1) && c_Time[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                    //<First
                    if (O1.Equals("<") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_Time[i]) < int.Parse(V1) && int.Parse(c_Time[i]) < int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_Time[i]) < int.Parse(V1) && c_Time[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_Time[i]) < int.Parse(V1) && !c_Time[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_Time[i]) < int.Parse(V1) && int.Parse(c_Time[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (int.Parse(c_Time[i]) < int.Parse(V1) && c_Time[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                    //>first
                    if (O1.Equals(">") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_Time[i]) > int.Parse(V1) && int.Parse(c_Time[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_Time[i]) > int.Parse(V1) && c_Time[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_Time[i]) > int.Parse(V1) && !c_Time[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_Time[i]) > int.Parse(V1) && int.Parse(c_Time[i]) < int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (int.Parse(c_Time[i]) > int.Parse(V1) && c_Time[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                    //IN First
                    if (O1.Equals("IN") && O2.Equals("IN"))
                    {
                        string[] t2 = V1.Split(',');
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                for (int m = 0; m < t2.Length; m++)
                                {
                                    if (c_Time[i].Equals(t2[m]) && c_Time[i].Equals(t[j]))
                                    {

                                        dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    }
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("="))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_Time[i].Equals(t2[m]) && c_Time[i].Equals(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("!="))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_Time[i].Equals(t2[m]) && !c_Time[i].Equals(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals(">"))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_Time[i].Equals(t2[m]) && int.Parse(c_Time[i]) > int.Parse(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("<"))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_Time[i].Equals(t2[m]) && int.Parse(c_Time[i]) < int.Parse(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                }
                if (radioButton13.Checked)
                {
                    //=first
                    if (O1.Equals("=") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_Time[i].Equals(V1) || c_Time[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_Time[i].Equals(V1) || !c_Time[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_Time[i].Equals(V1) || int.Parse(c_Time[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_Time[i].Equals(V1) || int.Parse(c_Time[i]) < int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (c_Time[i].Equals(V1) || c_Time[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //!=first
                    if (O1.Equals("!=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_Time[i].Equals(V1) || !c_Time[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_Time[i].Equals(V1) || c_Time[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_Time[i].Equals(V1) || int.Parse(c_Time[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_Time[i].Equals(V1) || int.Parse(c_Time[i]) < int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (!c_Time[i].Equals(V1) || c_Time[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //<First
                    if (O1.Equals("<") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_Time[i]) < int.Parse(V1) || int.Parse(c_Time[i]) < int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_Time[i]) < int.Parse(V1) || c_Time[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_Time[i]) < int.Parse(V1) || !c_Time[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_Time[i]) < int.Parse(V1) || int.Parse(c_Time[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (int.Parse(c_Time[i]) < int.Parse(V1) || c_Time[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //>first
                    if (O1.Equals(">") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_Time[i]) > int.Parse(V1) || int.Parse(c_Time[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_Time[i]) > int.Parse(V1) || c_Time[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_Time[i]) > int.Parse(V1) || !c_Time[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_Time[i]) > int.Parse(V1) || int.Parse(c_Time[i]) < int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (int.Parse(c_Time[i]) > int.Parse(V1) || c_Time[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //IN First
                    if (O1.Equals("IN") && O2.Equals("IN"))
                    {
                        string[] t2 = V1.Split(',');
                        string[] t = V2.Split(',');
                        List<int> z = new List<int> { };
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (c_Time[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    z.Add(i);
                                    break;
                                }
                            }
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_Time[i].Equals(t2[m]))
                                {
                                    if (!z.Contains(i))
                                    {
                                        dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                        break;
                                    }
                                }
                            }

                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("="))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_Time[i].Equals(t2[m]) || c_Time[i].Equals(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("!="))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_Time[i].Equals(t2[m]) || !c_Time[i].Equals(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals(">"))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_Time[i].Equals(t2[m]) || int.Parse(c_Time[i]) > int.Parse(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("<"))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_Time[i].Equals(t2[m]) || int.Parse(c_Time[i]) < int.Parse(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }
                }

            }
            //==============================================================================
            if (comboBox9.Text.Equals("Time") && comboBox4.Text.Equals("Grade Of The Course"))
            {
                string O1 = comboBox8.Text;
                string V1 = textBox6.Text;

                string O2 = comboBox7.Text;
                string V2 = textBox5.Text;

                if (radioButton14.Checked)
                {
                    //=first
                    if (O1.Equals("=") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_Time[i].Equals(V1) && c_grade[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_Time[i].Equals(V1) && !c_grade[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_Time[i].Equals(V1) && int.Parse(c_grade[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_Time[i].Equals(V1) && int.Parse(c_grade[i]) < int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (c_Time[i].Equals(V1) && c_grade[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                    //!=first
                    if (O1.Equals("!=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_Time[i].Equals(V1) && !c_grade[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_Time[i].Equals(V1) && c_grade[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_Time[i].Equals(V1) && int.Parse(c_grade[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_Time[i].Equals(V1) && int.Parse(c_grade[i]) < int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (!c_Time[i].Equals(V1) && c_grade[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                    //<First
                    if (O1.Equals("<") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_Time[i]) < int.Parse(V1) && int.Parse(c_grade[i]) < int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_Time[i]) < int.Parse(V1) && c_grade[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_Time[i]) < int.Parse(V1) && !c_grade[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_Time[i]) < int.Parse(V1) && int.Parse(c_grade[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (int.Parse(c_Time[i]) < int.Parse(V1) && c_grade[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                    //>first
                    if (O1.Equals(">") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_Time[i]) > int.Parse(V1) && int.Parse(c_grade[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_Time[i]) > int.Parse(V1) && c_grade[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_Time[i]) > int.Parse(V1) && !c_grade[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_Time[i]) > int.Parse(V1) && int.Parse(c_grade[i]) < int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (int.Parse(c_Time[i]) > int.Parse(V1) && c_grade[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                    //IN First
                    if (O1.Equals("IN") && O2.Equals("IN"))
                    {
                        string[] t2 = V1.Split(',');
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                for (int m = 0; m < t2.Length; m++)
                                {
                                    if (c_Time[i].Equals(t2[m]) && c_grade[i].Equals(t[j]))
                                    {

                                        dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    }
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("="))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_Time[i].Equals(t2[m]) && c_grade[i].Equals(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("!="))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_Time[i].Equals(t2[m]) && !c_grade[i].Equals(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals(">"))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_Time[i].Equals(t2[m]) && int.Parse(c_grade[i]) > int.Parse(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("<"))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_Time[i].Equals(t2[m]) && int.Parse(c_grade[i]) < int.Parse(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                }
                if (radioButton13.Checked)
                {
                    //=first
                    if (O1.Equals("=") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_Time[i].Equals(V1) || c_grade[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_Time[i].Equals(V1) || !c_grade[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_Time[i].Equals(V1) || int.Parse(c_grade[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_Time[i].Equals(V1) || int.Parse(c_grade[i]) < int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (c_Time[i].Equals(V1) || c_grade[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //!=first
                    if (O1.Equals("!=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_Time[i].Equals(V1) || !c_grade[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_Time[i].Equals(V1) || c_grade[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_Time[i].Equals(V1) || int.Parse(c_grade[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_Time[i].Equals(V1) || int.Parse(c_grade[i]) < int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (!c_Time[i].Equals(V1) || c_grade[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //<First
                    if (O1.Equals("<") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_Time[i]) < int.Parse(V1) || int.Parse(c_grade[i]) < int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_Time[i]) < int.Parse(V1) || c_grade[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_Time[i]) < int.Parse(V1) || !c_grade[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_Time[i]) < int.Parse(V1) || int.Parse(c_grade[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (int.Parse(c_Time[i]) < int.Parse(V1) || c_grade[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //>first
                    if (O1.Equals(">") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_Time[i]) > int.Parse(V1) || int.Parse(c_grade[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_Time[i]) > int.Parse(V1) || c_grade[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_Time[i]) > int.Parse(V1) || !c_grade[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_Time[i]) > int.Parse(V1) || int.Parse(c_grade[i]) < int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (int.Parse(c_Time[i]) > int.Parse(V1) || c_grade[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //IN First
                    if (O1.Equals("IN") && O2.Equals("IN"))
                    {
                        string[] t2 = V1.Split(',');
                        string[] t = V2.Split(',');
                        List<int> z = new List<int> { };
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (c_grade[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    z.Add(i);
                                    break;
                                }
                            }
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_Time[i].Equals(t2[m]))
                                {
                                    if (!z.Contains(i))
                                    {
                                        dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                        break;
                                    }
                                }
                            }

                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("="))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_Time[i].Equals(t2[m]) || c_grade[i].Equals(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("!="))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_Time[i].Equals(t2[m]) || !c_grade[i].Equals(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals(">"))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_Time[i].Equals(t2[m]) || int.Parse(c_grade[i]) > int.Parse(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("<"))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_Time[i].Equals(t2[m]) || int.Parse(c_grade[i]) < int.Parse(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }
                }

            }
            //=============================================================================

            //grade first
            if (comboBox9.Text.Equals("Grade Of The Course") && comboBox4.Text.Equals("ID"))
            {
                string O1 = comboBox8.Text;
                string V1 = textBox6.Text;

                string O2 = comboBox7.Text;
                string V2 = textBox5.Text;

                if (radioButton14.Checked)
                {
                    //=first
                    if (O1.Equals("=") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_grade[i].Equals(V1) && c_ID[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_grade[i].Equals(V1) && !c_ID[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_grade[i].Equals(V1) && int.Parse(c_ID[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_grade[i].Equals(V1) && int.Parse(c_ID[i]) < int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (c_grade[i].Equals(V1) && c_ID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                    //!=first
                    if (O1.Equals("!=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_grade[i].Equals(V1) && !c_ID[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_grade[i].Equals(V1) && c_ID[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_grade[i].Equals(V1) && int.Parse(c_ID[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_grade[i].Equals(V1) && int.Parse(c_ID[i]) < int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (!c_grade[i].Equals(V1) && c_ID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                    //<First
                    if (O1.Equals("<") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_grade[i]) < int.Parse(V1) && int.Parse(c_ID[i]) < int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_grade[i]) < int.Parse(V1) && c_ID[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_grade[i]) < int.Parse(V1) && !c_ID[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_grade[i]) < int.Parse(V1) && int.Parse(c_ID[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (int.Parse(c_grade[i]) < int.Parse(V1) && c_ID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                    //>first
                    if (O1.Equals(">") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_grade[i]) > int.Parse(V1) && int.Parse(c_ID[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_grade[i]) > int.Parse(V1) && c_ID[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_grade[i]) > int.Parse(V1) && !c_ID[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_grade[i]) > int.Parse(V1) && int.Parse(c_ID[i]) < int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (int.Parse(c_grade[i]) > int.Parse(V1) && c_ID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                    //IN First
                    if (O1.Equals("IN") && O2.Equals("IN"))
                    {
                        string[] t2 = V1.Split(',');
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                for (int m = 0; m < t2.Length; m++)
                                {
                                    if (c_grade[i].Equals(t2[m]) && c_ID[i].Equals(t[j]))
                                    {

                                        dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    }
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("="))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_grade[i].Equals(t2[m]) && c_ID[i].Equals(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("!="))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_grade[i].Equals(t2[m]) && !c_ID[i].Equals(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals(">"))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_grade[i].Equals(t2[m]) && int.Parse(c_ID[i]) > int.Parse(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("<"))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_grade[i].Equals(t2[m]) && int.Parse(c_ID[i]) < int.Parse(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                }
                if (radioButton13.Checked)
                {
                    //=first
                    if (O1.Equals("=") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_grade[i].Equals(V1) || c_ID[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_grade[i].Equals(V1) || !c_ID[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_grade[i].Equals(V1) || int.Parse(c_ID[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_grade[i].Equals(V1) || int.Parse(c_ID[i]) < int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (c_grade[i].Equals(V1) || c_ID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //!=first
                    if (O1.Equals("!=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_grade[i].Equals(V1) || !c_ID[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_grade[i].Equals(V1) || c_ID[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_grade[i].Equals(V1) || int.Parse(c_ID[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_grade[i].Equals(V1) || int.Parse(c_ID[i]) < int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (!c_grade[i].Equals(V1) || c_ID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //<First
                    if (O1.Equals("<") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_grade[i]) < int.Parse(V1) || int.Parse(c_ID[i]) < int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_grade[i]) < int.Parse(V1) || c_ID[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_grade[i]) < int.Parse(V1) || !c_ID[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_grade[i]) < int.Parse(V1) || int.Parse(c_ID[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (int.Parse(c_grade[i]) < int.Parse(V1) || c_ID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //>first
                    if (O1.Equals(">") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_grade[i]) > int.Parse(V1) || int.Parse(c_ID[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_grade[i]) > int.Parse(V1) || c_ID[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_grade[i]) > int.Parse(V1) || !c_ID[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_grade[i]) > int.Parse(V1) || int.Parse(c_ID[i]) < int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (int.Parse(c_grade[i]) > int.Parse(V1) || c_ID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //IN First
                    if (O1.Equals("IN") && O2.Equals("IN"))
                    {
                        string[] t2 = V1.Split(',');
                        string[] t = V2.Split(',');
                        List<int> z = new List<int> { };
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (c_grade[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    z.Add(i);
                                    break;
                                }
                            }
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_ID[i].Equals(t2[m]))
                                {
                                    if (!z.Contains(i))
                                    {
                                        dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                        break;
                                    }
                                }
                            }

                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("="))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_grade[i].Equals(t2[m]) || c_ID[i].Equals(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("!="))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_grade[i].Equals(t2[m]) || !c_ID[i].Equals(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals(">"))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_grade[i].Equals(t2[m]) || int.Parse(c_ID[i]) > int.Parse(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("<"))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_grade[i].Equals(t2[m]) || int.Parse(c_ID[i]) < int.Parse(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }
                }

            }
            //==============================================================================
            if (comboBox9.Text.Equals("Grade Of The Course") && comboBox4.Text.Equals("Name"))
            {
                string O1 = comboBox8.Text;
                string V1 = textBox6.Text;

                string O2 = comboBox7.Text;
                string V2 = textBox5.Text;

                if (radioButton14.Checked)
                {
                    //=first
                    if (O1.Equals("=") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_grade[i].Equals(V1) && c_name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_grade[i].Equals(V1) && !c_name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_grade[i].Equals(V1) && string.Compare(c_name[i], V2) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_grade[i].Equals(V1) && string.Compare(c_name[i], V2) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (c_grade[i].Equals(V1) && c_name[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                    //!=first
                    if (O1.Equals("!=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_grade[i].Equals(V1) && !c_name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_grade[i].Equals(V1) && name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_grade[i].Equals(V1) && string.Compare(c_name[i], V2) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_grade[i].Equals(V1) && string.Compare(c_name[i], V2) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (!c_grade[i].Equals(V1) && c_name[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                    //<First
                    if (O1.Equals("<") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_grade[i]) < int.Parse(V1) && string.Compare(c_name[i], V2) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_grade[i]) < int.Parse(V1) && c_name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_grade[i]) < int.Parse(V1) && !c_name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_grade[i]) < int.Parse(V1) && string.Compare(c_name[i], V2) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (int.Parse(c_grade[i]) < int.Parse(V1) && c_name[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                    //>first
                    if (O1.Equals(">") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_grade[i]) > int.Parse(V1) && string.Compare(c_name[i], V2) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_grade[i]) > int.Parse(V1) && c_name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_grade[i]) > int.Parse(V1) && !c_name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_grade[i]) > int.Parse(V1) && string.Compare(c_name[i], V2) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (int.Parse(c_grade[i]) > int.Parse(V1) && c_name[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                    //IN First
                    if (O1.Equals("IN") && O2.Equals("IN"))
                    {
                        string[] t2 = V1.Split(',');
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                for (int m = 0; m < t2.Length; m++)
                                {
                                    if (c_grade[i].Equals(t2[m]) && c_name[i].Equals(t[j]))
                                    {

                                        dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    }
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("="))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_grade[i].Equals(t2[m]) && c_name[i].Equals(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("!="))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_grade[i].Equals(t2[m]) && !c_name[i].Equals(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals(">"))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_grade[i].Equals(t2[m]) && string.Compare(c_name[i], V2) == 1)
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("<"))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_grade[i].Equals(t2[m]) && string.Compare(c_name[i], V2) == -1)
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                }
                if (radioButton13.Checked)
                {
                    //=first
                    if (O1.Equals("=") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_grade[i].Equals(V1) || c_name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_grade[i].Equals(V1) || !c_name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_grade[i].Equals(V1) || string.Compare(c_name[i], V2) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_grade[i].Equals(V1) || string.Compare(c_name[i], V2) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (c_grade[i].Equals(V1) || c_name[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //!=first
                    if (O1.Equals("!=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_grade[i].Equals(V1) || !c_name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_grade[i].Equals(V1) || c_name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_grade[i].Equals(V1) || string.Compare(c_name[i], V2) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_grade[i].Equals(V1) || string.Compare(c_name[i], V2) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (!c_grade[i].Equals(V1) || c_name[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //<First
                    if (O1.Equals("<") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_grade[i]) < int.Parse(V1) || string.Compare(c_name[i], V2) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_grade[i]) < int.Parse(V1) || c_name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_grade[i]) < int.Parse(V1) || !c_name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_grade[i]) < int.Parse(V1) || string.Compare(c_name[i], V2) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (int.Parse(c_grade[i]) < int.Parse(V1) || c_name[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //>first
                    if (O1.Equals(">") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_grade[i]) > int.Parse(V1) || string.Compare(c_name[i], V2) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_grade[i]) > int.Parse(V1) || c_name[i].Equals(V1))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_grade[i]) > int.Parse(V1) || !c_name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_grade[i]) > int.Parse(V1) || string.Compare(c_name[i], V2) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (int.Parse(c_grade[i]) > int.Parse(V1) || c_name[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //IN First
                    if (O1.Equals("IN") && O2.Equals("IN"))
                    {
                        string[] t2 = V1.Split(',');
                        string[] t = V2.Split(',');
                        List<int> z = new List<int> { };
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (c_name[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    z.Add(i);
                                    break;
                                }
                            }
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_grade[i].Equals(t2[m]))
                                {
                                    if (!z.Contains(i))
                                    {
                                        dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                        break;
                                    }
                                }
                            }

                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("="))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_grade[i].Equals(t2[m]) || c_name[i].Equals(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("!="))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_grade[i].Equals(t2[m]) || !c_name[i].Equals(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals(">"))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_grade[i].Equals(t2[m]) || string.Compare(c_name[i], V2) == 1)
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("<"))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_grade[i].Equals(t2[m]) || string.Compare(c_name[i], V2) == -1)
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }
                }

            }
            //===============================================================================
            if (comboBox9.Text.Equals("Grade Of The Course") && comboBox4.Text.Equals("Time"))
            {
                string O1 = comboBox8.Text;
                string V1 = textBox6.Text;

                string O2 = comboBox7.Text;
                string V2 = textBox5.Text;

                if (radioButton14.Checked)
                {
                    //=first
                    if (O1.Equals("=") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_grade[i].Equals(V1) && c_Time[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_grade[i].Equals(V1) && !c_Time[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_grade[i].Equals(V1) && int.Parse(c_Time[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_grade[i].Equals(V1) && int.Parse(c_Time[i]) < int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (c_grade[i].Equals(V1) && c_Time[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                    //!=first
                    if (O1.Equals("!=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_grade[i].Equals(V1) && !c_Time[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_grade[i].Equals(V1) && c_Time[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_grade[i].Equals(V1) && int.Parse(c_Time[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_grade[i].Equals(V1) && int.Parse(c_Time[i]) < int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (!c_grade[i].Equals(V1) && c_Time[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                    //<First
                    if (O1.Equals("<") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_grade[i]) < int.Parse(V1) && int.Parse(c_Time[i]) < int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_grade[i]) < int.Parse(V1) && c_Time[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_grade[i]) < int.Parse(V1) && !c_Time[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_grade[i]) < int.Parse(V1) && int.Parse(c_Time[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (int.Parse(c_grade[i]) < int.Parse(V1) && c_Time[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                    //>first
                    if (O1.Equals(">") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_grade[i]) > int.Parse(V1) && int.Parse(c_Time[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_grade[i]) > int.Parse(V1) && c_Time[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_grade[i]) > int.Parse(V1) && !c_Time[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_grade[i]) > int.Parse(V1) && int.Parse(c_Time[i]) < int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (int.Parse(c_grade[i]) > int.Parse(V1) && c_Time[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                    //IN First
                    if (O1.Equals("IN") && O2.Equals("IN"))
                    {
                        string[] t2 = V1.Split(',');
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                for (int m = 0; m < t2.Length; m++)
                                {
                                    if (c_grade[i].Equals(t2[m]) && c_Time[i].Equals(t[j]))
                                    {

                                        dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    }
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("="))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_grade[i].Equals(t2[m]) && c_Time[i].Equals(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("!="))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_grade[i].Equals(t2[m]) && !c_Time[i].Equals(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals(">"))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_grade[i].Equals(t2[m]) && int.Parse(c_Time[i]) > int.Parse(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("<"))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_grade[i].Equals(t2[m]) && int.Parse(c_Time[i]) < int.Parse(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                }
                if (radioButton13.Checked)
                {
                    //=first
                    if (O1.Equals("=") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_grade[i].Equals(V1) || c_Time[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_grade[i].Equals(V1) || !c_Time[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_grade[i].Equals(V1) || int.Parse(c_Time[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_grade[i].Equals(V1) || int.Parse(c_Time[i]) < int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (c_grade[i].Equals(V1) || c_Time[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //!=first
                    if (O1.Equals("!=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_grade[i].Equals(V1) || !c_Time[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_grade[i].Equals(V1) || c_Time[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_grade[i].Equals(V1) || int.Parse(c_Time[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_grade[i].Equals(V1) || int.Parse(c_Time[i]) < int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (!c_grade[i].Equals(V1) || c_Time[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //<First
                    if (O1.Equals("<") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_grade[i]) < int.Parse(V1) || int.Parse(c_Time[i]) < int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_grade[i]) < int.Parse(V1) || c_Time[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_grade[i]) < int.Parse(V1) || !c_Time[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_grade[i]) < int.Parse(V1) || int.Parse(c_Time[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (int.Parse(c_grade[i]) < int.Parse(V1) || c_Time[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //>first
                    if (O1.Equals(">") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_grade[i]) > int.Parse(V1) || int.Parse(c_Time[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_grade[i]) > int.Parse(V1) || c_Time[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_grade[i]) > int.Parse(V1) || !c_Time[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_grade[i]) > int.Parse(V1) || int.Parse(c_Time[i]) < int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (int.Parse(c_grade[i]) > int.Parse(V1) || c_Time[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //IN First
                    if (O1.Equals("IN") && O2.Equals("IN"))
                    {
                        string[] t2 = V1.Split(',');
                        string[] t = V2.Split(',');
                        List<int> z = new List<int> { };
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (c_grade[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    z.Add(i);
                                    break;
                                }
                            }
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_Time[i].Equals(t2[m]))
                                {
                                    if (!z.Contains(i))
                                    {
                                        dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                        break;
                                    }
                                }
                            }

                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("="))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_grade[i].Equals(t2[m]) || c_Time[i].Equals(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("!="))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_grade[i].Equals(t2[m]) || !c_Time[i].Equals(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals(">"))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_grade[i].Equals(t2[m]) || int.Parse(c_Time[i]) > int.Parse(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("<"))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_grade[i].Equals(t2[m]) || int.Parse(c_Time[i]) < int.Parse(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }
                }

            }
            //==============================================================================
            if (comboBox9.Text.Equals("Grade Of The Course") && comboBox4.Text.Equals("Grade Of The Course"))
            {
                string O1 = comboBox8.Text;
                string V1 = textBox6.Text;

                string O2 = comboBox7.Text;
                string V2 = textBox5.Text;

                if (radioButton14.Checked)
                {
                    //=first
                    if (O1.Equals("=") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_grade[i].Equals(V1) && c_grade[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_grade[i].Equals(V1) && !c_grade[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_grade[i].Equals(V1) && int.Parse(c_grade[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_grade[i].Equals(V1) && int.Parse(c_grade[i]) < int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (c_grade[i].Equals(V1) && c_grade[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                    //!=first
                    if (O1.Equals("!=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_grade[i].Equals(V1) && !c_grade[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_grade[i].Equals(V1) && c_grade[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_grade[i].Equals(V1) && int.Parse(c_grade[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_grade[i].Equals(V1) && int.Parse(c_grade[i]) < int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (!c_grade[i].Equals(V1) && c_grade[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                    //<First
                    if (O1.Equals("<") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_grade[i]) < int.Parse(V1) && int.Parse(c_grade[i]) < int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_grade[i]) < int.Parse(V1) && c_grade[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_grade[i]) < int.Parse(V1) && !c_grade[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_grade[i]) < int.Parse(V1) && int.Parse(c_grade[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (int.Parse(c_grade[i]) < int.Parse(V1) && c_grade[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                    //>first
                    if (O1.Equals(">") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_grade[i]) > int.Parse(V1) && int.Parse(c_grade[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_grade[i]) > int.Parse(V1) && c_grade[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_grade[i]) > int.Parse(V1) && !c_grade[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_grade[i]) > int.Parse(V1) && int.Parse(c_grade[i]) < int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (int.Parse(c_grade[i]) > int.Parse(V1) && c_grade[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                    //IN First
                    if (O1.Equals("IN") && O2.Equals("IN"))
                    {
                        string[] t2 = V1.Split(',');
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                for (int m = 0; m < t2.Length; m++)
                                {
                                    if (c_grade[i].Equals(t2[m]) && c_grade[i].Equals(t[j]))
                                    {

                                        dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    }
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("="))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_grade[i].Equals(t2[m]) && c_grade[i].Equals(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("!="))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_grade[i].Equals(t2[m]) && !c_grade[i].Equals(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals(">"))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_grade[i].Equals(t2[m]) && int.Parse(c_grade[i]) > int.Parse(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("<"))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_grade[i].Equals(t2[m]) && int.Parse(c_grade[i]) < int.Parse(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                }
                            }
                        }
                    }

                }
                if (radioButton13.Checked)
                {
                    //=first
                    if (O1.Equals("=") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_grade[i].Equals(V1) || c_grade[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_grade[i].Equals(V1) || !c_grade[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_grade[i].Equals(V1) || int.Parse(c_grade[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (c_grade[i].Equals(V1) || int.Parse(c_grade[i]) < int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (c_grade[i].Equals(V1) || c_grade[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //!=first
                    if (O1.Equals("!=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_grade[i].Equals(V1) || !c_grade[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_grade[i].Equals(V1) || c_grade[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_grade[i].Equals(V1) || int.Parse(c_grade[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (!c_grade[i].Equals(V1) || int.Parse(c_grade[i]) < int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (!c_grade[i].Equals(V1) || c_grade[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //<First
                    if (O1.Equals("<") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_grade[i]) < int.Parse(V1) || int.Parse(c_grade[i]) < int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_grade[i]) < int.Parse(V1) || c_grade[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_grade[i]) < int.Parse(V1) || !c_grade[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_grade[i]) < int.Parse(V1) || int.Parse(c_grade[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (int.Parse(c_grade[i]) < int.Parse(V1) || c_grade[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //>first
                    if (O1.Equals(">") && O2.Equals(">"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_grade[i]) > int.Parse(V1) || int.Parse(c_Time[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_grade[i]) > int.Parse(V1) || c_grade[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("!="))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_grade[i]) > int.Parse(V1) || !c_grade[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("<"))
                    {
                        for (int i = 0; i < C1.Length; i++)
                        {
                            if (int.Parse(c_grade[i]) > int.Parse(V1) || int.Parse(c_grade[i]) < int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (int.Parse(c_grade[i]) > int.Parse(V1) || c_grade[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //IN First
                    if (O1.Equals("IN") && O2.Equals("IN"))
                    {
                        string[] t2 = V1.Split(',');
                        string[] t = V2.Split(',');
                        List<int> z = new List<int> { };
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (c_grade[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    z.Add(i);
                                    break;
                                }
                            }
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_grade[i].Equals(t2[m]))
                                {
                                    if (!z.Contains(i))
                                    {
                                        dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                        break;
                                    }
                                }
                            }

                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("="))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_grade[i].Equals(t2[m]) || c_grade[i].Equals(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("!="))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_grade[i].Equals(t2[m]) || !c_grade[i].Equals(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals(">"))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_grade[i].Equals(t2[m]) || int.Parse(c_grade[i]) > int.Parse(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("<"))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < C1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (c_grade[i].Equals(t2[m]) || int.Parse(c_grade[i]) < int.Parse(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { c_ID[i], c_name[i], c_Time[i], c_grade[i] });
                                    break;
                                }
                            }
                        }
                    }
                }

            }
        }

        private void button12_Click(object sender, EventArgs e)
        {
            dgvDisplay.Rows.Clear();
            string Value = comboBox15.Text;

            if (Value.Equals("ID"))
            {
                if (radioButton41.Checked)
                {
                    for (int i = 0; i < S1.Length; i++)
                    {
                        if (s_ID[i].Equals(textBox10.Text))
                        {
                            dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                        }
                    }
                }

                if (radioButton40.Checked)
                {
                    for (int i = 0; i < S1.Length; i++)
                    {
                        if (!s_ID[i].Equals(textBox10.Text))
                        {
                            dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                        }
                    }
                }

                if (radioButton38.Checked)
                {
                    for (int i = 0; i < S1.Length; i++)
                    {
                        if (int.Parse(s_ID[i]) > int.Parse(textBox10.Text))
                        {
                            dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                        }
                    }
                }

                if (radioButton39.Checked)
                {
                    for (int i = 0; i < S1.Length; i++)
                    {
                        if (int.Parse(s_ID[i]) < int.Parse(textBox10.Text))
                        {
                            dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                        }
                    }
                }

                if (radioButton37.Checked)
                {
                    string[] t = textBox10.Text.Split(',');
                    for (int i = 0; i < S1.Length; i++)
                    {
                        for (int j = 0; j < t.Length; j++)
                        {
                            if (s_ID[i].Equals(t[j]))
                            {
                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }
                }
            }

            if (Value.Equals("Name"))
            {
                if (radioButton41.Checked)
                {
                    for (int i = 0; i < S1.Length; i++)
                    {
                        if (s_name[i].Equals(textBox10.Text))
                        {
                            dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                        }
                    }
                }

                if (radioButton40.Checked)
                {
                    for (int i = 0; i < S1.Length; i++)
                    {
                        if (!s_name[i].Equals(textBox10.Text))
                        {
                            dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                        }
                    }
                }

                if (radioButton38.Checked)
                {
                    for (int i = 0; i < S1.Length; i++)
                    {
                        if (string.Compare(s_name[i],textBox10.Text) == 1)
                        {
                            dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                        }
                    }
                }

                if (radioButton39.Checked)
                {
                    for (int i = 0; i < S1.Length; i++)
                    {
                        if (string.Compare(s_name[i], textBox10.Text) == -1)
                        {
                            dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                        }
                    }
                }

                if (radioButton37.Checked)
                {
                    string[] t = textBox10.Text.Split(',');
                    for (int i = 0; i < S1.Length; i++)
                    {
                        for (int j = 0; j < t.Length; j++)
                        {
                            if (s_name[i].Equals(t[j]))
                            {
                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }
                }
            }

            if (Value.Equals("GPA"))
            {
                if (radioButton41.Checked)
                {
                    for (int i = 0; i < S1.Length; i++)
                    {
                        if (s_GPA[i].Equals(textBox10.Text))
                        {
                            dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                        }
                    }
                }

                if (radioButton40.Checked)
                {
                    for (int i = 0; i < S1.Length; i++)
                    {
                        if (!s_GPA[i].Equals(textBox10.Text))
                        {
                            dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                        }
                    }
                }

                if (radioButton38.Checked)
                {
                    for (int i = 0; i < S1.Length; i++)
                    {
                        if (double.Parse(s_GPA[i]) > double.Parse(textBox10.Text))
                        {
                            dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                        }
                    }
                }

                if (radioButton39.Checked)
                {
                    for (int i = 0; i < S1.Length; i++)
                    {
                        if (double.Parse(s_GPA[i]) < double.Parse(textBox10.Text))
                        {
                            dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                        }
                    }
                }

                if (radioButton37.Checked)
                {
                    string[] t = textBox10.Text.Split(',');
                    for (int i = 0; i < S1.Length; i++)
                    {
                        for (int j = 0; j < t.Length; j++)
                        {
                            if (s_GPA[i].Equals(t[j]))
                            {
                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }
                }
            }

            if (Value.Equals("Course Name"))
            {
                bool ok = false;

                if (radioButton41.Checked)
                {
                    for (int i = 0; i < S1.Length; i++)
                    {
                        ok = false;
                        string[] temp = s_coursename[i].Split(' ');
                        for (int j = 0; j < temp.Length; j++)
                        {
                            if (temp[j].Equals(textBox10.Text))
                            {
                                ok = true;
                                break;
                            }
                        }

                        if(ok == true)
                            dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                    }
                }

                if (radioButton40.Checked)
                {
                    for (int i = 0; i < S1.Length; i++)
                    {
                        ok = true;
                        string[] temp = s_coursename[i].Split(' ');
                        for (int j = 0; j < temp.Length; j++)
                        {
                            if (!temp[j].Equals(textBox10.Text))
                                continue;
                            else
                                ok = false;
                        }

                        if (ok == true)
                            dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                    }
                }

                if (radioButton38.Checked)
                {
                    for (int i = 0; i < S1.Length; i++)
                    {
                        ok = true;
                        string[] temp = s_coursename[i].Split(' ');
                        for (int j = 0; j < temp.Length; j++)
                        {
                            if (string.Compare(temp[j], textBox10.Text) == 1)
                            {
                                ok = true;
                                continue;
                            } 
                            else
                                ok = false;
                        }

                        if (ok == true)
                            dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                    }
                }

                if (radioButton39.Checked)
                {
                    for (int i = 0; i < S1.Length; i++)
                    {
                        ok = true;
                        string[] temp = s_coursename[i].Split(' ');
                        for (int j = 0; j < temp.Length; j++)
                        {
                            if (string.Compare(temp[j], textBox10.Text) == -1)
                                continue;
                            else
                                ok = false;
                        }

                        if (ok == true)
                            dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                    }
                }

                if (radioButton37.Checked)
                {
                    string[] t = textBox10.Text.Split(',');
                    for (int i = 0; i < S1.Length; i++)
                    {
                        ok = false;
                        string[] temp = s_coursename[i].Split(' ');
                        for (int k = 0; k < temp.Length; k++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (temp[k].Equals(t[j]))
                                {
                                    ok = true;
                                    break;
                                }
                            }
                            if (ok == true)
                                break;
                        }

                        if (ok == true)
                            dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                    }
                }
            }
        }

        private void radioButton36_CheckedChanged(object sender, EventArgs e)
        {
            try
            {
                double[] Temp = new double[dgvDisplay.Rows.Count - 1];
                double Sum = 0;
                for (int i = 0; i < dgvDisplay.Rows.Count - 1; i++)
                {
                    Temp[i] = double.Parse(dgvDisplay.Rows[i].Cells[2].Value.ToString());
                }

                for (int i = 0; i < Temp.Length; i++)
                {
                    Sum += Temp[i];
                }
                textBox2.Text = "SUM = " + Sum.ToString();
            }
            catch
            {
                MessageBox.Show("Must Select GPA From First Qusetion.");

            }
        }

        private void radioButton35_CheckedChanged(object sender, EventArgs e)
        {
            try
            {
                double[] Temp = new double[dgvDisplay.Rows.Count - 1];
                double Avg = 0.0;
                for (int i = 0; i < dgvDisplay.Rows.Count - 1; i++)
                {
                    Temp[i] = double.Parse(dgvDisplay.Rows[i].Cells[2].Value.ToString());
                }

                for (int i = 0; i < Temp.Length; i++)
                {
                    Avg += Temp[i];
                }
                Avg = Avg / (double)Temp.Length;
                textBox2.Text = "AVG = " + Avg.ToString();
            }
            catch
            {
                MessageBox.Show("Must Select GPA From First Qusetion.");
            }
        }

        private void radioButton34_CheckedChanged(object sender, EventArgs e)
        {
            try
            {
                double[] Temp = new double[dgvDisplay.Rows.Count - 1];
                for (int i = 0; i < dgvDisplay.Rows.Count - 1; i++)
                {
                    Temp[i] = double.Parse(dgvDisplay.Rows[i].Cells[2].Value.ToString());
                }

                textBox2.Text = "MAX = " + Temp.Max().ToString();
            }
            catch
            {
                MessageBox.Show("Must Select GPA From First Qusetion.");
            }
        }

        private void radioButton33_CheckedChanged(object sender, EventArgs e)
        {
            try
            {
                double[] Temp = new double[dgvDisplay.Rows.Count - 1];
                for (int i = 0; i < dgvDisplay.Rows.Count - 1; i++)
                {
                    Temp[i] = double.Parse(dgvDisplay.Rows[i].Cells[2].Value.ToString());
                }

                textBox2.Text = "MIN = " + Temp.Min().ToString();
            }

            catch
            {
                MessageBox.Show("Must Select GPA From First Qusetion.");
            }
        }

        private void radioButton32_CheckedChanged(object sender, EventArgs e)
        {
            try
            {
                textBox2.Text = "COUNT = " + (dgvDisplay.Rows.Count - 1).ToString();
            }
            catch
            {


                MessageBox.Show("Must Select GPA From First Qusetion.");

            }
        }

        private void panel5_Paint(object sender, PaintEventArgs e)
        {

        }

        private void button9_Click(object sender, EventArgs e)
        {
            dgvDisplay.Rows.Clear();

            //ID First
            if (comboBox14.Text.Equals("ID") && comboBox11.Text.Equals("ID"))
            {
                string O1 = comboBox13.Text;
                string V1 = textBox9.Text;

                string O2 = comboBox12.Text;
                string V2 = textBox8.Text;

                if (radioButton31.Checked)
                {
                    //=first
                    if (O1.Equals("=") && O2.Equals("="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (s_ID[i].Equals(V1) && s_ID[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (s_ID[i].Equals(V1) && !s_ID[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (s_ID[i].Equals(V1) && int.Parse(s_ID[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (s_ID[i].Equals(V1) && int.Parse(s_ID[i]) < int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (s_ID[i].Equals(V1) && s_ID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    //!=first
                    if (O1.Equals("!=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (!s_ID[i].Equals(V1) && !s_ID[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (!s_ID[i].Equals(V1) && s_ID[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (!s_ID[i].Equals(V1) && int.Parse(s_ID[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (!s_ID[i].Equals(V1) && int.Parse(s_ID[i]) < int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (!s_ID[i].Equals(V1) && s_ID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    //<First
                    if (O1.Equals("<") && O2.Equals("<"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (int.Parse(s_ID[i]) < int.Parse(V1) && int.Parse(s_ID[i]) < int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (int.Parse(s_ID[i]) < int.Parse(V1) && s_ID[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("!="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (int.Parse(s_ID[i]) < int.Parse(V1) && !s_ID[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals(">"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (int.Parse(s_ID[i]) < int.Parse(V1) && int.Parse(s_ID[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (int.Parse(s_ID[i]) < int.Parse(V1) && s_ID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    //>first
                    if (O1.Equals(">") && O2.Equals(">"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (int.Parse(s_ID[i]) > int.Parse(V1) && int.Parse(s_ID[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (int.Parse(s_ID[i]) > int.Parse(V1) && s_ID[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("!="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (int.Parse(s_ID[i]) > int.Parse(V1) && !s_ID[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("<"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (int.Parse(s_ID[i]) > int.Parse(V1) && int.Parse(s_ID[i]) < int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (int.Parse(s_ID[i]) > int.Parse(V1) && s_ID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    //IN First
                    if (O1.Equals("IN") && O2.Equals("IN"))
                    {
                        string[] t2 = V1.Split(',');
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                for (int m = 0; m < t2.Length; m++)
                                {
                                    if (s_ID[i].Equals(t2[m]) && s_ID[i].Equals(t[j]))
                                    {

                                        dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    }
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("="))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (s_ID[i].Equals(t2[m]) && s_ID[i].Equals(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("!="))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (s_ID[i].Equals(t2[m]) && !s_ID[i].Equals(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals(">"))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (s_ID[i].Equals(t2[m]) && int.Parse(s_ID[i]) > int.Parse(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("<"))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (s_ID[i].Equals(t2[m]) && int.Parse(s_ID[i]) < int.Parse(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                }
                if (radioButton30.Checked)
                {
                    //=first
                    if (O1.Equals("=") && O2.Equals("="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (s_ID[i].Equals(V1) || s_ID[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (s_ID[i].Equals(V1) || !s_ID[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (s_ID[i].Equals(V1) || int.Parse(s_ID[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (s_ID[i].Equals(V1) || int.Parse(s_ID[i]) < int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (s_ID[i].Equals(V1) || s_ID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //!=first
                    if (O1.Equals("!=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (!s_ID[i].Equals(V1) || !s_ID[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (!s_ID[i].Equals(V1) || s_ID[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (!s_ID[i].Equals(V1) || int.Parse(s_ID[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (!s_ID[i].Equals(V1) || int.Parse(s_ID[i]) < int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (!s_ID[i].Equals(V1) || s_ID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //<First
                    if (O1.Equals("<") && O2.Equals("<"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (int.Parse(s_ID[i]) < int.Parse(V1) || int.Parse(s_ID[i]) < int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (int.Parse(s_ID[i]) < int.Parse(V1) || s_ID[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("!="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (int.Parse(s_ID[i]) < int.Parse(V1) || !s_ID[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals(">"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (int.Parse(s_ID[i]) < int.Parse(V1) || int.Parse(s_ID[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (int.Parse(s_ID[i]) < int.Parse(V1) || s_ID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //>first
                    if (O1.Equals(">") && O2.Equals(">"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (int.Parse(s_ID[i]) > int.Parse(V1) || int.Parse(s_ID[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (int.Parse(s_ID[i]) > int.Parse(V1) || s_ID[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("!="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (int.Parse(s_ID[i]) > int.Parse(V1) || !s_ID[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("<"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (int.Parse(s_ID[i]) > int.Parse(V1) || int.Parse(s_ID[i]) < int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (int.Parse(s_ID[i]) > int.Parse(V1) || s_ID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //IN First
                    if (O1.Equals("IN") && O2.Equals("IN"))
                    {
                        string[] t2 = V1.Split(',');
                        string[] t = V2.Split(',');
                        List<int> z = new List<int> { };
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (s_ID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    z.Add(i);
                                    break;
                                }
                            }
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (s_ID[i].Equals(t2[m]))
                                {
                                    if (!z.Contains(i))
                                    {
                                        dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                        break;
                                    }
                                }
                            }

                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("="))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (s_ID[i].Equals(t2[m]) || s_ID[i].Equals(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("!="))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (s_ID[i].Equals(t2[m]) || !s_ID[i].Equals(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals(">"))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (s_ID[i].Equals(t2[m]) || int.Parse(s_ID[i]) > int.Parse(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("<"))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (s_ID[i].Equals(t2[m]) || int.Parse(s_ID[i]) < int.Parse(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    break;
                                }
                            }
                        }
                    }
                }

            }
            //==========================================================================
            if (comboBox14.Text.Equals("ID") && comboBox11.Text.Equals("Name"))
            {
                string O1 = comboBox13.Text;
                string V1 = textBox9.Text;

                string O2 = comboBox12.Text;
                string V2 = textBox8.Text;

                if (radioButton31.Checked)
                {
                    //=first
                    if (O1.Equals("=") && O2.Equals("="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (s_ID[i].Equals(V1) && s_name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (s_ID[i].Equals(V1) && !s_name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (s_ID[i].Equals(V1) && string.Compare(s_name[i], V2) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (s_ID[i].Equals(V1) && string.Compare(s_name[i], V2) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (s_ID[i].Equals(V1) && s_name[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    //!=first
                    if (O1.Equals("!=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (!s_ID[i].Equals(V1) && !s_name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (!s_ID[i].Equals(V1) && s_name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (!s_ID[i].Equals(V1) && string.Compare(s_name[i], V2) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (!s_ID[i].Equals(V1) && string.Compare(s_name[i], V2) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (!s_ID[i].Equals(V1) && s_name[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    //<First
                    if (O1.Equals("<") && O2.Equals("<"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (int.Parse(s_ID[i]) < int.Parse(V1) && string.Compare(s_name[i], V2) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (int.Parse(s_ID[i]) < int.Parse(V1) && s_name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("!="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (int.Parse(s_ID[i]) < int.Parse(V1) && !s_name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals(">"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (int.Parse(s_ID[i]) < int.Parse(V1) && string.Compare(s_name[i], V2) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (int.Parse(s_ID[i]) < int.Parse(V1) && s_name[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    //>first
                    if (O1.Equals(">") && O2.Equals(">"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (int.Parse(s_ID[i]) > int.Parse(V1) && string.Compare(s_name[i], V2) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (int.Parse(s_ID[i]) > int.Parse(V1) && s_name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("!="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (int.Parse(s_ID[i]) > int.Parse(V1) && !s_name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("<"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (int.Parse(s_ID[i]) > int.Parse(V1) && string.Compare(s_name[i], V2) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (int.Parse(s_ID[i]) > int.Parse(V1) && s_name[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    //IN First
                    if (O1.Equals("IN") && O2.Equals("IN"))
                    {
                        string[] t2 = V1.Split(',');
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                for (int m = 0; m < t2.Length; m++)
                                {
                                    if (s_ID[i].Equals(t2[m]) && s_name[i].Equals(t[j]))
                                    {

                                        dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    }
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("="))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (s_ID[i].Equals(t2[m]) && s_name[i].Equals(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("!="))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (s_ID[i].Equals(t2[m]) && !s_name[i].Equals(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals(">"))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (s_ID[i].Equals(t2[m]) && string.Compare(s_name[i], V2) == 1)
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("<"))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (s_ID[i].Equals(t2[m]) && string.Compare(s_name[i], V2) == -1)
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                }
                if (radioButton30.Checked)
                {
                    //=first
                    if (O1.Equals("=") && O2.Equals("="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (s_ID[i].Equals(V1) || s_name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (s_ID[i].Equals(V1) || !s_name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (s_ID[i].Equals(V1) || string.Compare(s_name[i], V2) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (s_ID[i].Equals(V1) || string.Compare(s_name[i], V2) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (s_ID[i].Equals(V1) || s_name[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //!=first
                    if (O1.Equals("!=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (!s_ID[i].Equals(V1) || !s_name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (!s_ID[i].Equals(V1) || s_name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (!s_ID[i].Equals(V1) || string.Compare(s_name[i], V2) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (!s_ID[i].Equals(V1) || string.Compare(s_name[i], V2) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (!s_ID[i].Equals(V1) || s_name[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //<First
                    if (O1.Equals("<") && O2.Equals("<"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (int.Parse(s_ID[i]) < int.Parse(V1) || string.Compare(s_name[i], V2) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (int.Parse(s_ID[i]) < int.Parse(V1) || s_name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("!="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (int.Parse(s_ID[i]) < int.Parse(V1) || !s_name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals(">"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (int.Parse(s_ID[i]) < int.Parse(V1) || string.Compare(s_name[i], V2) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (int.Parse(s_ID[i]) < int.Parse(V1) || s_name[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //>first
                    if (O1.Equals(">") && O2.Equals(">"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (int.Parse(s_ID[i]) > int.Parse(V1) || string.Compare(s_name[i], V2) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (int.Parse(s_ID[i]) > int.Parse(V1) || s_name[i].Equals(V1))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("!="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (int.Parse(s_ID[i]) > int.Parse(V1) || !s_name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("<"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (int.Parse(s_ID[i]) > int.Parse(V1) || string.Compare(s_name[i], V2) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (int.Parse(s_ID[i]) > int.Parse(V1) || s_name[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //IN First
                    if (O1.Equals("IN") && O2.Equals("IN"))
                    {
                        string[] t2 = V1.Split(',');
                        string[] t = V2.Split(',');
                        List<int> z = new List<int> { };
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (s_name[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    z.Add(i);
                                    break;
                                }
                            }
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (s_ID[i].Equals(t2[m]))
                                {
                                    if (!z.Contains(i))
                                    {
                                        dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                        break;
                                    }
                                }
                            }

                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("="))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (s_ID[i].Equals(t2[m]) || s_name[i].Equals(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("!="))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (s_ID[i].Equals(t2[m]) || !s_name[i].Equals(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals(">"))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (s_ID[i].Equals(t2[m]) || string.Compare(s_name[i], V2) == 1)
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("<"))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (s_ID[i].Equals(t2[m]) || string.Compare(s_name[i], V2) == -1)
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    break;
                                }
                            }
                        }
                    }
                }

            }
            //===================================================================
            if (comboBox14.Text.Equals("ID") && comboBox11.Text.Equals("GPA"))
            {
                string O1 = comboBox13.Text;
                string V1 = textBox9.Text;

                string O2 = comboBox12.Text;
                string V2 = textBox8.Text;

                if (radioButton31.Checked)
                {
                    //=first
                    if (O1.Equals("=") && O2.Equals("="))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (s_ID[i].Equals(V1) && double.Parse(s_GPA[i])==double.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("!="))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (s_ID[i].Equals(V1) && double.Parse(s_GPA[i]) != double.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals(">"))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (s_ID[i].Equals(V1) &&double.Parse(s_GPA[i]) > double.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("<"))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (s_ID[i].Equals(V1) && double.Parse(s_GPA[i]) < double.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("IN"))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (s_ID[i].Equals(V1) && double.Parse(s_GPA[i])==double.Parse(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    //!=first
                    if (O1.Equals("!=") && O2.Equals("!="))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (!s_ID[i].Equals(V1) && double.Parse(s_GPA[i])!=double.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("="))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (!s_ID[i].Equals(V1) && double.Parse(s_GPA[i]) == double.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals(">"))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (!s_ID[i].Equals(V1) && double.Parse(s_GPA[i]) > double.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("<"))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (!s_ID[i].Equals(V1) && double.Parse(s_GPA[i]) < double.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("IN"))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (!s_ID[i].Equals(V1) && double.Parse(s_GPA[i])==double.Parse(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    //<First
                    if (O1.Equals("<") && O2.Equals("<"))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (int.Parse(s_ID[i]) < int.Parse(V1) && double.Parse(s_GPA[i]) < double.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("="))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (int.Parse(s_ID[i]) < int.Parse(V1) && double.Parse(s_GPA[i]) == double.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("!="))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (int.Parse(s_ID[i]) < int.Parse(V1) && double.Parse(s_GPA[i]) != double.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals(">"))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (int.Parse(s_ID[i]) < int.Parse(V1) && double.Parse(s_GPA[i]) > double.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("IN"))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (int.Parse(s_ID[i]) < int.Parse(V1) && double.Parse(s_GPA[i])==double.Parse(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    //>first
                    if (O1.Equals(">") && O2.Equals(">"))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (int.Parse(s_ID[i]) > int.Parse(V1) && double.Parse(s_GPA[i]) > double.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("="))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (int.Parse(s_ID[i]) > int.Parse(V1) && double.Parse(s_GPA[i]) == double.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("!="))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (int.Parse(s_ID[i]) > int.Parse(V1) && double.Parse(s_GPA[i]) != double.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("<"))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (int.Parse(s_ID[i]) > int.Parse(V1) && double.Parse(s_GPA[i]) < double.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("IN"))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (int.Parse(s_ID[i]) > int.Parse(V1) && double.Parse(s_GPA[i])==double.Parse(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    //IN First
                    if (O1.Equals("IN") && O2.Equals("IN"))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t2 = V1.Split(',');
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                for (int m = 0; m < t2.Length; m++)
                                {
                                    if (s_ID[i].Equals(t2[m]) && double.Parse(s_GPA[i])==double.Parse(t[j]))
                                    {

                                        dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    }
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("="))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (s_ID[i].Equals(t2[m]) && double.Parse(s_GPA[i]) == double.Parse(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("!="))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (s_ID[i].Equals(t2[m]) && double.Parse(s_GPA[i]) != double.Parse(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals(">"))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (s_ID[i].Equals(t2[m]) && double.Parse(s_GPA[i]) > double.Parse(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("<"))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (s_ID[i].Equals(t2[m]) && double.Parse(s_GPA[i]) < double.Parse(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                }
                if (radioButton30.Checked)
                {

                    //=first
                    if (O1.Equals("=") && O2.Equals("="))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (s_ID[i].Equals(V1) || double.Parse(s_GPA[i]) == double.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("!="))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (s_ID[i].Equals(V1) || double.Parse(s_GPA[i]) != double.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals(">"))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (s_ID[i].Equals(V1) || double.Parse(s_GPA[i]) > double.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("<"))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (s_ID[i].Equals(V1) || double.Parse(s_GPA[i]) < double.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("IN"))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (s_ID[i].Equals(V1) || double.Parse(s_GPA[i]) == double.Parse(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    //!=first
                    if (O1.Equals("!=") && O2.Equals("!="))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (!s_ID[i].Equals(V1) || double.Parse(s_GPA[i]) != double.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("="))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (!s_ID[i].Equals(V1) || double.Parse(s_GPA[i]) == double.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals(">"))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (!s_ID[i].Equals(V1) || double.Parse(s_GPA[i]) > double.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("<"))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (!s_ID[i].Equals(V1) || double.Parse(s_GPA[i]) < double.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("IN"))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (!s_ID[i].Equals(V1) || double.Parse(s_GPA[i]) == double.Parse(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    //<First
                    if (O1.Equals("<") && O2.Equals("<"))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (int.Parse(s_ID[i]) < int.Parse(V1) || double.Parse(s_GPA[i]) < double.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("="))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (int.Parse(s_ID[i]) < int.Parse(V1) || double.Parse(s_GPA[i]) == double.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("!="))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (int.Parse(s_ID[i]) < int.Parse(V1) || double.Parse(s_GPA[i]) != double.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals(">"))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (int.Parse(s_ID[i]) < int.Parse(V1) || double.Parse(s_GPA[i]) > double.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("IN"))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (int.Parse(s_ID[i]) < int.Parse(V1) || double.Parse(s_GPA[i]) == double.Parse(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    //>first
                    if (O1.Equals(">") && O2.Equals(">"))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (int.Parse(s_ID[i]) > int.Parse(V1) || double.Parse(s_GPA[i]) > double.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("="))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (int.Parse(s_ID[i]) > int.Parse(V1) || double.Parse(s_GPA[i]) == double.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("!="))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (int.Parse(s_ID[i]) > int.Parse(V1) || double.Parse(s_GPA[i]) != double.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("<"))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (int.Parse(s_ID[i]) > int.Parse(V1) || double.Parse(s_GPA[i]) < double.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("IN"))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (int.Parse(s_ID[i]) > int.Parse(V1) || double.Parse(s_GPA[i]) == double.Parse(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    //IN First
                    if (O1.Equals("IN") && O2.Equals("IN"))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t2 = V1.Split(',');
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                for (int m = 0; m < t2.Length; m++)
                                {
                                    if (s_ID[i].Equals(t2[m]) || double.Parse(s_GPA[i]) == double.Parse(t[j]))
                                    {

                                        dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    }
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("="))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (s_ID[i].Equals(t2[m]) || double.Parse(s_GPA[i]) == double.Parse(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("!="))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (s_ID[i].Equals(t2[m]) || double.Parse(s_GPA[i]) != double.Parse(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals(">"))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (s_ID[i].Equals(t2[m]) || double.Parse(s_GPA[i]) > double.Parse(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("<"))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (s_ID[i].Equals(t2[m]) || double.Parse(s_GPA[i]) < double.Parse(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    break;
                                }
                            }
                        }
                    }

                }

            }
            //=============================================================================
            if (comboBox14.Text.Equals("ID") && comboBox11.Text.Equals("Course Name"))
            {
                string O1 = comboBox13.Text;
                string V1 = textBox9.Text;

                string O2 = comboBox12.Text;
                string V2 = textBox8.Text;

                if (radioButton31.Checked)
                {
                    //=first
                    if (O1.Equals("=") && O2.Equals("="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (s_ID[i].Equals(V1) && s_coursename[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (s_ID[i].Equals(V1) && !s_coursename[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (s_ID[i].Equals(V1) && string.Compare(s_coursename[i], V2) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (s_ID[i].Equals(V1) && string.Compare(s_coursename[i], V2) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (s_ID[i].Equals(V1) && s_coursename[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    //!=first
                    if (O1.Equals("!=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (!s_ID[i].Equals(V1) && !s_coursename[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (!s_ID[i].Equals(V1) && s_coursename[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (!s_ID[i].Equals(V1) && string.Compare(s_coursename[i], V2) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (!s_ID[i].Equals(V1) && string.Compare(s_coursename[i], V2) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (!s_ID[i].Equals(V1) && s_coursename[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    //<First
                    if (O1.Equals("<") && O2.Equals("<"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (int.Parse(s_ID[i]) < int.Parse(V1) && string.Compare(s_coursename[i], V2) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (int.Parse(s_ID[i]) < int.Parse(V1) && s_coursename[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("!="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (int.Parse(s_ID[i]) < int.Parse(V1) && !s_coursename[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals(">"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (int.Parse(s_ID[i]) < int.Parse(V1) && string.Compare(s_coursename[i], V2) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (int.Parse(s_ID[i]) < int.Parse(V1) && s_coursename[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    //>first
                    if (O1.Equals(">") && O2.Equals(">"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (int.Parse(s_ID[i]) > int.Parse(V1) && string.Compare(s_coursename[i], V2) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (int.Parse(s_ID[i]) > int.Parse(V1) && s_coursename[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("!="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (int.Parse(s_ID[i]) > int.Parse(V1) && !s_coursename[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("<"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (int.Parse(s_ID[i]) > int.Parse(V1) && string.Compare(s_coursename[i], V2) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (int.Parse(s_ID[i]) > int.Parse(V1) && s_coursename[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    //IN First
                    if (O1.Equals("IN") && O2.Equals("IN"))
                    {
                        string[] t2 = V1.Split(',');
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                for (int m = 0; m < t2.Length; m++)
                                {
                                    if (s_ID[i].Equals(t2[m]) && s_coursename[i].Equals(t[j]))
                                    {

                                        dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    }
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("="))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (s_ID[i].Equals(t2[m]) && s_coursename[i].Equals(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("!="))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (s_ID[i].Equals(t2[m]) && !s_coursename[i].Equals(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals(">"))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (s_ID[i].Equals(t2[m]) && string.Compare(s_coursename[i], V2) == 1)
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("<"))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (s_ID[i].Equals(t2[m]) && string.Compare(s_coursename[i], V2) == -1)
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                }
                if (radioButton30.Checked)
                {
                    //=first
                    if (O1.Equals("=") && O2.Equals("="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (s_ID[i].Equals(V1) || s_coursename[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (s_ID[i].Equals(V1) || !s_coursename[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (s_ID[i].Equals(V1) || string.Compare(s_coursename[i], V2) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (s_ID[i].Equals(V1) || string.Compare(s_coursename[i], V2) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (s_ID[i].Equals(V1) || s_coursename[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //!=first
                    if (O1.Equals("!=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (!s_ID[i].Equals(V1) || !s_coursename[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (!s_ID[i].Equals(V1) || s_coursename[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (!s_ID[i].Equals(V1) || string.Compare(s_coursename[i], V2) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (!s_ID[i].Equals(V1) || string.Compare(s_coursename[i], V2) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (!s_ID[i].Equals(V1) || s_coursename[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //<First
                    if (O1.Equals("<") && O2.Equals("<"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (int.Parse(s_ID[i]) < int.Parse(V1) || string.Compare(s_coursename[i], V2) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (int.Parse(s_ID[i]) < int.Parse(V1) || s_coursename[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("!="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (int.Parse(s_ID[i]) < int.Parse(V1) || !s_coursename[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals(">"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (int.Parse(s_ID[i]) < int.Parse(V1) || string.Compare(s_coursename[i], V2) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (int.Parse(s_ID[i]) < int.Parse(V1) || s_coursename[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //>first
                    if (O1.Equals(">") && O2.Equals(">"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (int.Parse(s_ID[i]) > int.Parse(V1) || string.Compare(s_coursename[i], V2) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (int.Parse(s_ID[i]) > int.Parse(V1) || s_coursename[i].Equals(V1))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("!="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (int.Parse(s_ID[i]) > int.Parse(V1) || !s_coursename[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("<"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (int.Parse(s_ID[i]) > int.Parse(V1) || string.Compare(s_coursename[i], V2) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (int.Parse(s_ID[i]) > int.Parse(V1) || s_coursename[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //IN First
                    if (O1.Equals("IN") && O2.Equals("IN"))
                    {
                        string[] t2 = V1.Split(',');
                        string[] t = V2.Split(',');
                        List<int> z = new List<int> { };
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (s_coursename[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    z.Add(i);
                                    break;
                                }
                            }
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (s_ID[i].Equals(t2[m]))
                                {
                                    if (!z.Contains(i))
                                    {
                                        dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                        break;
                                    }
                                }
                            }

                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("="))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (s_ID[i].Equals(t2[m]) || s_coursename[i].Equals(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("!="))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (s_ID[i].Equals(t2[m]) || !s_coursename[i].Equals(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals(">"))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (s_ID[i].Equals(t2[m]) || string.Compare(s_coursename[i], V2) == 1)
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("<"))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (s_ID[i].Equals(t2[m]) || string.Compare(s_coursename[i], V2) == -1)
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    break;
                                }
                            }
                        }
                    }
                }

            }
            //==============================================================
            
            //Name first
            if (comboBox14.Text.Equals("Name") && comboBox11.Text.Equals("Name"))
            {
                string O1 = comboBox13.Text;
                string V1 = textBox9.Text;

                string O2 = comboBox12.Text;
                string V2 = textBox8.Text;

                if (radioButton31.Checked)
                {
                    //=first
                    if (O1.Equals("=") && O2.Equals("="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (s_name[i].Equals(V1) && s_name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (s_name[i].Equals(V1) && !s_name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (s_name[i].Equals(V1) && string.Compare(s_name[i], V2) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (s_name[i].Equals(V1) && string.Compare(s_name[i], V2) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (s_name[i].Equals(V1) && s_name[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    //!=first
                    if (O1.Equals("!=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (!s_name[i].Equals(V1) && !s_name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (!s_name[i].Equals(V1) && name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (!s_name[i].Equals(V1) && string.Compare(s_name[i], V2) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (!s_name[i].Equals(V1) && string.Compare(s_name[i], V2) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (!s_name[i].Equals(V1) && s_name[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    //<First
                    if (O1.Equals("<") && O2.Equals("<"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (string.Compare(s_name[i], V1) == -1 && string.Compare(s_name[i], V2) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (string.Compare(s_name[i], V1) == -1 && s_name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("!="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (string.Compare(s_name[i], V1) == -1 && !s_name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals(">"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (string.Compare(s_name[i], V1) == -1 && string.Compare(s_name[i], V2) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (string.Compare(s_name[i], V1) == -1 && s_name[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    //>first
                    if (O1.Equals(">") && O2.Equals(">"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (string.Compare(s_name[i], V1) == 1 && string.Compare(s_name[i], V2) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (string.Compare(s_name[i], V1) == 1 && s_name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("!="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (string.Compare(s_name[i], V1) == 1 && !s_name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("<"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (string.Compare(s_name[i], V1) == 1 && string.Compare(s_name[i], V2) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (string.Compare(s_name[i], V1) == 1 && s_name[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    //IN First
                    if (O1.Equals("IN") && O2.Equals("IN"))
                    {
                        string[] t2 = V1.Split(',');
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                for (int m = 0; m < t2.Length; m++)
                                {
                                    if (s_name[i].Equals(t2[m]) && s_name[i].Equals(t[j]))
                                    {

                                        dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    }
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("="))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (s_name[i].Equals(t2[m]) && s_name[i].Equals(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("!="))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (s_name[i].Equals(t2[m]) && !s_name[i].Equals(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals(">"))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (s_name[i].Equals(t2[m]) && string.Compare(s_name[i], V2) == 1)
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("<"))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (s_name[i].Equals(t2[m]) && string.Compare(s_name[i], V2) == -1)
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                }
                if (radioButton30.Checked)
                {
                    //=first
                    if (O1.Equals("=") && O2.Equals("="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (s_name[i].Equals(V1) || s_name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (s_name[i].Equals(V1) || !s_name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (s_name[i].Equals(V1) || string.Compare(s_name[i], V2) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (s_name[i].Equals(V1) || string.Compare(s_name[i], V2) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (s_name[i].Equals(V1) || s_name[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //!=first
                    if (O1.Equals("!=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (!s_name[i].Equals(V1) || !s_name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (!s_name[i].Equals(V1) || s_name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (!s_name[i].Equals(V1) || string.Compare(s_name[i], V2) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (!s_name[i].Equals(V1) || string.Compare(s_name[i], V2) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (!s_name[i].Equals(V1) || s_name[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //<First
                    if (O1.Equals("<") && O2.Equals("<"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (string.Compare(s_name[i], V1) == -1 || string.Compare(s_name[i], V2) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (string.Compare(s_name[i], V1) == -1 || s_name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("!="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (string.Compare(s_name[i], V1) == -1 || !s_name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals(">"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (string.Compare(s_name[i], V1) == -1 || string.Compare(s_name[i], V2) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (string.Compare(s_name[i], V1) == -1 || s_name[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //>first
                    if (O1.Equals(">") && O2.Equals(">"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (string.Compare(s_name[i], V1) == 1 || string.Compare(s_name[i], V2) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (string.Compare(s_name[i], V1) == 1 || s_name[i].Equals(V1))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("!="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (string.Compare(s_name[i], V1) == 1 || !s_name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("<"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (string.Compare(s_name[i], V1) == 1 || string.Compare(s_name[i], V2) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (string.Compare(s_name[i], V1) == 1 || s_name[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //IN First
                    if (O1.Equals("IN") && O2.Equals("IN"))
                    {
                        string[] t2 = V1.Split(',');
                        string[] t = V2.Split(',');
                        List<int> z = new List<int> { };
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (s_name[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    z.Add(i);
                                    break;
                                }
                            }
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (s_name[i].Equals(t2[m]))
                                {
                                    if (!z.Contains(i))
                                    {
                                        dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                        break;
                                    }
                                }
                            }

                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("="))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (s_name[i].Equals(t2[m]) || s_name[i].Equals(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("!="))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (s_name[i].Equals(t2[m]) || !s_name[i].Equals(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals(">"))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (s_name[i].Equals(t2[m]) || string.Compare(s_name[i], V2) == 1)
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("<"))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (s_name[i].Equals(t2[m]) || string.Compare(s_name[i], V2) == -1)
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    break;
                                }
                            }
                        }
                    }
                }

            }
            //===========================================================================
            if (comboBox14.Text.Equals("Name") && comboBox11.Text.Equals("ID"))
            {
                string O1 = comboBox13.Text;
                string V1 = textBox9.Text;

                string O2 = comboBox12.Text;
                string V2 = textBox8.Text;

                if (radioButton31.Checked)
                {
                    //=first
                    if (O1.Equals("=") && O2.Equals("="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (s_name[i].Equals(V1) && s_ID[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (s_name[i].Equals(V1) && !s_ID[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (s_name[i].Equals(V1) && int.Parse(s_ID[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (s_name[i].Equals(V1) && int.Parse(s_ID[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (s_name[i].Equals(V1) && s_ID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    //!=first
                    if (O1.Equals("!=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (!s_name[i].Equals(V1) && !s_ID[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (!s_name[i].Equals(V1) && s_ID[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (!s_name[i].Equals(V1) && int.Parse(s_ID[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (!s_name[i].Equals(V1) && int.Parse(s_ID[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (!s_name[i].Equals(V1) && s_ID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    //<First
                    if (O1.Equals("<") && O2.Equals("<"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (string.Compare(s_name[i], V1) == -1 && int.Parse(s_ID[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (string.Compare(s_name[i], V1) == -1 && s_ID[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("!="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (string.Compare(s_name[i], V1) == -1 && !s_ID[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals(">"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (string.Compare(s_name[i], V1) == -1 && int.Parse(s_ID[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (string.Compare(s_name[i], V1) == -1 && s_ID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    //>first
                    if (O1.Equals(">") && O2.Equals(">"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (string.Compare(s_name[i], V1) == 1 && int.Parse(s_ID[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (string.Compare(s_name[i], V1) == 1 && s_ID[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("!="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (string.Compare(s_name[i], V1) == 1 && !s_ID[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("<"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (string.Compare(s_name[i], V1) == 1 && int.Parse(s_ID[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (string.Compare(s_name[i], V1) == 1 && s_ID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    //IN First
                    if (O1.Equals("IN") && O2.Equals("IN"))
                    {
                        string[] t2 = V1.Split(',');
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                for (int m = 0; m < t2.Length; m++)
                                {
                                    if (s_name[i].Equals(t2[m]) && s_ID[i].Equals(t[j]))
                                    {

                                        dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    }
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("="))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (s_name[i].Equals(t2[m]) && s_ID[i].Equals(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("!="))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (s_name[i].Equals(t2[m]) && !s_ID[i].Equals(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals(">"))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (s_name[i].Equals(t2[m]) && int.Parse(s_ID[i]) > int.Parse(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("<"))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (s_name[i].Equals(t2[m]) && int.Parse(s_ID[i]) > int.Parse(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                }
                if (radioButton30.Checked)
                {
                    //=first
                    if (O1.Equals("=") && O2.Equals("="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (s_name[i].Equals(V1) || s_ID[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (s_name[i].Equals(V1) || !s_ID[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (s_name[i].Equals(V1) || int.Parse(s_ID[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (s_name[i].Equals(V1) || int.Parse(s_ID[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (s_name[i].Equals(V1) || s_ID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //!=first
                    if (O1.Equals("!=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (!s_name[i].Equals(V1) || !s_ID[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (!s_name[i].Equals(V1) || s_ID[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (!s_name[i].Equals(V1) || int.Parse(s_ID[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (!s_name[i].Equals(V1) || int.Parse(s_ID[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (!s_name[i].Equals(V1) || s_ID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //<First
                    if (O1.Equals("<") && O2.Equals("<"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (string.Compare(s_name[i], V1) == -1 || int.Parse(s_ID[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (string.Compare(s_name[i], V1) == -1 || s_ID[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("!="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (string.Compare(s_name[i], V1) == -1 || !s_ID[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals(">"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (string.Compare(s_name[i], V1) == -1 || int.Parse(s_ID[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (string.Compare(s_name[i], V1) == -1 || s_ID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //>first
                    if (O1.Equals(">") && O2.Equals(">"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (string.Compare(s_name[i], V1) == 1 || int.Parse(s_ID[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (string.Compare(s_name[i], V1) == 1 || s_ID[i].Equals(V1))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("!="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (string.Compare(s_name[i], V1) == 1 || !s_ID[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("<"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (string.Compare(s_name[i], V1) == 1 || int.Parse(s_ID[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (string.Compare(s_name[i], V1) == 1 || s_ID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //IN First
                    if (O1.Equals("IN") && O2.Equals("IN"))
                    {
                        string[] t2 = V1.Split(',');
                        string[] t = V2.Split(',');
                        List<int> z = new List<int> { };
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (s_ID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    z.Add(i);
                                    break;
                                }
                            }
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (s_name[i].Equals(t2[m]))
                                {
                                    if (!z.Contains(i))
                                    {
                                        dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                        break;
                                    }
                                }
                            }

                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("="))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (s_name[i].Equals(t2[m]) || s_ID[i].Equals(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("!="))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (s_name[i].Equals(t2[m]) || !s_ID[i].Equals(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals(">"))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (s_name[i].Equals(t2[m]) || int.Parse(s_ID[i]) > int.Parse(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("<"))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (s_name[i].Equals(t2[m]) || int.Parse(s_ID[i]) > int.Parse(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    break;
                                }
                            }
                        }
                    }
                }

            }
            //===============================================================================
            if (comboBox14.Text.Equals("Name") && comboBox11.Text.Equals("GPA"))
            {
                string O1 = comboBox13.Text;
                string V1 = textBox9.Text;

                string O2 = comboBox12.Text;
                string V2 = textBox8.Text;

                if (radioButton31.Checked)
                {
                    //=first
                    if (O1.Equals("=") && O2.Equals("="))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (s_name[i].Equals(V1) && double.Parse(s_GPA[i])==double.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("!="))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (s_name[i].Equals(V1) && double.Parse(s_GPA[i]) != double.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals(">"))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (s_name[i].Equals(V1) && double.Parse(s_GPA[i]) > double.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("<"))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (s_name[i].Equals(V1) && double.Parse(s_GPA[i]) < double.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("IN"))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (s_name[i].Equals(V1) && double.Parse(s_GPA[i])==double.Parse(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    //!=first
                    if (O1.Equals("!=") && O2.Equals("!="))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (!s_name[i].Equals(V1) && double.Parse(s_GPA[i]) != double.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("="))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (!s_name[i].Equals(V1) && double.Parse(s_GPA[i]) == double.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals(">"))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (!s_name[i].Equals(V1) && double.Parse(s_GPA[i]) > double.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("<"))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (!s_name[i].Equals(V1) && double.Parse(s_GPA[i]) < double.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("IN"))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (!s_name[i].Equals(V1) && double.Parse(s_GPA[i])==double.Parse(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    //<First
                    if (O1.Equals("<") && O2.Equals("<"))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (string.Compare(s_name[i], V1) == -1 && double.Parse(s_GPA[i]) < double.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("="))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (string.Compare(s_name[i], V1) == -1 && double.Parse(s_GPA[i]) == double.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("!="))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (string.Compare(s_name[i], V1) == -1 && double.Parse(s_GPA[i]) != double.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals(">"))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (string.Compare(s_name[i], V1) == -1 && double.Parse(s_GPA[i]) > double.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("IN"))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (string.Compare(s_name[i], V1) == -1 && double.Parse(s_GPA[i])==double.Parse(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    //>first
                    if (O1.Equals(">") && O2.Equals(">"))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (string.Compare(s_name[i], V1) == 1 && double.Parse(s_GPA[i]) > double.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("="))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (string.Compare(s_name[i], V1) == 1 && double.Parse(s_GPA[i]) == double.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("!="))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (string.Compare(s_name[i], V1) == 1 && double.Parse(s_GPA[i]) != double.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("<"))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (string.Compare(s_name[i], V1) == 1 && double.Parse(s_GPA[i]) < double.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("IN"))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (string.Compare(s_name[i], V1) == 1 && double.Parse(s_GPA[i])==double.Parse(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    //IN First
                    if (O1.Equals("IN") && O2.Equals("IN"))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t2 = V1.Split(',');
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                for (int m = 0; m < t2.Length; m++)
                                {
                                    if (s_name[i].Equals(t2[m]) && double.Parse(s_GPA[i])==double.Parse(t[j]))
                                    {

                                        dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    }
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("="))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (s_name[i].Equals(t2[m]) && double.Parse(s_GPA[i]) == double.Parse(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("!="))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (s_name[i].Equals(t2[m]) && double.Parse(s_GPA[i]) != double.Parse(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals(">"))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (s_name[i].Equals(t2[m]) && double.Parse(s_GPA[i]) > double.Parse(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("<"))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (s_name[i].Equals(t2[m]) && double.Parse(s_GPA[i]) < double.Parse(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                }
                if (radioButton30.Checked)
                {

                    //=first
                    if (O1.Equals("=") && O2.Equals("="))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (s_name[i].Equals(V1) || double.Parse(s_GPA[i]) == double.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("!="))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (s_name[i].Equals(V1) || double.Parse(s_GPA[i]) != double.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals(">"))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (s_name[i].Equals(V1) || double.Parse(s_GPA[i]) > double.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("<"))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (s_name[i].Equals(V1) || double.Parse(s_GPA[i]) < double.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("IN"))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (s_name[i].Equals(V1) || double.Parse(s_GPA[i]) == double.Parse(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    //!=first
                    if (O1.Equals("!=") && O2.Equals("!="))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (!s_name[i].Equals(V1) || double.Parse(s_GPA[i]) != double.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("="))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (!s_name[i].Equals(V1) || double.Parse(s_GPA[i]) == double.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals(">"))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (!s_name[i].Equals(V1) || double.Parse(s_GPA[i]) > double.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("<"))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (!s_name[i].Equals(V1) || double.Parse(s_GPA[i]) < double.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("IN"))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (!s_name[i].Equals(V1) || double.Parse(s_GPA[i]) == double.Parse(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    //<First
                    if (O1.Equals("<") && O2.Equals("<"))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (string.Compare(s_name[i], V1) == -1 || double.Parse(s_GPA[i]) < double.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("="))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (string.Compare(s_name[i], V1) == -1 || double.Parse(s_GPA[i]) == double.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("!="))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (string.Compare(s_name[i], V1) == -1 || double.Parse(s_GPA[i]) != double.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals(">"))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (string.Compare(s_name[i], V1) == -1 || double.Parse(s_GPA[i]) > double.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("IN"))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (string.Compare(s_name[i], V1) == -1 || double.Parse(s_GPA[i]) == double.Parse(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    //>first
                    if (O1.Equals(">") && O2.Equals(">"))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (string.Compare(s_name[i], V1) == 1 || double.Parse(s_GPA[i]) > double.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("="))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (string.Compare(s_name[i], V1) == 1 || double.Parse(s_GPA[i]) == double.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("!="))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (string.Compare(s_name[i], V1) == 1 || double.Parse(s_GPA[i]) != double.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("<"))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (string.Compare(s_name[i], V1) == 1 || double.Parse(s_GPA[i]) < double.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("IN"))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (string.Compare(s_name[i], V1) == 1 || double.Parse(s_GPA[i]) == double.Parse(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    //IN First
                    if (O1.Equals("IN") && O2.Equals("IN"))
                    {
                        dgvDisplay.Rows.Clear();

                        string[] t2 = V1.Split(',');
                        string[] t = V2.Split(',');
                        List<int> z = new List<int> { };
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (double.Parse(s_GPA[i]) == double.Parse(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    z.Add(i);
                                    break;
                                }
                            }
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (s_name[i].Equals(t2[m]))
                                {
                                    if (!z.Contains(i))
                                    {
                                        dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                        break;
                                    }
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("="))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (s_name[i].Equals(t2[m]) || double.Parse(s_GPA[i]) == double.Parse(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    break;

                                }
                            }
                        }
                       
                    }

                    if (O1.Equals("IN") && O2.Equals("!="))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (s_name[i].Equals(t2[m]) || double.Parse(s_GPA[i]) != double.Parse(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    break;

                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals(">"))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (s_name[i].Equals(t2[m]) || double.Parse(s_GPA[i]) > double.Parse(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("<"))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (s_name[i].Equals(t2[m]) || double.Parse(s_GPA[i]) < double.Parse(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    break;

                                }
                            }
                        }
                    }



                }

            }
            //==================================================================================
            if (comboBox14.Text.Equals("Name") && comboBox11.Text.Equals("Course Name"))
            {
                string O1 = comboBox13.Text;
                string V1 = textBox9.Text;

                string O2 = comboBox12.Text;
                string V2 = textBox8.Text;

                if (radioButton31.Checked)
                {
                    //=first
                    if (O1.Equals("=") && O2.Equals("="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (s_name[i].Equals(V1) && s_coursename[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (s_name[i].Equals(V1) && !s_coursename[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (s_name[i].Equals(V1) && string.Compare(s_coursename[i], V2) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (s_name[i].Equals(V1) && string.Compare(s_coursename[i], V2) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (s_name[i].Equals(V1) && s_coursename[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    //!=first
                    if (O1.Equals("!=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (!s_name[i].Equals(V1) && !s_coursename[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (!s_name[i].Equals(V1) && s_coursename[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (!s_name[i].Equals(V1) && string.Compare(s_coursename[i], V2) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (!s_name[i].Equals(V1) && string.Compare(s_coursename[i], V2) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (!s_name[i].Equals(V1) && s_coursename[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    //<First
                    if (O1.Equals("<") && O2.Equals("<"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (string.Compare(s_name[i], V1) == -1 && string.Compare(s_coursename[i], V2) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (string.Compare(s_name[i], V1) == -1 && s_coursename[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("!="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (string.Compare(s_name[i], V1) == -1 && !s_coursename[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals(">"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (string.Compare(s_name[i], V1) == -1 && string.Compare(s_coursename[i], V2) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (string.Compare(s_name[i], V1) == -1 && s_coursename[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    //>first
                    if (O1.Equals(">") && O2.Equals(">"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (string.Compare(s_name[i], V1) == 1 && string.Compare(s_coursename[i], V2) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (string.Compare(s_name[i], V1) == 1 && s_coursename[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("!="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (string.Compare(s_name[i], V1) == 1 && !s_coursename[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("<"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (string.Compare(s_name[i], V1) == 1 && string.Compare(s_coursename[i], V2) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (string.Compare(s_name[i], V1) == 1 && s_coursename[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    //IN First
                    if (O1.Equals("IN") && O2.Equals("IN"))
                    {
                        string[] t2 = V1.Split(',');
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                for (int m = 0; m < t2.Length; m++)
                                {
                                    if (s_name[i].Equals(t2[m]) && s_coursename[i].Equals(t[j]))
                                    {

                                        dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    }
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("="))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (s_name[i].Equals(t2[m]) && s_coursename[i].Equals(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("!="))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (s_name[i].Equals(t2[m]) && !s_coursename[i].Equals(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals(">"))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (s_name[i].Equals(t2[m]) && string.Compare(s_coursename[i], V2) == 1)
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("<"))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (s_name[i].Equals(t2[m]) && string.Compare(s_coursename[i], V2) == -1)
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                }
                if (radioButton30.Checked)
                {
                    //=first
                    if (O1.Equals("=") && O2.Equals("="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (s_name[i].Equals(V1) || s_coursename[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (s_name[i].Equals(V1) || !s_coursename[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (s_name[i].Equals(V1) || string.Compare(s_coursename[i], V2) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (s_name[i].Equals(V1) || string.Compare(s_coursename[i], V2) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (s_name[i].Equals(V1) || s_coursename[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //!=first
                    if (O1.Equals("!=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (!s_name[i].Equals(V1) || !s_coursename[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (!s_name[i].Equals(V1) || s_coursename[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (!s_name[i].Equals(V1) || string.Compare(s_coursename[i], V2) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (!s_name[i].Equals(V1) || string.Compare(s_coursename[i], V2) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (!s_name[i].Equals(V1) || s_coursename[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //<First
                    if (O1.Equals("<") && O2.Equals("<"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (string.Compare(s_name[i], V1) == -1 || string.Compare(s_coursename[i], V2) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (string.Compare(s_name[i], V1) == -1 || s_coursename[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("!="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (string.Compare(s_name[i], V1) == -1 || !s_coursename[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals(">"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (string.Compare(s_name[i], V1) == -1 || string.Compare(s_coursename[i], V2) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (string.Compare(s_name[i], V1) == -1 || s_coursename[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //>first
                    if (O1.Equals(">") && O2.Equals(">"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (string.Compare(s_name[i], V1) == 1 || string.Compare(s_coursename[i], V2) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (string.Compare(s_name[i], V1) == 1 || s_coursename[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("!="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (string.Compare(s_name[i], V1) == 1 || !s_coursename[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("<"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (string.Compare(s_name[i], V1) == 1 || string.Compare(s_coursename[i], V2) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (string.Compare(s_name[i], V1) == 1 || s_coursename[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //IN First
                    if (O1.Equals("IN") && O2.Equals("IN"))
                    {
                        string[] t2 = V1.Split(',');
                        string[] t = V2.Split(',');
                        List<int> z = new List<int> { };
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (s_coursename[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    z.Add(i);
                                    break;
                                }
                            }
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (s_name[i].Equals(t2[m]))
                                {
                                    if (!z.Contains(i))
                                    {
                                        dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                        break;
                                    }
                                }
                            }

                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("="))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (s_name[i].Equals(t2[m]) || s_coursename[i].Equals(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("!="))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (s_name[i].Equals(t2[m]) || !s_coursename[i].Equals(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals(">"))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (s_name[i].Equals(t2[m]) || string.Compare(s_coursename[i], V2) == 1)
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("<"))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (s_name[i].Equals(t2[m]) || string.Compare(s_coursename[i], V2) == -1)
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    break;
                                }
                            }
                        }
                    }
                }

            }
            //===============================================================================
           
            //GPA first
            if (comboBox14.Text.Equals("GPA") && comboBox11.Text.Equals("ID"))
            {
                string O1 = comboBox13.Text;
                string V1 = textBox9.Text;

                string O2 = comboBox12.Text;
                string V2 = textBox8.Text;

                if (radioButton31.Checked)
                {
                    //=first
                    if (O1.Equals("=") && O2.Equals("="))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i])==double.Parse(V1) && s_ID[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("!="))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) == double.Parse(V1) && !s_ID[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals(">"))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) == double.Parse(V1) && int.Parse(s_ID[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("<"))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) == double.Parse(V1) && int.Parse(s_ID[i]) < int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("IN"))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (double.Parse(s_GPA[i]) == double.Parse(V1) && s_ID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    //!=first
                    if (O1.Equals("!=") && O2.Equals("!="))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) != double.Parse(V1) && !s_ID[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("="))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) != double.Parse(V1) && s_ID[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals(">"))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) != double.Parse(V1) && int.Parse(s_ID[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("<"))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) != double.Parse(V1) && int.Parse(s_ID[i]) < int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("IN"))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (double.Parse(s_GPA[i]) != double.Parse(V1) && s_ID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    //<First
                    if (O1.Equals("<") && O2.Equals("<"))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) < double.Parse(V1) && int.Parse(s_ID[i]) < int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("="))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) < double.Parse(V1) && s_ID[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("!="))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) < double.Parse(V1) && !s_ID[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals(">"))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) < double.Parse(V1) && int.Parse(s_ID[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("IN"))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (double.Parse(s_GPA[i]) < double.Parse(V1) && s_ID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    //>first
                    if (O1.Equals(">") && O2.Equals(">"))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) > double.Parse(V1) && int.Parse(s_ID[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("="))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) > double.Parse(V1) && s_ID[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("!="))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) > double.Parse(V1) && !s_ID[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("<"))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) > double.Parse(V1) && int.Parse(s_ID[i]) < int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("IN"))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (double.Parse(s_GPA[i]) > double.Parse(V1) && s_ID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    //IN First
                    if (O1.Equals("IN") && O2.Equals("IN"))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t2 = V1.Split(',');
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                for (int m = 0; m < t2.Length; m++)
                                {
                                    if (double.Parse(s_GPA[i])==double.Parse(t2[m]) && s_ID[i].Equals(t[j]))
                                    {

                                        dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    }
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("="))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (double.Parse(s_GPA[i]) == double.Parse(t2[m]) && s_ID[i].Equals(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("!="))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (double.Parse(s_GPA[i]) == double.Parse(t2[m]) && !s_ID[i].Equals(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals(">"))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (double.Parse(s_GPA[i]) == double.Parse(t2[m]) && int.Parse(s_ID[i]) > int.Parse(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("<"))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (double.Parse(s_GPA[i]) == double.Parse(t2[m]) && int.Parse(s_ID[i]) < int.Parse(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                }
                if (radioButton30.Checked)
                {

                    //=first
                    if (O1.Equals("=") && O2.Equals("="))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) == double.Parse(V1) || s_ID[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("!="))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) == double.Parse(V1) || !s_ID[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals(">"))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) == double.Parse(V1) || int.Parse(s_ID[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("<"))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) == double.Parse(V1) || int.Parse(s_ID[i]) < int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("IN"))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (double.Parse(s_GPA[i]) == double.Parse(V1) || s_ID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    //!=first
                    if (O1.Equals("!=") && O2.Equals("!="))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) != double.Parse(V1) || !s_ID[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("="))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) != double.Parse(V1) || s_ID[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals(">"))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) != double.Parse(V1) || int.Parse(s_ID[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("<"))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) != double.Parse(V1) || int.Parse(s_ID[i]) < int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("IN"))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (double.Parse(s_GPA[i]) != double.Parse(V1) || s_ID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    //<First
                    if (O1.Equals("<") && O2.Equals("<"))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) < double.Parse(V1) || int.Parse(s_ID[i]) < int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("="))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) < double.Parse(V1) || s_ID[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("!="))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) < double.Parse(V1) || !s_ID[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals(">"))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) < double.Parse(V1) || int.Parse(s_ID[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("IN"))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (double.Parse(s_GPA[i]) < double.Parse(V1) || s_ID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    //>first
                    if (O1.Equals(">") && O2.Equals(">"))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) > double.Parse(V1) || int.Parse(s_ID[i]) > int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("="))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) > double.Parse(V1) || s_ID[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("!="))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) > double.Parse(V1) || !s_ID[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("<"))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) > double.Parse(V1) || int.Parse(s_ID[i]) < int.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("IN"))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (double.Parse(s_GPA[i]) > double.Parse(V1) || s_ID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    //IN First
                    if (O1.Equals("IN") && O2.Equals("IN"))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t2 = V1.Split(',');
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                for (int m = 0; m < t2.Length; m++)
                                {
                                    if (double.Parse(s_GPA[i]) == double.Parse(t2[m]) || s_ID[i].Equals(t[j]))
                                    {

                                        dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                        break;
                                    }
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("="))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (double.Parse(s_GPA[i]) == double.Parse(t2[m]) || s_ID[i].Equals(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("!="))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (double.Parse(s_GPA[i]) == double.Parse(t2[m]) || !s_ID[i].Equals(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals(">"))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (double.Parse(s_GPA[i]) == double.Parse(t2[m]) || int.Parse(s_ID[i]) > int.Parse(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("<"))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (double.Parse(s_GPA[i]) == double.Parse(t2[m]) || int.Parse(s_ID[i]) < int.Parse(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    break;
                                }
                            }
                        }
                    }


                }

            }
            //============================================================================
            if (comboBox14.Text.Equals("GPA") && comboBox11.Text.Equals("Name"))
            {
                string O1 = comboBox13.Text;
                string V1 = textBox9.Text;

                string O2 = comboBox12.Text;
                string V2 = textBox8.Text;

                if (radioButton31.Checked)
                {
                    //=first
                    if (O1.Equals("=") && O2.Equals("="))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i])==double.Parse(V1) && s_name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("!="))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) == double.Parse(V1) && !s_name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals(">"))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) == double.Parse(V1) && string.Compare(s_name[i], V2) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("<"))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) == double.Parse(V1) && string.Compare(s_name[i], V2) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("IN"))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (double.Parse(s_GPA[i]) == double.Parse(V1) && s_name[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    //!=first
                    if (O1.Equals("!=") && O2.Equals("!="))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) != double.Parse(V1) && !s_name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("="))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) != double.Parse(V1) && name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals(">"))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) != double.Parse(V1) && string.Compare(s_name[i], V2) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("<"))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) != double.Parse(V1) && string.Compare(s_name[i], V2) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("IN"))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (double.Parse(s_GPA[i]) != double.Parse(V1) && s_name[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    //<First
                    if (O1.Equals("<") && O2.Equals("<"))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) < double.Parse(V1) && string.Compare(s_name[i], V2) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("="))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) < double.Parse(V1) && s_name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("!="))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) < double.Parse(V1) && !s_name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals(">"))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) < double.Parse(V1) && string.Compare(s_name[i], V2) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("IN"))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (double.Parse(s_GPA[i]) < double.Parse(V1) && s_name[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    //>first
                    if (O1.Equals(">") && O2.Equals(">"))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) > double.Parse(V1) && string.Compare(s_name[i], V2) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("="))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) > double.Parse(V1) && s_name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("!="))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) > double.Parse(V1) && !s_name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("<"))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) > double.Parse(V1) && string.Compare(s_name[i], V2) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("IN"))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (double.Parse(s_GPA[i]) > double.Parse(V1) && s_name[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    //IN First
                    if (O1.Equals("IN") && O2.Equals("IN"))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t2 = V1.Split(',');
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                for (int m = 0; m < t2.Length; m++)
                                {
                                    if (double.Parse(s_GPA[i])==double.Parse(t2[m]) && s_name[i].Equals(t[j]))
                                    {

                                        dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    }
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("="))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (double.Parse(s_GPA[i]) == double.Parse(t2[m]) && s_name[i].Equals(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("!="))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (double.Parse(s_GPA[i]) == double.Parse(t2[m]) && !s_name[i].Equals(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals(">"))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (double.Parse(s_GPA[i]) == double.Parse(t2[m]) && string.Compare(s_name[i], V2) == 1)
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("<"))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (double.Parse(s_GPA[i]) == double.Parse(t2[m]) && string.Compare(s_name[i], V2) == -1)
                                {
                                    
                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                }
                if (radioButton30.Checked)
                {


                    //=first
                    if (O1.Equals("=") && O2.Equals("="))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) == double.Parse(V1) || s_name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("!="))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) == double.Parse(V1) || !s_name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals(">"))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) == double.Parse(V1) || string.Compare(s_name[i], V2) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("<"))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) == double.Parse(V1) || string.Compare(s_name[i], V2) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("IN"))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (double.Parse(s_GPA[i]) == double.Parse(V1) || s_name[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    //!=first
                    if (O1.Equals("!=") && O2.Equals("!="))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) != double.Parse(V1) || !s_name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("="))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) != double.Parse(V1) || name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals(">"))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) != double.Parse(V1) || string.Compare(s_name[i], V2) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("<"))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) != double.Parse(V1) || string.Compare(s_name[i], V2) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("IN"))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (double.Parse(s_GPA[i]) != double.Parse(V1) || s_name[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    //<First
                    if (O1.Equals("<") && O2.Equals("<"))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) < double.Parse(V1) || string.Compare(s_name[i], V2) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("="))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) < double.Parse(V1) || s_name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("!="))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) < double.Parse(V1) || !s_name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals(">"))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) < double.Parse(V1) || string.Compare(s_name[i], V2) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("IN"))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (double.Parse(s_GPA[i]) < double.Parse(V1) || s_name[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    //>first
                    if (O1.Equals(">") && O2.Equals(">"))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) > double.Parse(V1) || string.Compare(s_name[i], V2) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("="))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) > double.Parse(V1) || s_name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("!="))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) > double.Parse(V1) || !s_name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("<"))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) > double.Parse(V1) || string.Compare(s_name[i], V2) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("IN"))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (double.Parse(s_GPA[i]) > double.Parse(V1) || s_name[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    //IN First
                    if (O1.Equals("IN") && O2.Equals("IN"))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t2 = V1.Split(',');
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                for (int m = 0; m < t2.Length; m++)
                                {
                                    if (double.Parse(s_GPA[i]) == double.Parse(t2[m]) || s_name[i].Equals(t[j]))
                                    {

                                        dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    }
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("="))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (double.Parse(s_GPA[i]) == double.Parse(t2[m]) || s_name[i].Equals(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("!="))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (double.Parse(s_GPA[i]) == double.Parse(t2[m]) || !s_name[i].Equals(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals(">"))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (double.Parse(s_GPA[i]) == double.Parse(t2[m]) || string.Compare(s_name[i], V2) == 1)
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("<"))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (double.Parse(s_GPA[i]) == double.Parse(t2[m]) || string.Compare(s_name[i], V2) == -1)
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    break;
                                }
                            }
                        }
                    }

                }

            }
            //==================================================================================
            if (comboBox14.Text.Equals("GPA") && comboBox11.Text.Equals("GPA"))
            {
                string O1 = comboBox13.Text;
                string V1 = textBox9.Text;

                string O2 = comboBox12.Text;
                string V2 = textBox8.Text;

                if (radioButton31.Checked)
                {
                    //=first
                    if (O1.Equals("=") && O2.Equals("="))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i])==double.Parse(V1) && double.Parse(s_GPA[i])==double.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("!="))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (s_GPA[i].Equals(V1) && !s_GPA[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals(">"))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i])==double.Parse(V1) && double.Parse(s_GPA[i]) > double.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("<"))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) == double.Parse(V1) && double.Parse(s_GPA[i]) < double.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("IN"))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (double.Parse(s_GPA[i])==double.Parse(V1) && double.Parse(s_GPA[i])==double.Parse(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    //!=first
                    if (O1.Equals("!=") && O2.Equals("!="))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) != double.Parse(V1) && double.Parse(s_GPA[i]) != double.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("="))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) != double.Parse(V1) && double.Parse(s_GPA[i]) == double.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals(">"))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) != double.Parse(V1) && double.Parse(s_GPA[i]) > double.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("<"))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) != double.Parse(V1) && double.Parse(s_GPA[i]) < double.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("IN"))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (double.Parse(s_GPA[i])!=double.Parse(V1) && double.Parse(s_GPA[i])==double.Parse(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    //<First
                    if (O1.Equals("<") && O2.Equals("<"))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) < double.Parse(V1) && double.Parse(s_GPA[i]) < double.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("="))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) < double.Parse(V1) && double.Parse(s_GPA[i])==double.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("!="))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) < double.Parse(V1) && double.Parse(s_GPA[i]) != double.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals(">"))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) < double.Parse(V1) && int.Parse(s_GPA[i]) > double.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("IN"))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (double.Parse(s_GPA[i]) < double.Parse(V1) && double.Parse(s_GPA[i])==double.Parse(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    //>first
                    if (O1.Equals(">") && O2.Equals(">"))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) > double.Parse(V1) && double.Parse(s_GPA[i]) > double.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("="))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) > double.Parse(V1) && double.Parse(s_GPA[i])==double.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("!="))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) > double.Parse(V1) && double.Parse(s_GPA[i]) != double.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("<"))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) > double.Parse(V1) && double.Parse(s_GPA[i]) < double.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("IN"))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (double.Parse(s_GPA[i]) > double.Parse(V1) && double.Parse(s_GPA[i])==double.Parse(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    //IN First
                    if (O1.Equals("IN") && O2.Equals("IN"))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t2 = V1.Split(',');
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                for (int m = 0; m < t2.Length; m++)
                                {
                                    if (double.Parse(s_GPA[i])==double.Parse(t2[m]) && double.Parse(s_GPA[i])==double.Parse(t[j]))
                                    {

                                        dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    }
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("="))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (double.Parse(s_GPA[i])==double.Parse(t2[m]) && double.Parse(s_GPA[i])==double.Parse(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("!="))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (double.Parse(s_GPA[i]) == double.Parse(t2[m]) && double.Parse(s_GPA[i]) != double.Parse(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals(">"))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (double.Parse(s_GPA[i]) == double.Parse(t2[m]) && double.Parse(s_GPA[i]) > double.Parse(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("<"))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (double.Parse(s_GPA[i]) == double.Parse(t2[m]) && double.Parse(s_GPA[i]) < double.Parse(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                }
                if (radioButton30.Checked)
                {


                    //=first
                    if (O1.Equals("=") && O2.Equals("="))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) == double.Parse(V1) || double.Parse(s_GPA[i]) == double.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("!="))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (s_GPA[i].Equals(V1) || !s_GPA[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals(">"))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) == double.Parse(V1) || double.Parse(s_GPA[i]) > double.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("<"))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) == double.Parse(V1) || double.Parse(s_GPA[i]) < double.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("IN"))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (double.Parse(s_GPA[i]) == double.Parse(V1) || double.Parse(s_GPA[i]) == double.Parse(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    //!=first
                    if (O1.Equals("!=") && O2.Equals("!="))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) != double.Parse(V1) || double.Parse(s_GPA[i]) != double.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("="))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) != double.Parse(V1) || double.Parse(s_GPA[i]) == double.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals(">"))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) != double.Parse(V1) || double.Parse(s_GPA[i]) > double.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("<"))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) != double.Parse(V1) || double.Parse(s_GPA[i]) < double.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("IN"))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (double.Parse(s_GPA[i]) != double.Parse(V1) || double.Parse(s_GPA[i]) == double.Parse(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    //<First
                    if (O1.Equals("<") && O2.Equals("<"))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) < double.Parse(V1) || double.Parse(s_GPA[i]) < double.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("="))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) < double.Parse(V1) || double.Parse(s_GPA[i]) == double.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("!="))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) < double.Parse(V1) || double.Parse(s_GPA[i]) != double.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals(">"))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) < double.Parse(V1) || int.Parse(s_GPA[i]) > double.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("IN"))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (double.Parse(s_GPA[i]) < double.Parse(V1) || double.Parse(s_GPA[i]) == double.Parse(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    //>first
                    if (O1.Equals(">") && O2.Equals(">"))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) > double.Parse(V1) || double.Parse(s_GPA[i]) > double.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("="))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) > double.Parse(V1) || double.Parse(s_GPA[i]) == double.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("!="))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) > double.Parse(V1) || double.Parse(s_GPA[i]) != double.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("<"))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) > double.Parse(V1) || double.Parse(s_GPA[i]) < double.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("IN"))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (double.Parse(s_GPA[i]) > double.Parse(V1) || double.Parse(s_GPA[i]) == double.Parse(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    //IN First
                    if (O1.Equals("IN") && O2.Equals("IN"))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t2 = V1.Split(',');
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                for (int m = 0; m < t2.Length; m++)
                                {
                                    if (double.Parse(s_GPA[i]) == double.Parse(t2[m]) || double.Parse(s_GPA[i]) == double.Parse(t[j]))
                                    {

                                        dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    }
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("="))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (double.Parse(s_GPA[i]) == double.Parse(t2[m]) || double.Parse(s_GPA[i]) == double.Parse(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("!="))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (double.Parse(s_GPA[i]) == double.Parse(t2[m]) || double.Parse(s_GPA[i]) != double.Parse(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals(">"))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (double.Parse(s_GPA[i]) == double.Parse(t2[m]) || double.Parse(s_GPA[i]) > double.Parse(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("<"))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (double.Parse(s_GPA[i]) == double.Parse(t2[m]) || double.Parse(s_GPA[i]) < double.Parse(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    break;
                                }
                            }
                        }
                    }


                }

            }
            //==============================================================================
            if (comboBox14.Text.Equals("GPA") && comboBox11.Text.Equals("Course Name"))
            {
                string O1 = comboBox13.Text;
                string V1 = textBox9.Text;

                string O2 = comboBox12.Text;
                string V2 = textBox8.Text;

                if (radioButton31.Checked)
                {
                    //=first
                    if (O1.Equals("=") && O2.Equals("="))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i])==double.Parse(V1) && s_coursename[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("!="))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) == double.Parse(V1) && !s_coursename[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals(">"))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) == double.Parse(V1) && string.Compare(s_coursename[i], V2) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("<"))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) == double.Parse(V1) && string.Compare(s_coursename[i], V2) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("IN"))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (double.Parse(s_GPA[i]) == double.Parse(V1) && s_coursename[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    //!=first
                    if (O1.Equals("!=") && O2.Equals("!="))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) != double.Parse(V1) && !s_coursename[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("="))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) != double.Parse(V1) && s_coursename[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals(">"))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) != double.Parse(V1) && string.Compare(s_coursename[i], V2) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("<"))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) != double.Parse(V1) && string.Compare(s_coursename[i], V2) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("IN"))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (double.Parse(s_GPA[i]) != double.Parse(V1) && s_coursename[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    //<First
                    if (O1.Equals("<") && O2.Equals("<"))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) < double.Parse(V1) && string.Compare(s_coursename[i], V2) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("="))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) < double.Parse(V1) && s_coursename[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("!="))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) < double.Parse(V1) && !s_coursename[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals(">"))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) < double.Parse(V1) && string.Compare(s_coursename[i], V2) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("IN"))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (double.Parse(s_GPA[i]) < double.Parse(V1) && s_coursename[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    //>first
                    if (O1.Equals(">") && O2.Equals(">"))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) > double.Parse(V1) && string.Compare(s_coursename[i], V2) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("="))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) > double.Parse(V1) && s_coursename[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("!="))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) > double.Parse(V1) && !s_coursename[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("<"))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) > double.Parse(V1) && string.Compare(s_coursename[i], V2) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("IN"))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (double.Parse(s_GPA[i]) > double.Parse(V1) && s_coursename[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    //IN First
                    if (O1.Equals("IN") && O2.Equals("IN"))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t2 = V1.Split(',');
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                for (int m = 0; m < t2.Length; m++)
                                {
                                    if (double.Parse(s_GPA[i])==double.Parse(t2[m]) && s_coursename[i].Equals(t[j]))
                                    {

                                        dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    }
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("="))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (double.Parse(s_GPA[i]) == double.Parse(t2[m]) && s_coursename[i].Equals(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("!="))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (double.Parse(s_GPA[i]) == double.Parse(t2[m]) && !s_coursename[i].Equals(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals(">"))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (double.Parse(s_GPA[i]) == double.Parse(t2[m]) && string.Compare(s_coursename[i], V2) == 1)
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("<"))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (double.Parse(s_GPA[i]) == double.Parse(t2[m]) && string.Compare(s_coursename[i], V2) == -1)
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                }
                if (radioButton30.Checked)
                {

                    //=first
                    if (O1.Equals("=") && O2.Equals("="))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) == double.Parse(V1) || s_coursename[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("!="))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) == double.Parse(V1) || !s_coursename[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals(">"))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) == double.Parse(V1) || string.Compare(s_coursename[i], V2) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("<"))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) == double.Parse(V1) || string.Compare(s_coursename[i], V2) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("IN"))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (double.Parse(s_GPA[i]) == double.Parse(V1) || s_coursename[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    //!=first
                    if (O1.Equals("!=") && O2.Equals("!="))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) != double.Parse(V1) || !s_coursename[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("="))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) != double.Parse(V1) || s_coursename[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals(">"))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) != double.Parse(V1) || string.Compare(s_coursename[i], V2) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("<"))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) != double.Parse(V1) || string.Compare(s_coursename[i], V2) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("IN"))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (double.Parse(s_GPA[i]) != double.Parse(V1) || s_coursename[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    //<First
                    if (O1.Equals("<") && O2.Equals("<"))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) < double.Parse(V1) || string.Compare(s_coursename[i], V2) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("="))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) < double.Parse(V1) || s_coursename[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("!="))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) < double.Parse(V1) || !s_coursename[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals(">"))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) < double.Parse(V1) || string.Compare(s_coursename[i], V2) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("IN"))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (double.Parse(s_GPA[i]) < double.Parse(V1) || s_coursename[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    //>first
                    if (O1.Equals(">") && O2.Equals(">"))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) > double.Parse(V1) || string.Compare(s_coursename[i], V2) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("="))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) > double.Parse(V1) || s_coursename[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("!="))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) > double.Parse(V1) || !s_coursename[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("<"))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) > double.Parse(V1) || string.Compare(s_coursename[i], V2) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("IN"))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (double.Parse(s_GPA[i]) > double.Parse(V1) || s_coursename[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    //IN First
                    if (O1.Equals("IN") && O2.Equals("IN"))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t2 = V1.Split(',');
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                for (int m = 0; m < t2.Length; m++)
                                {
                                    if (double.Parse(s_GPA[i]) == double.Parse(t2[m]) || s_coursename[i].Equals(t[j]))
                                    {

                                        dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    }
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("="))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (double.Parse(s_GPA[i]) == double.Parse(t2[m]) || s_coursename[i].Equals(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("!="))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (double.Parse(s_GPA[i]) == double.Parse(t2[m]) || !s_coursename[i].Equals(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals(">"))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (double.Parse(s_GPA[i]) == double.Parse(t2[m]) || string.Compare(s_coursename[i], V2) == 1)
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("<"))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (double.Parse(s_GPA[i]) == double.Parse(t2[m]) || string.Compare(s_coursename[i], V2) == -1)
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    break;
                                }
                            }
                        }
                    }



                }

            }

            //course name
            if (comboBox14.Text.Equals("Course Name") && comboBox11.Text.Equals("ID"))
            {
                string O1 = comboBox13.Text;
                string V1 = textBox9.Text;

                string O2 = comboBox12.Text;
                string V2 = textBox8.Text;

                if (radioButton31.Checked)
                {
                    //=first
                    if (O1.Equals("=") && O2.Equals("="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (s_coursename[i].Equals(V1) && s_ID[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (s_coursename[i].Equals(V1) && !s_ID[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (s_coursename[i].Equals(V1) && string.Compare(s_ID[i], V2) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (s_coursename[i].Equals(V1) && string.Compare(s_ID[i], V2) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (s_coursename[i].Equals(V1) && s_ID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    //!=first
                    if (O1.Equals("!=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (!s_coursename[i].Equals(V1) && !s_ID[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (!s_coursename[i].Equals(V1) && s_ID[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (!s_coursename[i].Equals(V1) && string.Compare(s_ID[i], V2) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (!s_coursename[i].Equals(V1) && string.Compare(s_ID[i], V2) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (!s_coursename[i].Equals(V1) && s_ID[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    //<First
                    if (O1.Equals("<") && O2.Equals("<"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (int.Parse(s_ID[i]) < int.Parse(V2) && string.Compare(s_coursename[i], V1) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (int.Parse(s_ID[i]) == int.Parse(V2) && string.Compare(s_coursename[i], V1) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("!="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (int.Parse(s_ID[i]) != int.Parse(V2) && string.Compare(s_coursename[i], V1) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals(">"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (int.Parse(s_ID[i]) > int.Parse(V2) && string.Compare(s_coursename[i], V1) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (int.Parse(s_ID[i]) == int.Parse(t[j]) && string.Compare(s_coursename[i],V1)==-1)
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    //>first
                    if (O1.Equals(">") && O2.Equals(">"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (int.Parse(s_ID[i]) > int.Parse(V2) && string.Compare(s_coursename[i], V1) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (int.Parse(s_ID[i]) == int.Parse(V2) && string.Compare(s_coursename[i], V1) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("!="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (int.Parse(s_ID[i]) != int.Parse(V2) && string.Compare(s_coursename[i], V1) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("<"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (int.Parse(s_ID[i]) < int.Parse(V2) && string.Compare(s_coursename[i], V1) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (int.Parse(s_ID[i]) == int.Parse(t[j]) && string.Compare(s_coursename[i], V1) == 1)
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    //IN First
                    if (O1.Equals("IN") && O2.Equals("IN"))
                    {
                        string[] t2 = V1.Split(',');
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                for (int m = 0; m < t2.Length; m++)
                                {
                                    if (s_ID[i].Equals(t[j]) && s_coursename[i].Equals(t2[m]))
                                    {

                                        dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    }
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("="))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (s_ID[i].Equals(V2) && s_coursename[i].Equals(t2[m]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("!="))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (!s_ID[i].Equals(V2) && s_coursename[i].Equals(t2[m]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals(">"))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (string.Compare(s_ID[i] , V2)==1 && s_coursename[i].Equals(t2[m]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("<"))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (string.Compare(s_ID[i], V2) == -1 && s_coursename[i].Equals(t2[m]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                }
                if (radioButton30.Checked)
                {
                    //=first
                    if (O1.Equals("=") && O2.Equals("="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (s_ID[i].Equals(V2) || s_coursename[i].Equals(V1))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (!s_ID[i].Equals(V2) || s_coursename[i].Equals(V1))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (string.Compare(s_ID[i],V2)==1 || s_coursename[i].Equals(V1))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (string.Compare(s_ID[i], V2) == -1 || s_coursename[i].Equals(V1))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (s_ID[i].Equals(t[j]) || s_coursename[i].Equals(V1))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //!=first
                    if (O1.Equals("!=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (!s_ID[i].Equals(V2) || !s_coursename[i].Equals(V1))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if ( s_ID[i].Equals(V2) || !s_coursename[i].Equals(V1))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (string.Compare(s_ID[i],V2)==1 || !s_coursename[i].Equals(V1))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (string.Compare(s_ID[i], V2) == -1 || !s_coursename[i].Equals(V1))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (s_ID[i].Equals(t[j]) || !s_coursename[i].Equals(V1))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //<First
                    if (O1.Equals("<") && O2.Equals("<"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (int.Parse(s_ID[i]) < int.Parse(V2) || string.Compare(s_coursename[i], V1) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (int.Parse(s_ID[i]) == int.Parse(V2) || string.Compare(s_coursename[i], V1) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("!="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (int.Parse(s_ID[i]) != int.Parse(V2) || string.Compare(s_coursename[i], V1) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals(">"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (int.Parse(s_ID[i]) > int.Parse(V2) || string.Compare(s_coursename[i], V1) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (s_ID[i].Equals(t[j]) || string.Compare(s_coursename[i], V1) == -1)
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //>first
                    if (O1.Equals(">") && O2.Equals(">"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (int.Parse(s_ID[i]) > int.Parse(V2) || string.Compare(s_coursename[i], V1) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (int.Parse(s_ID[i]) == int.Parse(V2) || string.Compare(s_coursename[i], V1) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("!="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (int.Parse(s_ID[i]) != int.Parse(V2) || string.Compare(s_coursename[i], V1) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("<"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (int.Parse(s_ID[i]) < int.Parse(V2) || string.Compare(s_coursename[i], V1) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (s_ID[i].Equals(t[j]) || string.Compare(s_coursename[i], V1) == 1)
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //IN First
                    if (O1.Equals("IN") && O2.Equals("IN"))
                    {
                        string[] t2 = V1.Split(',');
                        string[] t = V2.Split(',');
                        List<int> z = new List<int> { };
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t2.Length; j++)
                            {
                                if (s_coursename[i].Equals(t2[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    z.Add(i);
                                    break;
                                }
                            }
                            for (int m = 0; m < t.Length; m++)
                            {
                                if (s_ID[i].Equals(t[m]))
                                {
                                    if (!z.Contains(i))
                                    {
                                        dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                        break;
                                    }
                                }
                            }

                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("="))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (s_ID[i].Equals(V2) || s_coursename[i].Equals(t2[m]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("!="))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (!s_ID[i].Equals(V2) || s_coursename[i].Equals(t2[m]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals(">"))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (string.Compare(s_ID[i] , V2)==1 || s_coursename[i].Equals(t2[m]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("<"))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (string.Compare(s_ID[i], V2) == -1 || s_coursename[i].Equals(t2[m]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    break;
                                }
                            }
                        }
                    }
                }

            }
            //=================================================================================
            if (comboBox14.Text.Equals("course Name") && comboBox11.Text.Equals("Name"))
            {
                string O1 = comboBox13.Text;
                string V1 = textBox9.Text;

                string O2 = comboBox12.Text;
                string V2 = textBox8.Text;

                if (radioButton31.Checked)
                {
                    //=first
                    if (O1.Equals("=") && O2.Equals("="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (s_coursename[i].Equals(V1) && s_name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (s_coursename[i].Equals(V1) && !s_name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (s_coursename[i].Equals(V1) && string.Compare(s_name[i], V2) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (s_coursename[i].Equals(V1) && string.Compare(s_name[i], V2) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (s_coursename[i].Equals(V1) && s_name[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    //!=first
                    if (O1.Equals("!=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (!s_coursename[i].Equals(V1) && !s_name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (!s_coursename[i].Equals(V1) && name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (!s_coursename[i].Equals(V1) && string.Compare(s_name[i], V2) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (!s_coursename[i].Equals(V1) && string.Compare(s_name[i], V2) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (!s_coursename[i].Equals(V1) && s_name[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    //<First
                    if (O1.Equals("<") && O2.Equals("<"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (string.Compare(s_coursename[i], V1) == -1 && string.Compare(s_name[i], V2) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (string.Compare(s_coursename[i], V1) == -1 && s_name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("!="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (string.Compare(s_coursename[i], V1) == -1 && !s_name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals(">"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (string.Compare(s_coursename[i], V1) == -1 && string.Compare(s_name[i], V2) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (string.Compare(s_coursename[i], V1) == -1 && s_name[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    //>first
                    if (O1.Equals(">") && O2.Equals(">"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (string.Compare(s_coursename[i], V1) == 1 && string.Compare(s_name[i], V2) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (string.Compare(s_coursename[i], V1) == 1 && s_name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("!="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (string.Compare(s_coursename[i], V1) == 1 && !s_name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("<"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (string.Compare(s_coursename[i], V1) == 1 && string.Compare(s_name[i], V2) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (string.Compare(s_coursename[i], V1) == 1 && s_name[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    //IN First
                    if (O1.Equals("IN") && O2.Equals("IN"))
                    {
                        string[] t2 = V1.Split(',');
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                for (int m = 0; m < t2.Length; m++)
                                {
                                    if (s_coursename[i].Equals(t2[m]) && s_name[i].Equals(t[j]))
                                    {

                                        dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    }
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("="))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (s_coursename[i].Equals(t2[m]) && s_name[i].Equals(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("!="))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (s_coursename[i].Equals(t2[m]) && !s_name[i].Equals(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals(">"))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (s_coursename[i].Equals(t2[m]) && string.Compare(s_name[i], V2) == 1)
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("<"))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (s_coursename[i].Equals(t2[m]) && string.Compare(s_name[i], V2) == -1)
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                }
                if (radioButton30.Checked)
                {
                    //=first
                    if (O1.Equals("=") && O2.Equals("="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (s_coursename[i].Equals(V1) || s_name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (s_coursename[i].Equals(V1) || !s_name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (s_coursename[i].Equals(V1) || string.Compare(s_name[i], V2) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (s_coursename[i].Equals(V1) || string.Compare(s_name[i], V2) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (s_coursename[i].Equals(V1) || s_name[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //!=first
                    if (O1.Equals("!=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (!s_coursename[i].Equals(V1) || !s_name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (!s_coursename[i].Equals(V1) || s_name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (!s_coursename[i].Equals(V1) || string.Compare(s_name[i], V2) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (!s_coursename[i].Equals(V1) || string.Compare(s_name[i], V2) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (!s_coursename[i].Equals(V1) || s_name[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //<First
                    if (O1.Equals("<") && O2.Equals("<"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (string.Compare(s_coursename[i], V1) == -1 || string.Compare(s_name[i], V2) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (string.Compare(s_coursename[i], V1) == -1 || s_name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("!="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (string.Compare(s_coursename[i], V1) == -1 || !s_name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals(">"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (string.Compare(s_coursename[i], V1) == -1 || string.Compare(s_name[i], V2) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (string.Compare(s_coursename[i], V1) == -1 || s_name[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //>first
                    if (O1.Equals(">") && O2.Equals(">"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (string.Compare(s_coursename[i], V1) == 1 || string.Compare(s_name[i], V2) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (string.Compare(s_coursename[i], V1) == 1 || s_name[i].Equals(V1))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("!="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (string.Compare(s_coursename[i], V1) == 1 || !s_name[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("<"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (string.Compare(s_coursename[i], V1) == 1 || string.Compare(s_name[i], V2) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (string.Compare(s_coursename[i], V1) == 1 || s_name[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //IN First
                    if (O1.Equals("IN") && O2.Equals("IN"))
                    {
                        string[] t2 = V1.Split(',');
                        string[] t = V2.Split(',');
                        List<int> z = new List<int> { };
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (s_coursename[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    z.Add(i);
                                    break;
                                }
                            }
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (s_name[i].Equals(t2[m]))
                                {
                                    if (!z.Contains(i))
                                    {
                                        dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                        break;
                                    }
                                }
                            }

                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("="))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (s_coursename[i].Equals(t2[m]) || s_name[i].Equals(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("!="))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (s_coursename[i].Equals(t2[m]) || !s_name[i].Equals(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals(">"))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (s_coursename[i].Equals(t2[m]) || string.Compare(s_name[i], V2) == 1)
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("<"))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (s_coursename[i].Equals(t2[m]) || string.Compare(s_name[i], V2) == -1)
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    break;
                                }
                            }
                        }
                    }
                }

            }
            //====================================================================================
            if (comboBox14.Text.Equals("Course Name") && comboBox11.Text.Equals("GPA"))
            {
                string O1 = comboBox13.Text;
                string V1 = textBox9.Text;

                string O2 = comboBox12.Text;
                string V2 = textBox8.Text;

                if (radioButton31.Checked)
                {
                    //=first
                    if (O1.Equals("=") && O2.Equals("="))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (s_coursename[i].Equals(V1) && double.Parse(s_GPA[i])==double.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("!="))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (s_coursename[i].Equals(V1) && double.Parse(s_GPA[i]) != double.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals(">"))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (s_coursename[i].Equals(V1) && double.Parse(s_GPA[i]) > double.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("<"))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (s_coursename[i].Equals(V1) && double.Parse(s_GPA[i]) <  double.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("IN"))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (s_coursename[i].Equals(V1) && double.Parse(s_GPA[i])==double.Parse(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    //!=first
                    if (O1.Equals("!=") && O2.Equals("!="))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (!s_coursename[i].Equals(V1) && double.Parse(s_GPA[i])!= double.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("="))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (!s_coursename[i].Equals(V1) && double.Parse(s_GPA[i]) == double.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals(">"))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (!s_coursename[i].Equals(V1) && double.Parse(s_GPA[i]) > double.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("<"))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (!s_coursename[i].Equals(V1) && double.Parse(s_GPA[i]) < double.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("IN"))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (!s_coursename[i].Equals(V1) && double.Parse(s_GPA[i])==double.Parse(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    //<First
                    if (O1.Equals("<") && O2.Equals("<"))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) < double.Parse(V2) && string.Compare(s_coursename[i], V1) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("="))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) == double.Parse(V2) && string.Compare(s_coursename[i], V1) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("!="))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) != double.Parse(V2) && string.Compare(s_coursename[i], V1) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals(">"))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) > double.Parse(V2) && string.Compare(s_coursename[i], V1) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("IN"))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (double.Parse(s_GPA[i]) == double.Parse(t[j]) && string.Compare(s_coursename[i], V1) == -1)
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    //>first
                    if (O1.Equals(">") && O2.Equals(">"))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) > double.Parse(V2) && string.Compare(s_coursename[i], V1) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("="))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) == double.Parse(V2) && string.Compare(s_coursename[i], V1) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("!="))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) != double.Parse(V2) && string.Compare(s_coursename[i], V1) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("<"))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) < double.Parse(V2) && string.Compare(s_coursename[i], V1) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("IN"))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (double.Parse(s_GPA[i]) == double.Parse(t[j]) && string.Compare(s_coursename[i], V1) == 1)
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    //IN First
                    if (O1.Equals("IN") && O2.Equals("IN"))
                    {
                        
                        dgvDisplay.Rows.Clear();
                        string[] t2 = V1.Split(',');
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                for (int m = 0; m < t2.Length; m++)
                                {
                                    if (double.Parse(s_GPA[i])==double.Parse(t[j]) && s_coursename[i].Equals(t2[m]))
                                    {

                                        dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    }
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("="))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (double.Parse(s_GPA[i]) == double.Parse(V2) && s_coursename[i].Equals(t2[m]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("!="))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (double.Parse(s_GPA[i]) != double.Parse(V2) && s_coursename[i].Equals(t2[m]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals(">"))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (double.Parse(s_GPA[i]) > double.Parse(V2)  && s_coursename[i].Equals(t2[m]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("<"))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (double.Parse(s_GPA[i]) < double.Parse(V2) && s_coursename[i].Equals(t2[m]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                }
                if (radioButton30.Checked)
                {

                    //=first
                    if (O1.Equals("=") && O2.Equals("="))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (s_coursename[i].Equals(V1) || double.Parse(s_GPA[i]) == double.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("!="))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (s_coursename[i].Equals(V1) || double.Parse(s_GPA[i]) != double.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals(">"))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (s_coursename[i].Equals(V1) || double.Parse(s_GPA[i]) > double.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("<"))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (s_coursename[i].Equals(V1) || double.Parse(s_GPA[i]) < double.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("IN"))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (s_coursename[i].Equals(V1) || double.Parse(s_GPA[i]) == double.Parse(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    //!=first
                    if (O1.Equals("!=") && O2.Equals("!="))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (!s_coursename[i].Equals(V1) || double.Parse(s_GPA[i]) != double.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("="))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (!s_coursename[i].Equals(V1) || double.Parse(s_GPA[i]) == double.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals(">"))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (!s_coursename[i].Equals(V1) || double.Parse(s_GPA[i]) > double.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("<"))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (!s_coursename[i].Equals(V1) || double.Parse(s_GPA[i]) < double.Parse(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("IN"))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (!s_coursename[i].Equals(V1) || double.Parse(s_GPA[i]) == double.Parse(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    //<First
                    if (O1.Equals("<") && O2.Equals("<"))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) < double.Parse(V2) || string.Compare(s_coursename[i], V1) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("="))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) == double.Parse(V2) || string.Compare(s_coursename[i], V1) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("!="))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) != double.Parse(V2) || string.Compare(s_coursename[i], V1) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals(">"))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) > double.Parse(V2) || string.Compare(s_coursename[i], V1) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("IN"))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (double.Parse(s_GPA[i]) == double.Parse(t[j]) || string.Compare(s_coursename[i], V1) == -1)
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    //>first
                    if (O1.Equals(">") && O2.Equals(">"))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) > double.Parse(V2) || string.Compare(s_coursename[i], V1) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("="))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) == double.Parse(V2) || string.Compare(s_coursename[i], V1) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("!="))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) != double.Parse(V2) || string.Compare(s_coursename[i], V1) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("<"))
                    {
                        dgvDisplay.Rows.Clear();
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (double.Parse(s_GPA[i]) < double.Parse(V2) || string.Compare(s_coursename[i], V1) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("IN"))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (double.Parse(s_GPA[i]) == double.Parse(t[j]) || string.Compare(s_coursename[i], V1) == 1)
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    //IN First
                    if (O1.Equals("IN") && O2.Equals("IN"))
                    {

                        dgvDisplay.Rows.Clear();
                        string[] t2 = V1.Split(',');
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                for (int m = 0; m < t2.Length; m++)
                                {
                                    if (double.Parse(s_GPA[i]) == double.Parse(t[j]) || s_coursename[i].Equals(t2[m]))
                                    {

                                        dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    }
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("="))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (double.Parse(s_GPA[i]) == double.Parse(V2) || s_coursename[i].Equals(t2[m]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("!="))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (double.Parse(s_GPA[i]) != double.Parse(V2) || s_coursename[i].Equals(t2[m]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals(">"))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (double.Parse(s_GPA[i]) > double.Parse(V2) || s_coursename[i].Equals(t2[m]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("<"))
                    {
                        dgvDisplay.Rows.Clear();
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (double.Parse(s_GPA[i]) < double.Parse(V2) || s_coursename[i].Equals(t2[m]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    break;
                                }
                            }
                        }
                    }


                }

            }
            //--==============================================================================
            if (comboBox14.Text.Equals("course Name") && comboBox11.Text.Equals("course Name"))
            {
                string O1 = comboBox13.Text;
                string V1 = textBox9.Text;

                string O2 = comboBox12.Text;
                string V2 = textBox8.Text;

                if (radioButton31.Checked)
                {
                    //=first
                    if (O1.Equals("=") && O2.Equals("="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (s_coursename[i].Equals(V1) && s_coursename[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (s_coursename[i].Equals(V1) && !s_coursename[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (s_coursename[i].Equals(V1) && string.Compare(s_coursename[i], V2) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (s_coursename[i].Equals(V1) && string.Compare(s_coursename[i], V2) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (s_coursename[i].Equals(V1) && s_coursename[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    //!=first
                    if (O1.Equals("!=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (!s_coursename[i].Equals(V1) && !s_coursename[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (!s_coursename[i].Equals(V1) && s_coursename[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (!s_coursename[i].Equals(V1) && string.Compare(s_coursename[i], V2) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (!s_coursename[i].Equals(V1) && string.Compare(s_coursename[i], V2) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (!s_coursename[i].Equals(V1) && s_coursename[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    //<First
                    if (O1.Equals("<") && O2.Equals("<"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (string.Compare(s_coursename[i], V1) == -1 && string.Compare(s_coursename[i], V2) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (string.Compare(s_coursename[i], V1) == -1 && s_coursename[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("!="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (string.Compare(s_coursename[i], V1) == -1 && !s_coursename[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals(">"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (string.Compare(s_coursename[i], V1) == -1 && string.Compare(s_coursename[i], V2) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (string.Compare(s_coursename[i], V1) == -1 && s_coursename[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    //>first
                    if (O1.Equals(">") && O2.Equals(">"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (string.Compare(s_coursename[i], V1) == 1 && string.Compare(s_coursename[i], V2) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (string.Compare(s_coursename[i], V1) == 1 && s_coursename[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("!="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (string.Compare(s_coursename[i], V1) == 1 && !s_coursename[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("<"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (string.Compare(s_coursename[i], V1) == 1 && string.Compare(s_coursename[i], V2) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (string.Compare(s_coursename[i], V1) == 1 && s_coursename[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    //IN First
                    if (O1.Equals("IN") && O2.Equals("IN"))
                    {
                        string[] t2 = V1.Split(',');
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                for (int m = 0; m < t2.Length; m++)
                                {
                                    if (s_coursename[i].Equals(t2[m]) && s_coursename[i].Equals(t[j]))
                                    {

                                        dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    }
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("="))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (s_coursename[i].Equals(t2[m]) && s_coursename[i].Equals(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("!="))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (s_coursename[i].Equals(t2[m]) && !s_coursename[i].Equals(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals(">"))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (s_coursename[i].Equals(t2[m]) && string.Compare(s_coursename[i], V2) == 1)
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("<"))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (s_coursename[i].Equals(t2[m]) && string.Compare(s_coursename[i], V2) == -1)
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                }
                            }
                        }
                    }

                }
                if (radioButton30.Checked)
                {
                    //=first
                    if (O1.Equals("=") && O2.Equals("="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (s_coursename[i].Equals(V1) || s_coursename[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (s_coursename[i].Equals(V1) || !s_coursename[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (s_coursename[i].Equals(V1) || string.Compare(s_coursename[i], V2) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (s_coursename[i].Equals(V1) || string.Compare(s_coursename[i], V2) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("=") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (s_coursename[i].Equals(V1) || s_coursename[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //!=first
                    if (O1.Equals("!=") && O2.Equals("!="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (!s_coursename[i].Equals(V1) || !s_coursename[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (!s_coursename[i].Equals(V1) || s_coursename[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals(">"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (!s_coursename[i].Equals(V1) || string.Compare(s_coursename[i], V2) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("<"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (!s_coursename[i].Equals(V1) || string.Compare(s_coursename[i], V2) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("!=") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (!s_coursename[i].Equals(V1) || s_coursename[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //<First
                    if (O1.Equals("<") && O2.Equals("<"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (string.Compare(s_coursename[i], V1) == -1 || string.Compare(s_coursename[i], V2) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (string.Compare(s_coursename[i], V1) == -1 || s_coursename[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("!="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (string.Compare(s_coursename[i], V1) == -1 || !s_coursename[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals(">"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (string.Compare(s_coursename[i], V1) == -1 || string.Compare(s_coursename[i], V2) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals("<") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (string.Compare(s_coursename[i], V1) == -1 || s_coursename[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //>first
                    if (O1.Equals(">") && O2.Equals(">"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (string.Compare(s_coursename[i], V1) == 1 || string.Compare(s_coursename[i], V2) == 1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (string.Compare(s_coursename[i], V1) == 1 || s_coursename[i].Equals(V1))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("!="))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (string.Compare(s_coursename[i], V1) == 1 || !s_coursename[i].Equals(V2))
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("<"))
                    {
                        for (int i = 0; i < S1.Length; i++)
                        {
                            if (string.Compare(s_coursename[i], V1) == 1 || string.Compare(s_coursename[i], V2) == -1)
                            {

                                dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                            }
                        }
                    }

                    if (O1.Equals(">") && O2.Equals("IN"))
                    {
                        string[] t = V2.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (string.Compare(s_coursename[i], V1) == 1 || s_coursename[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    break;
                                }
                            }
                        }
                    }

                    //IN First
                    if (O1.Equals("IN") && O2.Equals("IN"))
                    {
                        string[] t2 = V1.Split(',');
                        string[] t = V2.Split(',');
                        List<int> z = new List<int> { };
                        for (int i = 0; i < T1.Length; i++)
                        {
                            for (int j = 0; j < t.Length; j++)
                            {
                                if (s_coursename[i].Equals(t[j]))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    z.Add(i);
                                    break;
                                }
                            }
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (s_coursename[i].Equals(t2[m]))
                                {
                                    if (!z.Contains(i))
                                    {
                                        dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                        break;
                                    }
                                }
                            }

                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("="))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (s_coursename[i].Equals(t2[m]) || s_coursename[i].Equals(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("!="))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (s_coursename[i].Equals(t2[m]) || !s_coursename[i].Equals(V2))
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals(">"))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (s_coursename[i].Equals(t2[m]) || string.Compare(s_coursename[i], V2) == 1)
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    break;
                                }
                            }
                        }
                    }

                    if (O1.Equals("IN") && O2.Equals("<"))
                    {
                        string[] t2 = V1.Split(',');
                        for (int i = 0; i < S1.Length; i++)
                        {
                            for (int m = 0; m < t2.Length; m++)
                            {
                                if (s_coursename[i].Equals(t2[m]) || string.Compare(s_coursename[i], V2) == -1)
                                {

                                    dgvDisplay.Rows.Add(new string[] { s_ID[i], s_name[i], s_GPA[i], s_coursename[i] });
                                    break;
                                }
                            }
                        }
                    }
                }

            }
        }
    }
}